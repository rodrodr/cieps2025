[
  {
    "objectID": "S_1_IntroR.html",
    "href": "S_1_IntroR.html",
    "title": "Introducción al R",
    "section": "",
    "text": "¿Por qué usar R? Mira este video corto sobre las razones por las que aprender R y responde un cuestionario sobre las ideas principales cubiertas en el video.\n\nOtro video en español"
  },
  {
    "objectID": "S_1_IntroR.html#qué-es-el-r",
    "href": "S_1_IntroR.html#qué-es-el-r",
    "title": "Introducción al R",
    "section": "",
    "text": "¿Por qué usar R? Mira este video corto sobre las razones por las que aprender R y responde un cuestionario sobre las ideas principales cubiertas en el video.\n\nOtro video en español"
  },
  {
    "objectID": "S_1_IntroR.html#qué-es-el-rstudio",
    "href": "S_1_IntroR.html#qué-es-el-rstudio",
    "title": "Introducción al R",
    "section": "¿Qué es el RStudio?",
    "text": "¿Qué es el RStudio?\nRSudio es un entorno de desarrollo integrado (IDE) para R. Es un programa que te permite escribir y ejecutar código de R de manera más eficiente y efectiva.\nEl video abajo te dará una introducción a RStudio y explicará sus principales características."
  },
  {
    "objectID": "S_1_IntroR.html#matemática-básica-en-r",
    "href": "S_1_IntroR.html#matemática-básica-en-r",
    "title": "Introducción al R",
    "section": "Matemática básica en R",
    "text": "Matemática básica en R\n\nOperadores aritméticos\nEn R, puedes realizar operaciones matemáticas básicas como suma, resta, multiplicación y división. Los operadores aritméticos básicos en R son:\n\n+ para la suma\n- para la resta\n* para la multiplicación\n/ para la división\n^ para la potenciación\n\nEl R trabaja como una calculadora. Solo escribe la operación y ejecuta el código en un script o en la consola (fragmento de código) para ver los resultados. Por ejemplo, en el fragmento de código a continuación escribe 2+2 y, luego, haz clic en “Ejecutar código”:\nEl botón “Ejecutar código (Run code)” simula R y ejecuta el comando en un “entorno amigable para el usuario”. El resultado es 4. Ahora, prueba una nueva fórmula en la ventana de código: 2^4:\nEl símbolo “^” representa el signo exponencial. Por lo tanto, 16 es el resultado de 2 elevado a la 4.\nLas reglas aritméticas también se aplican para el orden de las operaciones en R. Las multiplicaciones y divisiones se realizan primero, solo después las sumas y restas.\nIntenta la siguiente fórmula: 100/4+1 en el fragmento de código:\nEl resultado es 100/4 = 25 y, luego, 25+1 = 26. Ahora, prueba esto: 100/(4+1). ¿Qué resultado deberíamos esperar?\n¿Qué mudó? Cuando usamos paréntesis ‘()’ o corchetes ‘{}’, la operación dentro de estos símbolos se resuelve primero. Por lo tanto, en este caso, 100/(4+1) = 100/5 = 20."
  },
  {
    "objectID": "S_1_IntroR.html#vectores",
    "href": "S_1_IntroR.html#vectores",
    "title": "Introducción al R",
    "section": "Vectores",
    "text": "Vectores\nLos vectores o variables son conjuntos de valores. Una lista de nombres, la edad de los estudiantes en la clase, las calificaciones obtenidas en todos los cursos, pueden representarse en vectores.\nCreemos una variable llamada edad con los valores 18, 19, 24, 35 y 40. En cualquier clase de matemáticas, esto se representaría como un conjunto, siendo edad={18,19,24,35,40}. R funciona de una manera muy similar: un nombre, un símbolo para representar una asignación y la definición de los valores que contendrá este nombre.\nEl símbolo de asignación en R es “&lt;-”. Por lo tanto, si creo una nueva variable, solo necesito decir, por ejemplo, x &lt;- 1. Esta expresión crea un nuevo vector (variable) llamado x con el valor de 1. Escribe x &lt;- 1 en el fragmento de código a continuación:\nAhora, escribe x &lt;- 1 en el fragmento de código a continuación y, en la línea siguiente, solo escribe x para recuperar el valor de x:\nPodrás ver que nada aparece en el primer fragmento de código, pero el resultado ‘[1] 1’ se presenta en el segundo. La razón es que, al escribir solo x, le pedimos a R que muestre todos los valores de x. En este caso, solo 1.\nEl R también funciona con otros tipos de datos, como texto y fechas. Podemos crear una nueva variable con texto. Creemos una variable/vector llamada ciudad y asignemos “Sevilla” a ella. Recuerda usar el símbolo de asignación ‘&lt;-’:\n\n\nCode\ncity &lt;- \"Sevilla\"\n\n\nAhora, podemos crear una nueva variable llamada hoy con la fecha de hoy:\n\n\nCode\nhoy &lt;- Sys.Date()\n\n\nHasta ahora, solo trabajamos con un valor para cada vector. Sin embargo, en el análisis de datos reales, las variables contienen miles o incluso millones de valores. Para hacerlo, necesitamos usar la función ‘c()’ que concatena o combina valores en una misma variable. Las funciones son una parte fundamental de R. Profundizaremos más en ellas en las próximas secciones.\nPor ejemplo, podemos asignar los valores de uno a cuatro a una variable llamada a con el siguiente código: “a &lt;- c(1,2,3,4)” o los nombres de las capitales de provincia de Andalucía con “a &lt;- c(”Huelva”, “Cádiz”, “Sevilla”, “Málaga”, “Granada”, “Córdoba”, “Jaén”, “Almería”)“.\nPuedes ver que los nombres o textos siempre están entre comillas. Los números no.\nAhora, es tu turno. Crea una variable llamada ‘edad’ con los valores 0, 1, 2, 3, 5, 8, 13, 21. Recuerda que los valores deben estar entre paréntesis y separados por comas.\n\n\nCode\nedad &lt;- c(0, 1, 2, 3, 5, 8, 13, 21)\n\n\nAhora, creemos un vector llamado ‘iber’ que contenga los nombres de los países ubicados en la Península Ibérica (Portugal, España, Andorra y Francia - algunas provincias):\n\n\nCode\niber &lt;- c(\"Portugal\", \"Spain\", \"Andorra\", \"France\")\n\n\nOtra gran característica de los vectores es la capacidad de realizar operaciones con ellos muy fácilmente. Imagina un vector a con valores 1, 2, 3, 4 y quiero multiplicarlos por 10. Solo necesito multiplicar a por 10 y la operación se aplica a todos los elementos del vector. Creemos un vector a con los valores anteriores y, luego, multipliquémoslo por 10:\n\n\nCode\na &lt;- c(1, 2, 3, 4)\n\na * 10\n\n\n[1] 10 20 30 40\n\n\nPodemos ver que el resultado fue 10, 20, 30 y 40. No fue necesario multiplicar cada elemento del vector para obtener los resultados. Cuando se trata de millones de valores, esta característica es realmente útil.\nLo mismo ocurre cuando intentamos hacer operaciones aritméticas entre variables. Creemos dos variables a, con 1,2,3,4, y b, con 10, 20, 30, y 40. Luego, sumémoslas:\n\n\nCode\na &lt;- c(1, 2, 3, 4)\nb &lt;- c(10, 20, 30, 40)\n\na + b\n\n\n[1] 11 22 33 44\n\n\nAhora, crea las mismas dos variables y divide b por a:\n\n\nCode\na &lt;- c(1, 2, 3, 4)\nb &lt;- c(10, 20, 30, 40)\n\nb / a\n\n\n[1] 10 10 10 10\n\n\nFinalmente, podemos combinar valores de dos vectores diferentes. Imagina que tenemos una variable (cyl) con las capitales de Castilla y León y otra con las de Andalucía (adl). Quiero combinar las dos en la variable “capitales”. Solo necesito usar la función c() para combinar las dos de la misma manera que la usé para combinar valores individuales. Intenta hacerlo por ti mismo (y recuerda un poco de geografía española) e inspecciona los resultados:\n\n\nCode\ncyl &lt;- c(\"Ávila\",\"Burgos\",\"León\",\"Palencia\",\"Salamanca\",\"Segovia\",\"Soria\",\"Valladolid\",\"Zamora\")\n\nadl &lt;- c(\"Almería\",\"Cádiz\",\"Córdoba\",\"Granada\",\"Huelva\",\"Jaén\",\"Málaga\",\"Sevilla\")\n\ncapitales &lt;- c(cyl, adl)\n\ncapitales\n\n\n [1] \"Ávila\"      \"Burgos\"     \"León\"       \"Palencia\"   \"Salamanca\" \n [6] \"Segovia\"    \"Soria\"      \"Valladolid\" \"Zamora\"     \"Almería\"   \n[11] \"Cádiz\"      \"Córdoba\"    \"Granada\"    \"Huelva\"     \"Jaén\"      \n[16] \"Málaga\"     \"Sevilla\""
  },
  {
    "objectID": "S_1_IntroR.html#operadores-relacionales-y-lógicos",
    "href": "S_1_IntroR.html#operadores-relacionales-y-lógicos",
    "title": "Introducción al R",
    "section": "Operadores relacionales y lógicos",
    "text": "Operadores relacionales y lógicos\nQuizás la tarea más importante en el análisis de datos es la comparación. ¿Cuáles son los países más ricos del mundo? ¿Quién gana más de 10 mil euros al mes? ¿Los votantes de Madrid apoyaron más al PP que los de Sevilla? ¿Es el salario mediano de las mujeres el mismo que el de los hombres? Estas son preguntas suelen requerir la comparación de valores para ser respondidas.\nEl R emplea una serie de operadores relacionales para permitir a los analistas extraer respuestas de los datos. Imagina dos variables, una con los votos al PP en dos ciudades españolas en las últimas cuatro elecciones generales (noviembre 2019, abril 2019, junio 2016 y diciembre 2015): ciudad_A = {29.93,23.53,40.82,36.77}, ciudad_B = {29.88,24.11,41.1,36.15}. Solo mirando los números es difícil decidir cuál de las dos ha mostrado más apoyo al PP en todo el período.\nLa estadística nos ayuda con esto proporcionando herramientas para la síntesis y comparación. Creemos estos dos vectores en R y, luego, probemos la hipótesis de que la ciudad A presentó un apoyo más fuerte en promedio en comparación con la ciudad B. Necesitamos usar la función mean() y el operador lógico “&gt;” mayor que para realizar la prueba.\n\n\nCode\ncity_A &lt;- c(29.93,23.53,40.82,36.77)\n\ncity_B &lt;- c(29.88,24.11,41.1,36.15)\n\nmean(city_A) &gt; mean(city_B)\n\n\n[1] FALSE\n\n\nLos resultados muestran que, por una fracción de porcentaje, la hipótesis es FALSA. La ciudad B es la que ha mostrado un mayor apoyo al PP en las últimas cuatro elecciones generales.\nLos operadores relacionales nos ayudan a probar hipótesis, seleccionar información y comparar valores:\n\na == b, es a igual b?\na &gt; b, es a mayor que b? o a &gt;=, es a mayor o igual a b?\na &lt; b, es a menor que b? o a &lt;=, es a menor o igual a b?\na != b, es a diferente de b\na %in% b, a contiene b (o los valores de b están contenidos en a)\n\nLos operadores relacionales pueden ser utilizados para filtrar datos o indicar casos que se ajustan a ciertas condiciones. Por ejemplo, en el código a continuación filtramos todos los valores de la variable x que están por encima de 75:\n\n\nCode\nx &lt;- c(1:100)\n\nx[x&gt;75]\n\n\n [1]  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94\n[20]  95  96  97  98  99 100\n\n\nOperadores lógicos, por otro lado, ayudan a establecer condiciones combinadas para la selección o filtrado:\n\n! - NOT - x[!x&gt;75] - recupera todos los valores menores o iguales a 75.\n& - AND - x[x&gt;10 & x&lt;50] - selecciona los valores entre 11 y 49.\n| - OR - x[x&gt;10 | x&lt;50] - selecciona todos los valores.\n\nInténtalo tu. Ahora x corresponde a los años entre 1992 y 2021. Selecciona solo aquellos años de 1992 a 2000 y de 2015 a 2021.\n\n\nCode\nx &lt;- c(1992:2021)\n\n\n\n\nCode\nx &lt;- c(1992:2021)\n\nx[x&lt;=2000 | x&gt;=2015]\n\n\n [1] 1992 1993 1994 1995 1996 1997 1998 1999 2000 2015 2016 2017 2018 2019 2020\n[16] 2021\n\n\nFinalmente, selecciona solo los años entre 1995 y 2002.\n\n\nCode\nx &lt;- c(1992:2021)\n\n\n\n\nCode\nx &lt;- c(1992:2021)\n\nx[x&gt;1994 & x&lt;2003]\n\n\n[1] 1995 1996 1997 1998 1999 2000 2001 2002\n\n\nFinalmente, selecciona todos los casos por encima de 2000, excepto para 2005 a 2007.\n\n\nCode\nx &lt;- c(1992:2021)\n\n\n\n\nCode\nx &lt;- c(1992:2021)\n\nx[x&gt;2000 & !x %in% c(2005,2006,2007)]\n\n\n [1] 2001 2002 2003 2004 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018\n[16] 2019 2020 2021"
  },
  {
    "objectID": "S_1_IntroR.html#tipos-de-dato-básicos-en-r",
    "href": "S_1_IntroR.html#tipos-de-dato-básicos-en-r",
    "title": "Introducción al R",
    "section": "Tipos de dato básicos en R",
    "text": "Tipos de dato básicos en R\nLa información puede ser codificada de maneras muy diferentes. Normalmente, asociamos la palabra datos con números, pero esta identificación es falsa por la exclusión de una diversidad de otros formatos y sistemas de codificación empleados en la representación de atributos del mundo empírico en símbolos. Tal enfoque clásico de los tipos de datos tiene una falla importante: no incluye información que no está codificada en texto. Los modelos de IA, por ejemplo, utilizan videos, sonidos o imágenes como fuente para sus análisis. Suelen traducir colores o formas en texto antes de realizar cualquier cálculo. El número 5, una imagen, una música, un poema o un video, todos representan diferentes tipos de datos.\n\nTipos de vector en R\nEn esta subsección, exploramos los tipos de datos más básicos en R. Representan tipos alternativos de vectores (o variables) utilizados para almacenar información y procesarla durante el análisis.\n\nCharacter - son vectores que almacenan información de texto. Cualquier tipo de texto, desde una simple palabra hasta libros enteros, puede ser almacenado en vectores de caracteres. Simplemente escribe ‘print(a)’ después de la definición de la variable a a continuación para inspeccionar los resultados:\n\n\n\nCode\na &lt;- c(\"Este es una variable de tipo caracter.\",\"Guarda solamente texto.\")\n\n\n\n\nCode\na &lt;- c(\"Este es una variable de tipo caracter.\",\"Guarda solamente texto.\")\n\nprint(a)\n\n\n[1] \"Este es una variable de tipo caracter.\"\n[2] \"Guarda solamente texto.\"               \n\n\n\nFactor - es un tipo de variable utilizado para representar datos categóricos y ordinales. La mayoría de las encuestas utilizan códigos numéricos como sustitutos de nombres para evitar errores de escritura y ahorrar espacio en disco. El vector de factor en R permite definir las etiquetas correspondientes para cada valor numérico. Por ejemplo, tenemos un vector a con valores repetidos de 1,2,3,4 correspondientes a “Democracia”, “Autocracia”, “Semi-democracia” y “Totalitarismo”. Cuando analizamos los datos, preferimos ver las etiquetas en lugar de números sin sentido. Factor hace precisamente eso en R.\n\nPrimero, presiona el botón “Run code” para ver los resultados. Probablemente verás un conjunto de números como se declara en el vector a a continuación.\nLuego, escribe ‘print(b)’ al final del fragmento de código a continuación y, luego, presiona “run code”:\n\n\n\n\nCode\n# Declara una variable a con 1,2,3, y 4 como valores\na &lt;- c(1,1,2,3,4,2,1,4,3,1,4,1,3,3,2,1,4,1)\n\n# Inspecciona los resultados de a\nprint(a)\n\n\n [1] 1 1 2 3 4 2 1 4 3 1 4 1 3 3 2 1 4 1\n\n\nCode\n# convierte ka variable en un factor, \n# asociando etiquetas a cada valor\nb &lt;- factor(x = a, \n            levels = c(1,2,3,4), \n            labels = c(\"Democracia\", \n                       \"Autocracia\", \n                       \"Semidemocracia\", \n                       \"Totalitarismo\"))\n\n# Inspecciona los resultados para b\n\n\n\n\nCode\n# Declara una variable a con 1,2,3, y 4 como valores\na &lt;- c(1,1,2,3,4,2,1,4,3,1,4,1,3,3,2,1,4,1)\n\n# Inspecciona los resultados de a\nprint(a)\n\n\n [1] 1 1 2 3 4 2 1 4 3 1 4 1 3 3 2 1 4 1\n\n\nCode\n# convierte ka variable en un factor, \n# asociando etiquetas a cada valor\nb &lt;- factor(x = a, \n            levels = c(1,2,3,4), \n            labels = c(\"Democracia\", \n                       \"Autocracia\", \n                       \"Semidemocracia\", \n                       \"Totalitarismo\"))\n\n# Inspecciona los resultados para b\nprint(b)\n\n\n [1] Democracia     Democracia     Autocracia     Semidemocracia Totalitarismo \n [6] Autocracia     Democracia     Totalitarismo  Semidemocracia Democracia    \n[11] Totalitarismo  Democracia     Semidemocracia Semidemocracia Autocracia    \n[16] Democracia     Totalitarismo  Democracia    \nLevels: Democracia Autocracia Semidemocracia Totalitarismo\n\n\n¿Qué ha cambiado? Como puedes ver, ahora, el vector b reemplaza los números con sus respectivas etiquetas o tipos de régimen.\nIntenta calcular la frecuencia de los regímenes en la variable b escribiendo el comando ‘table(b)’ en el fragmento de código a continuación:\n\n\nCode\n# Declara una variable a con 1,2,3, y 4 como contenido\na &lt;- c(1,1,2,3,4,2,1,4,3,1,4,1,3,3,2,1,4,1)\n\n# Inspecciona los resultados para a\nprint(a)\n\n\n [1] 1 1 2 3 4 2 1 4 3 1 4 1 3 3 2 1 4 1\n\n\nCode\n# convierte la variable en un factor, \n# asociando etiquetas a cada valor\nb &lt;- factor(x = a, \n            levels = c(1,2,3,4), \n            labels = c(\"Democracia\", \n                       \"Autocracia\", \n                       \"Semi-democracia\", \n                       \"Totalitarismo\"))\n\n# Calcula la frecuencia usando table(b)\n\n\n\n\nCode\n# Declara una variable a con 1,2,3, y 4 como contenido\na &lt;- c(1,1,2,3,4,2,1,4,3,1,4,1,3,3,2,1,4,1)\n\n# Inspecciona los resultados para a\nprint(a)\n\n\n [1] 1 1 2 3 4 2 1 4 3 1 4 1 3 3 2 1 4 1\n\n\nCode\n# convierte la variable en un factor, \n# asociando etiquetas a cada valor\nb &lt;- factor(x = a, \n            levels = c(1,2,3,4), \n            labels = c(\"Democracia\", \n                       \"Autocracia\", \n                       \"Semi-democracia\", \n                       \"Totalitarismo\"))\n\n# Calcula la frecuencia usando table(b)\ntable(b)\n\n\nb\n     Democracia      Autocracia Semi-democracia   Totalitarismo \n              7               3               4               4 \n\n\n¿Cuál es el tipo de régimen más común? ¿Y cuál es el menos común?\n¡Excelente! Acabas de hacer tu primera tabla de frecuencias.\n\nNOTA: Revisa el código anterior. Puedes ver que hay una secuencia clara en él. En primer lugar, necesitamos decirle a R que el vector a contiene esos valores. En segundo lugar, inspeccionamos el contenido de a. En tercer lugar, creamos un nuevo vector llamado b a través de la conversión de los valores de a a un vector con etiquetas categóricas. Finalmente, usamos ‘table(b)’ para calcular la tabla de frecuencias de todas las categorías en el vector b. Si no hubiéramos declarado a, en primer lugar, todas las instrucciones siguientes no funcionarían. A partir de ahora, presta atención a la secuencia del código. Será MUY importante en el futuro.\n\n\nNumeric - representa vectores (variables) con datos continuos. También puede almacenar información discreta, pero trata estos datos como si fueran continuos.\n\nAbajo, creamos otro vector con el nombre a, pero ahora, tiene algunos números (9.5,19.5,30.5, y 40.5) en él. Luego, inspeccionamos su contenido. Una vez hecho esto, por favor, realiza los siguientes pasos:\n\nPrimero, escribe sum(a) para sumar todos los valores de a.\nLuego, multiplica los valores de a por 10 para refrescar algunos de los ejemplos de la última sesión.\nFinalmente, haz clic en ‘Run Code’ para ejecutar el código:\n\n\n\nCode\n# Declara una variable a con 9.5,19.5,30.5, y 40.5 como contenido\na &lt;- c(9.5,19.5,30.5,40.5)\n\n# Inspecciona los resultados para a\nprint(a)\n\n\n[1]  9.5 19.5 30.5 40.5\n\n\nCode\n# Suma todos los valores empleando la función sum()\n\n\n# Repaso: multiplica todos los valores de a por 10\n\n\n\n\nCode\n# Declara una variable a con 9.5,19.5,30.5, y 40.5 como contenido\na &lt;- c(9.5,19.5,30.5,40.5)\n\n# Inspecciona los resultados para a\nprint(a)\n\n\n[1]  9.5 19.5 30.5 40.5\n\n\nCode\n# Suma todos los valores empleando la función sum()\nsum(a)\n\n\n[1] 100\n\n\nCode\n# Repaso: multiplica todos los valores de a por 10\na * 10\n\n\n[1]  95 195 305 405\n\n\n\nInteger - son vectores utilizados para contener números discretos. Edades, el número de hijos, páginas en un libro, todos estos son ejemplos de cifras discretas. Difieren de numeric solo porque son redondos, es decir, no tienen fracciones.\n\nEl código a continuación es muy similar al anterior. Solo hay tres diferencias:\n\nel vector a ahora contiene solo enteros (números discretos);\nen lugar de sum(a) debes usar mean(a) para calcular el valor promedio de a y;\nen lugar de multiplicar por 10, debes calcular el cuadrado de los valores de a.\n\n\n\nCode\n# Declara una variable a con 10,20,30, y 40 como contenido\na &lt;- c(10,20,30,40)\n\n# Inspecciona los resultados para a\nprint(a)\n\n\n[1] 10 20 30 40\n\n\nCode\n# Encuentra el valor promedio de a usando la función mean()\n\n\n\n\nCode\n# Declara una variable a con 10,20,30, y 40 como contenido\na &lt;- c(10,20,30,40)\n\n# Inspecciona los resultados para a\nprint(a)\n\n\n[1] 10 20 30 40\n\n\nCode\n# Encuentra el valor promedio de a usando la función mean()\nmean(a)\n\n\n[1] 25\n\n\n\nNOTA: En todos los fragmentos de código, podemos ver que hay líneas de texto coloreadas en verde. Estas líneas comienzan con el símbolo de almohadilla ‘#’. Todas las líneas que comienzan (o continúan) con # en R se consideran comentarios. Este recurso es valioso para hacer un seguimiento de lo que estamos haciendo y de lo que queremos lograr con nuestro código.\nExisten dos tipos de comentarios en R:\n\nComentarios de línea completa:\n# El siguiente comando calcula la media de la variable a.\nmean(a)\nComentarios en línea:\nmean(a) # este comando calcula la media de la variable a\n\nPuedes usar ambos para hacer un seguimiento de tus análisis. Depende principalmente de tu estilo y del detalle del comentario que deseas lograr en tu código.\n\n\nDate - los vectores de fecha y hora almacenan fechas y horas. Son particularmente útiles para calcular diferencias de tiempo. El ejemplo a continuación asigna la hora y la fecha actual a dos variables, a y b, con una diferencia de 3 segundos. Usando la función ‘print()’, se pueden inspeccionar los resultados. Al final, podemos verificar si el lapso de tiempo entre las dos variables es realmente de tres segundos restando a de b.\n\n\n\nCode\n# Guarda la fecha y hora actuales en la variable a\na &lt;- Sys.time()\n\n# Pone el R \"a dormir\" (no hacer nada) por 3 segundos\nSys.sleep(3)\n\n# Guarda la fecha y hora actuales en la variable b\nb &lt;- Sys.time()\n\n# Inspecciona el valor de a\nprint(a)\n\n\n[1] \"2025-01-12 20:10:40 CET\"\n\n\nCode\n# Inspecciona el valor de b\nprint(b)\n\n\n[1] \"2025-01-12 20:10:43 CET\"\n\n\nCode\n# Repaso: subtrae a de b.\n\n\n\n\nCode\n# Guarda la fecha y hora actuales en la variable a\na &lt;- Sys.time()\n\n# Pone el R \"a dormir\" (no hacer nada) por 3 segundos\nSys.sleep(3)\n\n# Guarda la fecha y hora actuales en la variable b\nb &lt;- Sys.time()\n\n# Inspecciona el valor de a\nprint(a)\n\n\n[1] \"2025-01-12 20:10:43 CET\"\n\n\nCode\n# Inspecciona el valor de b\nprint(b)\n\n\n[1] \"2025-01-12 20:10:46 CET\"\n\n\nCode\n# Repaso: subtrae a de b.\nb-a\n\n\nTime difference of 3.008238 secs\n\n\n\nLogical - son vectores que almacenan valores lógicos. Por ejemplo, si creas una variable de prueba para mayores de 65 años, puedes marcar cada valor de esta variable con FALSE o TRUE.\n\n\n\nCode\n# Guarda valores verdaderos o falsos en el\n# vector a\na &lt;- c(TRUE, TRUE,FALSE, TRUE, FALSE)\n\n# Inspecciona los valores de a\nprint(a)\n\n\n[1]  TRUE  TRUE FALSE  TRUE FALSE\n\n\nCode\n# También puedes convertir valores a \n# verdadero o falso empleando condiciones\n\n# Crea una variable a con edades\na &lt;- c(66,45,33, 67,89,22)\n\n# Averigua cuales valores de a \n# son iguales o superiores a 65 \n# y los guarda en el vector b\nb &lt;- a&gt;=65\n\n# Inspecciona los resultados de b\nprint(b)\n\n\n[1]  TRUE FALSE FALSE  TRUE  TRUE FALSE\n\n\n\n\n¿De qué tipo es mi vector?\nPodemos verificar el tipo de un vector utilizando la función iniciada con is. y el tipo. Son los siguientes:\n\nis.character()\nis.factor()\nis.numeric()\nis.integer()\nis.logical()\n\nOtro modo, más general, de averiguar el tipo de dato consisten en emplear la función class(). Pero en lugar de dar TRUE o FALSE, la función class() devuelve el tipo de datos.\nEn el siguiente fragmento de código, verificamos si el vector a es numérico y, si no lo es, averiguamos a qué tipo de datos pertenece:\n\n\nCode\n# Guarda valores en el vector a\na &lt;- c(\"1\",\"2\",\"3\",\"4\",\"5\")\n\n# Averigua si es una variable numérica\n\n\n# Determina de qué tipo es la variable\n\n\n\n\nCode\n# Guarda valores en el vector a\na &lt;- c(\"1\",\"2\",\"3\",\"4\",\"5\")\n\n# Averigua si es una variable numérica\nis.numeric(a)\n\n\n[1] FALSE\n\n\nCode\n# Determina de qué tipo es la variable\nclass(a)\n\n\n[1] \"character\"\n\n\n\n\nConversión de tipos de datos\nEn muchas ocasiones, los datos muestran errores e imperfecciones. En algunos casos, los números se codifican como texto. O las variables de texto deben convertirse en categóricas.\nLas funciones para convertir vectores entre tipos de datos son:\n\nas.character() - convierte cualquier formato en un vector de caracteres.\nas.numeric() - convierte en numérico. Esta función es más restrictiva, ya que solo los números representados como texto o factores pueden convertirse en números. Una variable x &lt;- c(“1”,“2”,“3”,“4”) devolvería c(1,2,3,4). Un factor x &lt;- c(“Bajo”, “Medio”, “Alto”) devolvería c(1,2,3).\nas.integer() - convierte en entero. Exactamente igual que la función anterior. La única diferencia radica en que esta función solo devuelve números redondos. Una variable x &lt;- c(“1.”,“2.3”,“3.4”,“4.3”) devolvería c(1,2,3,4).\nas.logical() - convierte ceros en FALSE y números positivos en TRUE.\nas.Date() - convierte texto formateado como fechas en vectores de fecha que se pueden emplear para comparar fechas y establecer diferencias de tiempo.\nas.factor() - convierte en factor. Tanto los números como el texto pueden servir como factores. Por lo tanto, la conversión es directa.\n\nEjercicio 1. De texto a número. Convierte la variable a de carácter a numérico y entero. Tras cada conversión, verifica si la conversión fue exitosa.\n\n\nCode\n# Guarda números entre comillas en el vector a\na &lt;- c(\"1\",\"2\",\"3\",\"4\",\"5\")\n\n# Convierte a  numérico\na &lt;- as.numeric(a)\n\n# Averigua si a es numérico\n\n# Convierte a a integer (entero)\na &lt;- as.integer(a)\n\n# Averigua si a es integer \n\n\n\n\nCode\n# Guarda números entre comillas en el vector a\na &lt;- c(\"1\",\"2\",\"3\",\"4\",\"5\")\n\n# Convierte a  numérico\na &lt;- as.numeric(a)\n\n# Averigua si a es numérico\nis.numeric(a)\n\n\n[1] TRUE\n\n\nCode\n# Convierte a a integer (entero)\na &lt;- as.integer(a)\n\n# Averigua si a es integer \nis.integer(a)\n\n\n[1] TRUE\n\n\nEjercicio 2. De número a texto. También puedes convertir números en texto fácilmente. Convierte la variable a de numérica a carácter. Tras cada conversión, verifica si la conversión fue exitosa.\n\n\nCode\n# Crea el vector a con números de 1 a 5\na &lt;- c(1:5)\n\n# Convierte a character\na &lt;- as.character(a)\n\n# Averigua si a es un vector de tipo character\n\n\n\n\nCode\n# Crea el vector a con números de 1 a 5\na &lt;- c(1:5)\n\n# Convierte a character\na &lt;- as.character(a)\n\n# Averigua si a es un vector de tipo character\nis.character(a)\n\n\n[1] TRUE\n\n\nEjercicio 3. De texto a fecha. Si una variable solo contiene fechas representadas como texto, los usuarios no serán capaces de calcular diferencias de tiempo. Por eso es importante convertir la información del calendario en un tipo de fecha adecuado para obtener todas las ventajas de poder establecer métricas de tiempo en R. Convierte la variable a de carácter a fecha. Tras cada conversión, verifica si la conversión fue exitosa.\n\n\nCode\n# Guarda fechas en el vector a como texto\na &lt;- c(\"2001-01-01\",\"2022-07-15\",\"2013-12-15\",\"2019-07-06\",\"2015-05-05\")\n\n# Convierte a Date (fecha)\na &lt;- as.Date(a)\n\n# Puesto que no hay una función \n# is.Date, averigua la clase de a\n\n\n\n\nCode\n# Guarda fechas en el vector a como texto\na &lt;- c(\"2001-01-01\",\"2022-07-15\",\"2013-12-15\",\"2019-07-06\",\"2015-05-05\")\n\n# Convierte a Date (fecha)\na &lt;- as.Date(a)\n\n# Puesto que no hay una función \n# is.Date, averigua la clase de a\nclass(a)\n\n\n[1] \"Date\"\n\n\nEjercicio 4. De texto a factor. En el caso de que queramos trabajar con categorías, pero la variable original sea un número o un carácter, necesitamos convertirla en un factor. El siguiente código convierte la variable a de carácter a factor. Comprueba si la conversión creó un vector de factores.\n\n\nCode\n# Guarda valores numéricos en el vector a\na &lt;- c(1,2,1,3,4,1,2,1,1,3,4,2,2)\n\n# Convierte a factor\na &lt;- factor(a, levels=c(1,2,3,4), labels = c(\"Coffee\",\"Tea\",\"Water\",\"Juice\"))\n\n# Averigua si a es un factor\n\n\n\n\nCode\n# Guarda valores numéricos en el vector a\na &lt;- c(1,2,1,3,4,1,2,1,1,3,4,2,2)\n\n# Convierte a factor\na &lt;- factor(a, levels=c(1,2,3,4), labels = c(\"Coffee\",\"Tea\",\"Water\",\"Juice\"))\n\n# Averigua si a es un factor\nis.factor(a)\n\n\n[1] TRUE\n\n\nEjercicio 5. De factor a texto. El último ejemplo convierte factores en texto. A veces solo queremos conservar el texto de la variable y no considerarla como una variable categórica formal. En esos casos, necesitamos convertir el vector de factor a carácter.\n\n\nCode\n# Guarda valores numéricos en el vector a\na &lt;- c(1,2,1,3,4,1,2,1,1,3,4,2,2)\n\n# Convierte a um factor\na &lt;- factor(a, levels=c(1,2,3,4), labels = c(\"Coffee\",\"Tea\",\"Water\",\"Juice\"))\n\n# Ahora convierte a character\na &lt;- as.character(a)\n\n# Averigua si a es un vector de character\n\n\n\n\nCode\n# Guarda valores numéricos en el vector a\na &lt;- c(1,2,1,3,4,1,2,1,1,3,4,2,2)\n\n# Convierte a um factor\na &lt;- factor(a, levels=c(1,2,3,4), labels = c(\"Coffee\",\"Tea\",\"Water\",\"Juice\"))\n\n# Ahora convierte a character\na &lt;- as.character(a)\n\n# Averigua si a es un vector de character\nis.character(a)\n\n\n[1] TRUE"
  },
  {
    "objectID": "S_1_IntroR.html#tipos-de-dato-avanzados-en-r",
    "href": "S_1_IntroR.html#tipos-de-dato-avanzados-en-r",
    "title": "Introducción al R",
    "section": "Tipos de dato avanzados en R",
    "text": "Tipos de dato avanzados en R\n\nMatrices\nDe acuerdo con el diccionario de Oxford, una matriz es:\n“un conjunto rectangular de cantidades o expresiones en filas y columnas que se trata como una sola entidad y se manipula de acuerdo con reglas particulares.”\nAnalicemos esta definición en partes:\n\nConjunto rectangular de cantidades o expresiones en filas y columnas\nTratado como una sola entidad\nManipulado de acuerdo con reglas particulares\n\nEn R, las matrices solo usan un tipo de datos: números, textos, fechas, etc. En su mayoría, las matrices son numéricas y son muy útiles para acelerar el cálculo de grandes conjuntos de datos. En ciencias sociales, generalmente empleamos Data Frames (la próxima subsección). Aunque son más lentos, permiten que se presente información de diferentes tipos (textos, números, fechas, etc.) en la misma tabla.\n\n\nCode\n# Crea una matriz de 3 líneas x 2 columnas\nmatrix(data = c(2, 3, 4, 5, 6, 7), nrow = 3, ncol = 2)\n\n\n     [,1] [,2]\n[1,]    2    5\n[2,]    3    6\n[3,]    4    7\n\n\nCode\n# Crea una matriz de 2 líneas x 3 columnas\nmatrix(data = c(2, 3, 4, 5, 6, 7), nrow = 2, ncol = 3)\n\n\n     [,1] [,2] [,3]\n[1,]    2    4    6\n[2,]    3    5    7\n\n\n\n\nData Frames (tablas con N líneas x N columnas)\nEste es el tipo de dato más familiar en estudios académicos. Cualquier hoja de cálculo de Excel o archivo de datos SPSS se organiza en una tabla caracterizada por un número múltiple de filas y columnas. Por lo general:\n\nLíneas representan observaciones o unidades de observación. Pueden ser países, entrevistas, partidos, etc.\nColumnas están compuestas por atributos que pertenecen a estas unidades de observación. El PIB de un país, la edad de una persona en una entrevista de encuesta, el porcentaje de votos en un partido dado, etc.\n\nEn R, un objeto data.frame es una colección de vectores (o variables). Por lo tanto, podemos tener un data.frame con las columnas nombre, edad, sexo, etc.\nEl siguiente código crea un data.frame con algunas variables:\n\n\nCode\n# Crea vectores para nombres, edades, sexo, y fechas de nacimiento. \nnm &lt;- c(\"Cristina\", \"Rodrigo\", \"John\", \"Álvaro\", \"Castelar\",\"Sofia\")\nag &lt;- c(32, 45, 39, 25, 24, 26)\nsx &lt;- c(\"Femenino\",\"Masculino\",\"Masculino\",\"Masculino\",\"Femenino\",\"Femenino\")\nbt &lt;- as.Date(c(\"1990-12-12\",\"1977-11-22\",\"1983-09-15\",\"1997-09-08\",\"1999-02-28\",\"1998-05-27\"))\n\n# Crea un data.frame con dichas variables\ndf &lt;- data.frame(\n                  Name=nm, \n                  Age=ag, \n                  Sex=sx, \n                  Birth=bt)\n\n#Inspecciona las seis primeras líneas del data.frame\nhead(df)\n\n\n      Name Age       Sex      Birth\n1 Cristina  32  Femenino 1990-12-12\n2  Rodrigo  45 Masculino 1977-11-22\n3     John  39 Masculino 1983-09-15\n4   Álvaro  25 Masculino 1997-09-08\n5 Castelar  24  Femenino 1999-02-28\n6    Sofia  26  Femenino 1998-05-27\n\n\nNo es común crear data.frames usando variables. Este ejemplo solo ilustra la estructura de este tipo de objeto. Más adelante en el curso, aprenderemos a abrir archivos de datos (Excel, SPSS, CSV, etc.) en R como data.frames. Por ahora, solo necesitamos entender cómo funciona y su estructura básica. Cada columna funciona como una variable o vector. Por lo tanto, podemos hacer cálculos usando estas variables. Verifiquemos si la variable edades es correcta usando la fecha de nacimiento y la función ‘Sys.Date()’ que devuelve la fecha de hoy para compararla con las variables en el data.frame df:\n\n\nCode\n# Crea vectores para nombres, edades, sexo, y fechas de nacimiento. \nnm &lt;- c(\"Cristina\", \"Rodrigo\", \"John\", \"Álvaro\", \"Castelar\",\"Sofia\")\nag &lt;- c(32, 45, 39, 25, 24, 26)\nsx &lt;- c(\"Female\",\"Male\",\"Male\",\"Male\",\"Female\",\"Female\")\nbt &lt;- as.Date(c(\"1990-12-12\",\"1977-11-22\",\"1983-09-15\",\"1997-09-08\",\"1999-02-28\",\"1998-05-27\"))\n\n# Crea un data.frame utilizando dichas variables\ndf &lt;- data.frame(\n                  Name=nm, \n                  Age=ag, \n                  Sex=sx, \n                  Birth=bt)\n\n# Calcula las edades usando la variable Birth en el data.frame df\n\n# Primero, calculamos la edad en años de cada persona en el data.frame df.\n# Para hacerlo, necesitamos restar la fecha de nacimiento de la fecha de hoy (Sys.Date())\n# y dividir por 365 días. Finalmente, redondeamos el número a años completos con round().\nageb &lt;- (Sys.Date()-df$Birth)/365 # Calcula la edad en años\nageb &lt;- round(ageb) # Redondea los valores a años completos\n\n# Muestra los resultados\nprint(ageb)\n\n\nTime differences in days\n[1] 34 47 41 27 26 27\n\n\nCode\n# Ahora, comparamos la columna Age del data.frame df con el \n# vector ageb para verificar si todas las edades son correctas\ndf$Age==ageb\n\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE\n\n\nPodemos ver que la edad de Sofia es incorrecta. De acuerdo con la fecha de nacimiento, debería tener 25 años, pero en el data.frame, tiene 26. Por lo tanto, necesitamos corregir esta variable. Para hacerlo, podemos reemplazar la columna Age en el data.frame df con el vector ageb.\nHazlo tú mismo (DIY)\nAhora es tu turno. Por favor, crea un data.frame llamado “capitales” con las 8 capitales de provincia de Andalucía que contenga las siguientes variables: Ciudad, Población y Área_Km2. Luego, visualiza las primeras seis filas usando head().\nPLUS ULTRA:\n\n¿Podrías calcular la densidad demográfica de cada capital y crear un nuevo vector llamado dens con ella?\n¿Qué tal asignar esta nueva variable (densidad demográfica) a una nueva columna llamada Densidad en el data.frame capitales?\n\n¡Inténtalo!\nAYUDA:\nPuedes encontrar la información en Wikipedia.\n\n\nCode\n# Crea vectores para ciudad, poblacion y area\n\n# vector city con las capitales de provincia de Andalucía\ncity &lt;- c(\"Almería\",\"Cádiz\",\"Córdoba\",\"Granada\", \"Huelva\", \"Jaén\", \"Málaga\", \"Sevilla\")\npop &lt;- c(200578, 111811, 323768, 230595, 142532, 111888, 586384, 684025)\narea &lt;- c(295.51, 12.3, 1254.91, 88.02, 151.33, 424.3, 394.98, 141.42)\n\n# Crea un data.frame con dichas variables\ncapitals &lt;- data.frame(\n                  City=city, \n                  Population=pop, \n                  Area_Km2=area)\n\n# Densidad demográfica\ndens &lt;- capitals$Population/capitals$Area_Km2\n\n# Visualiza los resultados\nprint(dens)\n\n\n[1]  678.7520 9090.3252  258.0010 2619.8023  941.8622  263.7002 1484.5916\n[8] 4836.8335\n\n\nCode\n# Añade la densidad demográfica al data.frame\ncapitals$Density &lt;- dens\n\n# Visualiza los resultados usando head\nhead(capitals)\n\n\n     City Population Area_Km2   Density\n1 Almería     200578   295.51  678.7520\n2   Cádiz     111811    12.30 9090.3252\n3 Córdoba     323768  1254.91  258.0010\n4 Granada     230595    88.02 2619.8023\n5  Huelva     142532   151.33  941.8622\n6    Jaén     111888   424.30  263.7002\n\n\n\n\nListas\nUna lista es un tipo de objeto en R que puede contener cualquier tipo de objeto. Es más que un tipo de dato, es un sistema de almacenamiento para múltiples objetos o información.\nImaginemos que tenemos una lista llamada Libros para describir diferentes aspectos de los libros: título (vector de caracteres), subtítulo (caracter), autor (caracter), ISBN (entero), número de páginas (entero), precio pagado (número), fecha de publicación (fecha). En la lista Libros, también almacenamos la tabla de contenidos y sus respectivas páginas como un data.frame. Imagina que trabajas en una biblioteca. Por lo tanto, la lista Libros también almacena el registro actualizado de retiros y devoluciones (data.frame). También puedes almacenar la portada del libro (raw o un objeto de imagen) y una tabla con el número de veces que cada libro fue prestado (un objeto de tabla).\nLas listas son muy fáciles de crear. Es literalmente como una bolso en el que simplemente dejas caer cosas. También tiene los mismos problemas que puede tener un bolso o mochila llena: se vuelve difícil recuperar información si el bolso no está organizado.\nPodemos dar nombres a cada objeto en la lista para facilitar su búsqueda más adelante.\n\n\nCode\n# Crea un data.frame con todos los movimientos (préstamos y devoluciones)\n# de un libro en nuestra biblioteca.\nprestamo &lt;- data.frame(\n                      libro=c(1,\n                              1),\n                      usuario = c(\"Álvaro\",\n                                \"John\"),\n                      fecha_prestamo=as.Date(\n                                      c(\"2022-07-01\",\n                                        \"2022-07-08\")\n                                      ),\n                      fecha_devolucion=as.Date(\n                                      c(\"2022-07-07\", \n                                        NA)\n                                      ),\n                      dev_esperada=as.Date(\n                                      c(\"2022-07-07\",\n                                        \"2022-07-14\")\n                                      )\n                      )\n\n# Crea una lista con los datos sobre el libro y los movimientos\nlibros &lt;- list(\n              cod_libro=c(1),\n              Titulo=\"Por qué YO soy tan especial\",\n              Autor=\"Yo mismito\",\n              Editorial=\"Ediciones E(R)go\",\n              ISBN=\"8598-5682323\",\n              Paginas=345,\n              Precio=25.42,\n              catalogo=\"C.182.765\",\n              movimientos=prestamo\n              )\n\n# Inspecciona el número de veces que el\n# libro ha sido prestado\nlibros$movimientos\n\n\n  libro usuario fecha_prestamo fecha_devolucion dev_esperada\n1     1  Álvaro     2022-07-01       2022-07-07   2022-07-07\n2     1    John     2022-07-08             &lt;NA&gt;   2022-07-14"
  },
  {
    "objectID": "S_2_Datos.html",
    "href": "S_2_Datos.html",
    "title": "‘Picando’ datos",
    "section": "",
    "text": "En esta sección del tutorial se presentan algunas pistas sobre cómo navegar data.frames. Aquí, exploramos algunas tareas básicas en el manejo de datos como renombrar columnas, filtrar y seleccionar, y fusionar datos.\nPara ilustrar las ideas, seleccionamos 10 países y algunas variables del conjunto de datos mundial originalmente contenido en el paquete ‘polscidata’. Lo llamamos w (de world, vamos), puedes inspeccionar el contenido en el siguiente fragmento de código:\n\n\nCode\n# Muestra todos los valores de w\nw\n\n\n\n\n\n\n\n\n\n\n\nLa función names() recupera todos los nombres de las columnas de un data.frame dado. Si usamos names(w), R nos mostrará el nombre y el orden de cada columna en el conjunto de datos:\n\n\nCode\n# Nos da los nombres de todas las columnas del\n# data.frame en el orden original que aparecen\nnames(w)\n\n\n  [1] \"country\"             \"gini10\"              \"dem_level4\"         \n  [4] \"dem_rank14\"          \"dem_score14\"         \"lifeex_f\"           \n  [7] \"lifeex_m\"            \"literacy\"            \"oil\"                \n [10] \"pop_0_14\"            \"pop_15_64\"           \"pop_65_older\"       \n [13] \"fertility\"           \"govregrel\"           \"regionun\"           \n [16] \"religoin\"            \"spendeduc\"           \"spendhealth\"        \n [19] \"spendmil\"            \"hdi\"                 \"pop_age\"            \n [22] \"sexratio\"            \"pop_total\"           \"pop_urban\"          \n [25] \"gender_unequal\"      \"gender_unequal_rank\" \"arda\"               \n [28] \"lifeex_total\"        \"debt\"                \"colony\"             \n [31] \"confidence\"          \"decent08\"            \"dem_other\"          \n [34] \"dem_other5\"          \"democ\"               \"democ11\"            \n [37] \"democ_regime\"        \"democ_regime08\"      \"district_size3\"     \n [40] \"durable\"             \"effectiveness\"       \"enpp3_democ\"        \n [43] \"enpp3_democ08\"       \"dnpp_3\"              \"eu\"                 \n [46] \"fhrate04_rev\"        \"fhrate08_rev\"        \"frac_eth\"           \n [49] \"frac_eth2\"           \"frac_eth3\"           \"free_business\"      \n [52] \"free_corrupt\"        \"free_finance\"        \"free_fiscal\"        \n [55] \"free_govspend\"       \"free_invest\"         \"free_labor\"         \n [58] \"free_monetary\"       \"free_property\"       \"free_trade\"         \n [61] \"free_overall\"        \"free_overall_4\"      \"gdp08\"              \n [64] \"gdp_10_thou\"         \"gdp_cap2\"            \"gdp_cap3\"           \n [67] \"gdpcap2_08\"          \"gdpcap3_08\"          \"gdpcap08_2\"         \n [70] \"gdppcap08\"           \"gdppcap08_3\"         \"gender_equal3\"      \n [73] \"gini04\"              \"gini08\"              \"hi_gdp\"             \n [76] \"indy\"                \"muslim\"              \"natcode\"            \n [79] \"oecd\"                \"pmat12_3\"            \"polity\"             \n [82] \"pr_sys\"              \"protact3\"            \"regime_type3\"       \n [85] \"rich_democ\"          \"unions\"              \"unnetgro\"           \n [88] \"unnetuse\"            \"unpovnpl\"            \"unremitp\"           \n [91] \"unremitt\"            \"vi_rel3\"             \"votevap00s\"         \n [94] \"votevap90s\"          \"women05\"             \"women09\"            \n [97] \"women13\"             \"ipu_wom13_all\"       \"womyear\"            \n[100] \"womyear2\"            \"dem_economist\"       \"democ.yes\"          \n[103] \"country1\"           \n\n\nComo podemos ver, hay 103 columnas en el conjunto de datos que comienzan con “country”. Si analizamos la lista de nombres de columnas más de cerca, podemos ver que la columna número 16 está mal escrita como “religoin”. Deberíamos corregirlo cambiándolo a “religion”. Hacemos eso simplemente asignando un nuevo valor para el 16º elemento de names():\n\n\nCode\n# Cambia el nombre de la columna religoin a religion\nnames(w)[16] &lt;- \"religion\"\n\n# Puedes también utilizar el nombre original si\n# no estás seguro de dónde se encuentra la variable\n# en el orden.\nnames(w)[names(w)==\"religoin\"] &lt;- \"religion\"\n\n# Busca de nuevo el nombre de todas las columnas\nnames(w)\n\n\n  [1] \"country\"             \"gini10\"              \"dem_level4\"         \n  [4] \"dem_rank14\"          \"dem_score14\"         \"lifeex_f\"           \n  [7] \"lifeex_m\"            \"literacy\"            \"oil\"                \n [10] \"pop_0_14\"            \"pop_15_64\"           \"pop_65_older\"       \n [13] \"fertility\"           \"govregrel\"           \"regionun\"           \n [16] \"religion\"            \"spendeduc\"           \"spendhealth\"        \n [19] \"spendmil\"            \"hdi\"                 \"pop_age\"            \n [22] \"sexratio\"            \"pop_total\"           \"pop_urban\"          \n [25] \"gender_unequal\"      \"gender_unequal_rank\" \"arda\"               \n [28] \"lifeex_total\"        \"debt\"                \"colony\"             \n [31] \"confidence\"          \"decent08\"            \"dem_other\"          \n [34] \"dem_other5\"          \"democ\"               \"democ11\"            \n [37] \"democ_regime\"        \"democ_regime08\"      \"district_size3\"     \n [40] \"durable\"             \"effectiveness\"       \"enpp3_democ\"        \n [43] \"enpp3_democ08\"       \"dnpp_3\"              \"eu\"                 \n [46] \"fhrate04_rev\"        \"fhrate08_rev\"        \"frac_eth\"           \n [49] \"frac_eth2\"           \"frac_eth3\"           \"free_business\"      \n [52] \"free_corrupt\"        \"free_finance\"        \"free_fiscal\"        \n [55] \"free_govspend\"       \"free_invest\"         \"free_labor\"         \n [58] \"free_monetary\"       \"free_property\"       \"free_trade\"         \n [61] \"free_overall\"        \"free_overall_4\"      \"gdp08\"              \n [64] \"gdp_10_thou\"         \"gdp_cap2\"            \"gdp_cap3\"           \n [67] \"gdpcap2_08\"          \"gdpcap3_08\"          \"gdpcap08_2\"         \n [70] \"gdppcap08\"           \"gdppcap08_3\"         \"gender_equal3\"      \n [73] \"gini04\"              \"gini08\"              \"hi_gdp\"             \n [76] \"indy\"                \"muslim\"              \"natcode\"            \n [79] \"oecd\"                \"pmat12_3\"            \"polity\"             \n [82] \"pr_sys\"              \"protact3\"            \"regime_type3\"       \n [85] \"rich_democ\"          \"unions\"              \"unnetgro\"           \n [88] \"unnetuse\"            \"unpovnpl\"            \"unremitp\"           \n [91] \"unremitt\"            \"vi_rel3\"             \"votevap00s\"         \n [94] \"votevap90s\"          \"women05\"             \"women09\"            \n [97] \"women13\"             \"ipu_wom13_all\"       \"womyear\"            \n[100] \"womyear2\"            \"dem_economist\"       \"democ.yes\"          \n[103] \"country1\"           \n\n\nPuedes ver que ahora el nombre es correcto. Intenta renombrar otra variable a continuación:\n\n\nCode\n# Cambia en nombre de de cualquier variable de tu\n# preferencia (puede ser cualquiera)\n\n\n# Llama names(w) para averiguar si todo ha ido como esperado.\n\n\n\n\nCode\n# Cambia en nombre de de cualquier variable de tu\n# preferencia (puede ser cualquiera)\nnames(w)[names(w)==\"spendeduc\"] &lt;- \"spend_education\"\n\n# Llama names(w) para averiguar si todo ha ido como esperado.\nnames(w)\n\n\n  [1] \"country\"             \"gini10\"              \"dem_level4\"         \n  [4] \"dem_rank14\"          \"dem_score14\"         \"lifeex_f\"           \n  [7] \"lifeex_m\"            \"literacy\"            \"oil\"                \n [10] \"pop_0_14\"            \"pop_15_64\"           \"pop_65_older\"       \n [13] \"fertility\"           \"govregrel\"           \"regionun\"           \n [16] \"religion\"            \"spend_education\"     \"spendhealth\"        \n [19] \"spendmil\"            \"hdi\"                 \"pop_age\"            \n [22] \"sexratio\"            \"pop_total\"           \"pop_urban\"          \n [25] \"gender_unequal\"      \"gender_unequal_rank\" \"arda\"               \n [28] \"lifeex_total\"        \"debt\"                \"colony\"             \n [31] \"confidence\"          \"decent08\"            \"dem_other\"          \n [34] \"dem_other5\"          \"democ\"               \"democ11\"            \n [37] \"democ_regime\"        \"democ_regime08\"      \"district_size3\"     \n [40] \"durable\"             \"effectiveness\"       \"enpp3_democ\"        \n [43] \"enpp3_democ08\"       \"dnpp_3\"              \"eu\"                 \n [46] \"fhrate04_rev\"        \"fhrate08_rev\"        \"frac_eth\"           \n [49] \"frac_eth2\"           \"frac_eth3\"           \"free_business\"      \n [52] \"free_corrupt\"        \"free_finance\"        \"free_fiscal\"        \n [55] \"free_govspend\"       \"free_invest\"         \"free_labor\"         \n [58] \"free_monetary\"       \"free_property\"       \"free_trade\"         \n [61] \"free_overall\"        \"free_overall_4\"      \"gdp08\"              \n [64] \"gdp_10_thou\"         \"gdp_cap2\"            \"gdp_cap3\"           \n [67] \"gdpcap2_08\"          \"gdpcap3_08\"          \"gdpcap08_2\"         \n [70] \"gdppcap08\"           \"gdppcap08_3\"         \"gender_equal3\"      \n [73] \"gini04\"              \"gini08\"              \"hi_gdp\"             \n [76] \"indy\"                \"muslim\"              \"natcode\"            \n [79] \"oecd\"                \"pmat12_3\"            \"polity\"             \n [82] \"pr_sys\"              \"protact3\"            \"regime_type3\"       \n [85] \"rich_democ\"          \"unions\"              \"unnetgro\"           \n [88] \"unnetuse\"            \"unpovnpl\"            \"unremitp\"           \n [91] \"unremitt\"            \"vi_rel3\"             \"votevap00s\"         \n [94] \"votevap90s\"          \"women05\"             \"women09\"            \n [97] \"women13\"             \"ipu_wom13_all\"       \"womyear\"            \n[100] \"womyear2\"            \"dem_economist\"       \"democ.yes\"          \n[103] \"country1\"           \n\n\n\n\n\nUno de los pasos más comunes en el análisis de datos en R es recuperar los datos de una o más columnas y usarlos para calcular las frecuencias, medias, medianas y otras estadísticas. En R puedes obtener esta información utilizando la fórmula dataframe$column. El primero elemento es el nombre del data.frame, seguido del símbolo $ y, luego, del nombre de la columna o variable. Por lo tanto, si queremos la lista de todos los países en el conjunto de datos w (contenido en la columna “country”), sólo necesitamos usar la expresión: w$country, como se muestra a continuación:\n\n\nCode\n# Devuelve todos los nombres de países \n# contenidos en el data.frame w:\nw$country\n\n\n  [1] Afghanistan                       Albania                          \n  [3] Algeria                           Angola                           \n  [5] Argentina                         Armenia                          \n  [7] Australia                         Austria                          \n  [9] Azerbaijan                        Bahrain                          \n [11] Bangladesh                        Belarus                          \n [13] Belgium                           Benin                            \n [15] Bhutan                            Bolivia                          \n [17] Bosnia and Herzegovina            Botswana                         \n [19] Brazil                            Bulgaria                         \n [21] Burkina Faso                      Burma (Myanmar)                  \n [23] Burundi                           Cambodia                         \n [25] Cameroon                          Canada                           \n [27] Cape Verde                        Central African Republic         \n [29] Chad                              Chile                            \n [31] China                             Colombia                         \n [33] Comoros                           Congo, Democratic Republic of the\n [35] Congo, Republic of the            Costa Rica                       \n [37] Cote d'Ivoire                     Croatia                          \n [39] Cuba                              Cyprus                           \n [41] Czech Republic                    Denmark                          \n [43] Djibouti                          Dominican Republic               \n [45] Ecuador                           Egypt                            \n [47] El Salvador                       Equatorial Guinea                \n [49] Eritrea                           Estonia                          \n [51] Ethiopia                          Fiji                             \n [53] Finland                           France                           \n [55] Gabon                             Gambia, The                      \n [57] Georgia                           Germany                          \n [59] Ghana                             Greece                           \n [61] Guatemala                         Guinea                           \n [63] Guinea-Bissau                     Guyana                           \n [65] Haiti                             Honduras                         \n [67] Hong Kong                         Hungary                          \n [69] Iceland                           India                            \n [71] Indonesia                         Iran                             \n [73] Iraq                              Ireland                          \n [75] Israel                            Italy                            \n [77] Jamaica                           Japan                            \n [79] Jordan                            Kazakhstan                       \n [81] Kenya                             Korea, North                     \n [83] Korea, South                      Kuwait                           \n [85] Kyrgyzstan                        Laos                             \n [87] Latvia                            Lebanon                          \n [89] Lesotho                           Liberia                          \n [91] Libya                             Lithuania                        \n [93] Luxembourg                        Macedonia                        \n [95] Madagascar                        Malawi                           \n [97] Malaysia                          Mali                             \n [99] Malta                             Mauritania                       \n[101] Mauritius                         Mexico                           \n[103] Moldova                           Mongolia                         \n[105] Montenegro                        Morocco                          \n[107] Mozambique                        Namibia                          \n[109] Nepal                             Netherlands                      \n[111] New Zealand                       Nicaragua                        \n[113] Niger                             Nigeria                          \n[115] Norway                            Oman                             \n[117] Pakistan                          Palestine                        \n[119] Panama                            Papua New Guinea                 \n[121] Paraguay                          Peru                             \n[123] Philippines                       Poland                           \n[125] Portugal                          Qatar                            \n[127] Romania                           Russia                           \n[129] Rwanda                            Saudi Arabia                     \n[131] Senegal                           Serbia                           \n[133] Sierra Leone                      Singapore                        \n[135] Slovakia                          Slovenia                         \n[137] South Africa                      Spain                            \n[139] Sri Lanka                         Sudan                            \n[141] Suriname                          Swaziland                        \n[143] Sweden                            Switzerland                      \n[145] Syria                             Taiwan                           \n[147] Tajikistan                        Tanzania                         \n[149] Thailand                          Timor-Leste                      \n[151] Togo                              Trinidad and Tobago              \n[153] Tunisia                           Turkey                           \n[155] Turkmenistan                      Uganda                           \n[157] Ukraine                           United Arab Emirates             \n[159] United Kingdom                    United States                    \n[161] Uruguay                           Uzbekistan                       \n[163] Venezuela                         Vietnam                          \n[165] Yemen                             Zambia                           \n[167] Zimbabwe                         \n167 Levels: Afghanistan Albania Algeria Angola Argentina Armenia ... Zimbabwe\n\n\nCode\n# Podemos también emplear el número de la columna\n# en el orden que aparece en el data.frame \n# después de una coma:\nw[,1]\n\n\n  [1] Afghanistan                       Albania                          \n  [3] Algeria                           Angola                           \n  [5] Argentina                         Armenia                          \n  [7] Australia                         Austria                          \n  [9] Azerbaijan                        Bahrain                          \n [11] Bangladesh                        Belarus                          \n [13] Belgium                           Benin                            \n [15] Bhutan                            Bolivia                          \n [17] Bosnia and Herzegovina            Botswana                         \n [19] Brazil                            Bulgaria                         \n [21] Burkina Faso                      Burma (Myanmar)                  \n [23] Burundi                           Cambodia                         \n [25] Cameroon                          Canada                           \n [27] Cape Verde                        Central African Republic         \n [29] Chad                              Chile                            \n [31] China                             Colombia                         \n [33] Comoros                           Congo, Democratic Republic of the\n [35] Congo, Republic of the            Costa Rica                       \n [37] Cote d'Ivoire                     Croatia                          \n [39] Cuba                              Cyprus                           \n [41] Czech Republic                    Denmark                          \n [43] Djibouti                          Dominican Republic               \n [45] Ecuador                           Egypt                            \n [47] El Salvador                       Equatorial Guinea                \n [49] Eritrea                           Estonia                          \n [51] Ethiopia                          Fiji                             \n [53] Finland                           France                           \n [55] Gabon                             Gambia, The                      \n [57] Georgia                           Germany                          \n [59] Ghana                             Greece                           \n [61] Guatemala                         Guinea                           \n [63] Guinea-Bissau                     Guyana                           \n [65] Haiti                             Honduras                         \n [67] Hong Kong                         Hungary                          \n [69] Iceland                           India                            \n [71] Indonesia                         Iran                             \n [73] Iraq                              Ireland                          \n [75] Israel                            Italy                            \n [77] Jamaica                           Japan                            \n [79] Jordan                            Kazakhstan                       \n [81] Kenya                             Korea, North                     \n [83] Korea, South                      Kuwait                           \n [85] Kyrgyzstan                        Laos                             \n [87] Latvia                            Lebanon                          \n [89] Lesotho                           Liberia                          \n [91] Libya                             Lithuania                        \n [93] Luxembourg                        Macedonia                        \n [95] Madagascar                        Malawi                           \n [97] Malaysia                          Mali                             \n [99] Malta                             Mauritania                       \n[101] Mauritius                         Mexico                           \n[103] Moldova                           Mongolia                         \n[105] Montenegro                        Morocco                          \n[107] Mozambique                        Namibia                          \n[109] Nepal                             Netherlands                      \n[111] New Zealand                       Nicaragua                        \n[113] Niger                             Nigeria                          \n[115] Norway                            Oman                             \n[117] Pakistan                          Palestine                        \n[119] Panama                            Papua New Guinea                 \n[121] Paraguay                          Peru                             \n[123] Philippines                       Poland                           \n[125] Portugal                          Qatar                            \n[127] Romania                           Russia                           \n[129] Rwanda                            Saudi Arabia                     \n[131] Senegal                           Serbia                           \n[133] Sierra Leone                      Singapore                        \n[135] Slovakia                          Slovenia                         \n[137] South Africa                      Spain                            \n[139] Sri Lanka                         Sudan                            \n[141] Suriname                          Swaziland                        \n[143] Sweden                            Switzerland                      \n[145] Syria                             Taiwan                           \n[147] Tajikistan                        Tanzania                         \n[149] Thailand                          Timor-Leste                      \n[151] Togo                              Trinidad and Tobago              \n[153] Tunisia                           Turkey                           \n[155] Turkmenistan                      Uganda                           \n[157] Ukraine                           United Arab Emirates             \n[159] United Kingdom                    United States                    \n[161] Uruguay                           Uzbekistan                       \n[163] Venezuela                         Vietnam                          \n[165] Yemen                             Zambia                           \n[167] Zimbabwe                         \n167 Levels: Afghanistan Albania Algeria Angola Argentina Armenia ... Zimbabwe\n\n\nComo se puede ver, los dos métodos devuelven la misma lista de países. Esto ocurre podque hemos realizado el mismo procedimiento utilizando dos métodos alternativos. No te preocupes por el segundo, lo describiremos con más detalle en la próxima subsección (es una de las características más chulas del R para manipular datos).\nAhora, intenta seleccionar la información sobre el Índice de Desarrollo Humano (columna hdi):\n\n\nCode\n# Busca la información sobre el HDI:\nw$hdi\n\n\n  [1] 0.349 0.719 0.677 0.403 0.775 0.695 0.937 0.851 0.713 0.801 0.469 0.732\n [13] 0.867 0.435    NA 0.643 0.710 0.633 0.699 0.743 0.305 0.451 0.282 0.494\n [25] 0.460 0.888 0.534 0.315 0.295 0.783 0.663 0.689 0.428 0.239 0.489 0.725\n [37] 0.397 0.767    NA 0.810 0.841 0.866 0.402 0.663 0.695 0.620 0.659 0.538\n [49]    NA 0.812 0.328 0.669 0.871 0.872 0.648 0.390 0.698 0.885 0.467 0.855\n [61] 0.560 0.340 0.289 0.611 0.404 0.604 0.862 0.805 0.869 0.519 0.600 0.702\n [73]    NA 0.895 0.872 0.854 0.688 0.884 0.681 0.714 0.470    NA 0.877 0.771\n [85] 0.598 0.497 0.769    NA 0.427 0.300 0.755 0.783 0.852 0.701 0.435 0.385\n [97] 0.744 0.309 0.815 0.433 0.701 0.750 0.623 0.622 0.769 0.567 0.284 0.606\n[109] 0.428 0.890 0.907 0.565 0.261 0.423 0.938    NA 0.490    NA 0.755 0.431\n[121] 0.640 0.723 0.638 0.795 0.795 0.803 0.767 0.719 0.385 0.752 0.411 0.735\n[133] 0.317 0.846 0.818 0.828 0.597 0.863 0.658 0.379 0.646 0.498 0.885 0.874\n[145] 0.589    NA 0.580 0.398 0.654 0.502 0.428 0.736 0.683 0.679 0.669 0.422\n[157] 0.710 0.815 0.849 0.902 0.765 0.617 0.696 0.572 0.439 0.395 0.140\n\n\nComo podéis ver, algunos valores aparecen como NA. Esto significa que no hay datos disponibles para esos países en particular. El R utiliza NA (Not Available) para representar los valores faltantes o no informados. Siempre que ve un NA, lo retira de los cálculos o lo trata de la manera que definamos en nuestros análisis."
  },
  {
    "objectID": "S_2_Datos.html#uso-básico-de-data.frames",
    "href": "S_2_Datos.html#uso-básico-de-data.frames",
    "title": "‘Picando’ datos",
    "section": "",
    "text": "En esta sección del tutorial se presentan algunas pistas sobre cómo navegar data.frames. Aquí, exploramos algunas tareas básicas en el manejo de datos como renombrar columnas, filtrar y seleccionar, y fusionar datos.\nPara ilustrar las ideas, seleccionamos 10 países y algunas variables del conjunto de datos mundial originalmente contenido en el paquete ‘polscidata’. Lo llamamos w (de world, vamos), puedes inspeccionar el contenido en el siguiente fragmento de código:\n\n\nCode\n# Muestra todos los valores de w\nw\n\n\n\n\n\n\n\n\n\n\n\nLa función names() recupera todos los nombres de las columnas de un data.frame dado. Si usamos names(w), R nos mostrará el nombre y el orden de cada columna en el conjunto de datos:\n\n\nCode\n# Nos da los nombres de todas las columnas del\n# data.frame en el orden original que aparecen\nnames(w)\n\n\n  [1] \"country\"             \"gini10\"              \"dem_level4\"         \n  [4] \"dem_rank14\"          \"dem_score14\"         \"lifeex_f\"           \n  [7] \"lifeex_m\"            \"literacy\"            \"oil\"                \n [10] \"pop_0_14\"            \"pop_15_64\"           \"pop_65_older\"       \n [13] \"fertility\"           \"govregrel\"           \"regionun\"           \n [16] \"religoin\"            \"spendeduc\"           \"spendhealth\"        \n [19] \"spendmil\"            \"hdi\"                 \"pop_age\"            \n [22] \"sexratio\"            \"pop_total\"           \"pop_urban\"          \n [25] \"gender_unequal\"      \"gender_unequal_rank\" \"arda\"               \n [28] \"lifeex_total\"        \"debt\"                \"colony\"             \n [31] \"confidence\"          \"decent08\"            \"dem_other\"          \n [34] \"dem_other5\"          \"democ\"               \"democ11\"            \n [37] \"democ_regime\"        \"democ_regime08\"      \"district_size3\"     \n [40] \"durable\"             \"effectiveness\"       \"enpp3_democ\"        \n [43] \"enpp3_democ08\"       \"dnpp_3\"              \"eu\"                 \n [46] \"fhrate04_rev\"        \"fhrate08_rev\"        \"frac_eth\"           \n [49] \"frac_eth2\"           \"frac_eth3\"           \"free_business\"      \n [52] \"free_corrupt\"        \"free_finance\"        \"free_fiscal\"        \n [55] \"free_govspend\"       \"free_invest\"         \"free_labor\"         \n [58] \"free_monetary\"       \"free_property\"       \"free_trade\"         \n [61] \"free_overall\"        \"free_overall_4\"      \"gdp08\"              \n [64] \"gdp_10_thou\"         \"gdp_cap2\"            \"gdp_cap3\"           \n [67] \"gdpcap2_08\"          \"gdpcap3_08\"          \"gdpcap08_2\"         \n [70] \"gdppcap08\"           \"gdppcap08_3\"         \"gender_equal3\"      \n [73] \"gini04\"              \"gini08\"              \"hi_gdp\"             \n [76] \"indy\"                \"muslim\"              \"natcode\"            \n [79] \"oecd\"                \"pmat12_3\"            \"polity\"             \n [82] \"pr_sys\"              \"protact3\"            \"regime_type3\"       \n [85] \"rich_democ\"          \"unions\"              \"unnetgro\"           \n [88] \"unnetuse\"            \"unpovnpl\"            \"unremitp\"           \n [91] \"unremitt\"            \"vi_rel3\"             \"votevap00s\"         \n [94] \"votevap90s\"          \"women05\"             \"women09\"            \n [97] \"women13\"             \"ipu_wom13_all\"       \"womyear\"            \n[100] \"womyear2\"            \"dem_economist\"       \"democ.yes\"          \n[103] \"country1\"           \n\n\nComo podemos ver, hay 103 columnas en el conjunto de datos que comienzan con “country”. Si analizamos la lista de nombres de columnas más de cerca, podemos ver que la columna número 16 está mal escrita como “religoin”. Deberíamos corregirlo cambiándolo a “religion”. Hacemos eso simplemente asignando un nuevo valor para el 16º elemento de names():\n\n\nCode\n# Cambia el nombre de la columna religoin a religion\nnames(w)[16] &lt;- \"religion\"\n\n# Puedes también utilizar el nombre original si\n# no estás seguro de dónde se encuentra la variable\n# en el orden.\nnames(w)[names(w)==\"religoin\"] &lt;- \"religion\"\n\n# Busca de nuevo el nombre de todas las columnas\nnames(w)\n\n\n  [1] \"country\"             \"gini10\"              \"dem_level4\"         \n  [4] \"dem_rank14\"          \"dem_score14\"         \"lifeex_f\"           \n  [7] \"lifeex_m\"            \"literacy\"            \"oil\"                \n [10] \"pop_0_14\"            \"pop_15_64\"           \"pop_65_older\"       \n [13] \"fertility\"           \"govregrel\"           \"regionun\"           \n [16] \"religion\"            \"spendeduc\"           \"spendhealth\"        \n [19] \"spendmil\"            \"hdi\"                 \"pop_age\"            \n [22] \"sexratio\"            \"pop_total\"           \"pop_urban\"          \n [25] \"gender_unequal\"      \"gender_unequal_rank\" \"arda\"               \n [28] \"lifeex_total\"        \"debt\"                \"colony\"             \n [31] \"confidence\"          \"decent08\"            \"dem_other\"          \n [34] \"dem_other5\"          \"democ\"               \"democ11\"            \n [37] \"democ_regime\"        \"democ_regime08\"      \"district_size3\"     \n [40] \"durable\"             \"effectiveness\"       \"enpp3_democ\"        \n [43] \"enpp3_democ08\"       \"dnpp_3\"              \"eu\"                 \n [46] \"fhrate04_rev\"        \"fhrate08_rev\"        \"frac_eth\"           \n [49] \"frac_eth2\"           \"frac_eth3\"           \"free_business\"      \n [52] \"free_corrupt\"        \"free_finance\"        \"free_fiscal\"        \n [55] \"free_govspend\"       \"free_invest\"         \"free_labor\"         \n [58] \"free_monetary\"       \"free_property\"       \"free_trade\"         \n [61] \"free_overall\"        \"free_overall_4\"      \"gdp08\"              \n [64] \"gdp_10_thou\"         \"gdp_cap2\"            \"gdp_cap3\"           \n [67] \"gdpcap2_08\"          \"gdpcap3_08\"          \"gdpcap08_2\"         \n [70] \"gdppcap08\"           \"gdppcap08_3\"         \"gender_equal3\"      \n [73] \"gini04\"              \"gini08\"              \"hi_gdp\"             \n [76] \"indy\"                \"muslim\"              \"natcode\"            \n [79] \"oecd\"                \"pmat12_3\"            \"polity\"             \n [82] \"pr_sys\"              \"protact3\"            \"regime_type3\"       \n [85] \"rich_democ\"          \"unions\"              \"unnetgro\"           \n [88] \"unnetuse\"            \"unpovnpl\"            \"unremitp\"           \n [91] \"unremitt\"            \"vi_rel3\"             \"votevap00s\"         \n [94] \"votevap90s\"          \"women05\"             \"women09\"            \n [97] \"women13\"             \"ipu_wom13_all\"       \"womyear\"            \n[100] \"womyear2\"            \"dem_economist\"       \"democ.yes\"          \n[103] \"country1\"           \n\n\nPuedes ver que ahora el nombre es correcto. Intenta renombrar otra variable a continuación:\n\n\nCode\n# Cambia en nombre de de cualquier variable de tu\n# preferencia (puede ser cualquiera)\n\n\n# Llama names(w) para averiguar si todo ha ido como esperado.\n\n\n\n\nCode\n# Cambia en nombre de de cualquier variable de tu\n# preferencia (puede ser cualquiera)\nnames(w)[names(w)==\"spendeduc\"] &lt;- \"spend_education\"\n\n# Llama names(w) para averiguar si todo ha ido como esperado.\nnames(w)\n\n\n  [1] \"country\"             \"gini10\"              \"dem_level4\"         \n  [4] \"dem_rank14\"          \"dem_score14\"         \"lifeex_f\"           \n  [7] \"lifeex_m\"            \"literacy\"            \"oil\"                \n [10] \"pop_0_14\"            \"pop_15_64\"           \"pop_65_older\"       \n [13] \"fertility\"           \"govregrel\"           \"regionun\"           \n [16] \"religion\"            \"spend_education\"     \"spendhealth\"        \n [19] \"spendmil\"            \"hdi\"                 \"pop_age\"            \n [22] \"sexratio\"            \"pop_total\"           \"pop_urban\"          \n [25] \"gender_unequal\"      \"gender_unequal_rank\" \"arda\"               \n [28] \"lifeex_total\"        \"debt\"                \"colony\"             \n [31] \"confidence\"          \"decent08\"            \"dem_other\"          \n [34] \"dem_other5\"          \"democ\"               \"democ11\"            \n [37] \"democ_regime\"        \"democ_regime08\"      \"district_size3\"     \n [40] \"durable\"             \"effectiveness\"       \"enpp3_democ\"        \n [43] \"enpp3_democ08\"       \"dnpp_3\"              \"eu\"                 \n [46] \"fhrate04_rev\"        \"fhrate08_rev\"        \"frac_eth\"           \n [49] \"frac_eth2\"           \"frac_eth3\"           \"free_business\"      \n [52] \"free_corrupt\"        \"free_finance\"        \"free_fiscal\"        \n [55] \"free_govspend\"       \"free_invest\"         \"free_labor\"         \n [58] \"free_monetary\"       \"free_property\"       \"free_trade\"         \n [61] \"free_overall\"        \"free_overall_4\"      \"gdp08\"              \n [64] \"gdp_10_thou\"         \"gdp_cap2\"            \"gdp_cap3\"           \n [67] \"gdpcap2_08\"          \"gdpcap3_08\"          \"gdpcap08_2\"         \n [70] \"gdppcap08\"           \"gdppcap08_3\"         \"gender_equal3\"      \n [73] \"gini04\"              \"gini08\"              \"hi_gdp\"             \n [76] \"indy\"                \"muslim\"              \"natcode\"            \n [79] \"oecd\"                \"pmat12_3\"            \"polity\"             \n [82] \"pr_sys\"              \"protact3\"            \"regime_type3\"       \n [85] \"rich_democ\"          \"unions\"              \"unnetgro\"           \n [88] \"unnetuse\"            \"unpovnpl\"            \"unremitp\"           \n [91] \"unremitt\"            \"vi_rel3\"             \"votevap00s\"         \n [94] \"votevap90s\"          \"women05\"             \"women09\"            \n [97] \"women13\"             \"ipu_wom13_all\"       \"womyear\"            \n[100] \"womyear2\"            \"dem_economist\"       \"democ.yes\"          \n[103] \"country1\"           \n\n\n\n\n\nUno de los pasos más comunes en el análisis de datos en R es recuperar los datos de una o más columnas y usarlos para calcular las frecuencias, medias, medianas y otras estadísticas. En R puedes obtener esta información utilizando la fórmula dataframe$column. El primero elemento es el nombre del data.frame, seguido del símbolo $ y, luego, del nombre de la columna o variable. Por lo tanto, si queremos la lista de todos los países en el conjunto de datos w (contenido en la columna “country”), sólo necesitamos usar la expresión: w$country, como se muestra a continuación:\n\n\nCode\n# Devuelve todos los nombres de países \n# contenidos en el data.frame w:\nw$country\n\n\n  [1] Afghanistan                       Albania                          \n  [3] Algeria                           Angola                           \n  [5] Argentina                         Armenia                          \n  [7] Australia                         Austria                          \n  [9] Azerbaijan                        Bahrain                          \n [11] Bangladesh                        Belarus                          \n [13] Belgium                           Benin                            \n [15] Bhutan                            Bolivia                          \n [17] Bosnia and Herzegovina            Botswana                         \n [19] Brazil                            Bulgaria                         \n [21] Burkina Faso                      Burma (Myanmar)                  \n [23] Burundi                           Cambodia                         \n [25] Cameroon                          Canada                           \n [27] Cape Verde                        Central African Republic         \n [29] Chad                              Chile                            \n [31] China                             Colombia                         \n [33] Comoros                           Congo, Democratic Republic of the\n [35] Congo, Republic of the            Costa Rica                       \n [37] Cote d'Ivoire                     Croatia                          \n [39] Cuba                              Cyprus                           \n [41] Czech Republic                    Denmark                          \n [43] Djibouti                          Dominican Republic               \n [45] Ecuador                           Egypt                            \n [47] El Salvador                       Equatorial Guinea                \n [49] Eritrea                           Estonia                          \n [51] Ethiopia                          Fiji                             \n [53] Finland                           France                           \n [55] Gabon                             Gambia, The                      \n [57] Georgia                           Germany                          \n [59] Ghana                             Greece                           \n [61] Guatemala                         Guinea                           \n [63] Guinea-Bissau                     Guyana                           \n [65] Haiti                             Honduras                         \n [67] Hong Kong                         Hungary                          \n [69] Iceland                           India                            \n [71] Indonesia                         Iran                             \n [73] Iraq                              Ireland                          \n [75] Israel                            Italy                            \n [77] Jamaica                           Japan                            \n [79] Jordan                            Kazakhstan                       \n [81] Kenya                             Korea, North                     \n [83] Korea, South                      Kuwait                           \n [85] Kyrgyzstan                        Laos                             \n [87] Latvia                            Lebanon                          \n [89] Lesotho                           Liberia                          \n [91] Libya                             Lithuania                        \n [93] Luxembourg                        Macedonia                        \n [95] Madagascar                        Malawi                           \n [97] Malaysia                          Mali                             \n [99] Malta                             Mauritania                       \n[101] Mauritius                         Mexico                           \n[103] Moldova                           Mongolia                         \n[105] Montenegro                        Morocco                          \n[107] Mozambique                        Namibia                          \n[109] Nepal                             Netherlands                      \n[111] New Zealand                       Nicaragua                        \n[113] Niger                             Nigeria                          \n[115] Norway                            Oman                             \n[117] Pakistan                          Palestine                        \n[119] Panama                            Papua New Guinea                 \n[121] Paraguay                          Peru                             \n[123] Philippines                       Poland                           \n[125] Portugal                          Qatar                            \n[127] Romania                           Russia                           \n[129] Rwanda                            Saudi Arabia                     \n[131] Senegal                           Serbia                           \n[133] Sierra Leone                      Singapore                        \n[135] Slovakia                          Slovenia                         \n[137] South Africa                      Spain                            \n[139] Sri Lanka                         Sudan                            \n[141] Suriname                          Swaziland                        \n[143] Sweden                            Switzerland                      \n[145] Syria                             Taiwan                           \n[147] Tajikistan                        Tanzania                         \n[149] Thailand                          Timor-Leste                      \n[151] Togo                              Trinidad and Tobago              \n[153] Tunisia                           Turkey                           \n[155] Turkmenistan                      Uganda                           \n[157] Ukraine                           United Arab Emirates             \n[159] United Kingdom                    United States                    \n[161] Uruguay                           Uzbekistan                       \n[163] Venezuela                         Vietnam                          \n[165] Yemen                             Zambia                           \n[167] Zimbabwe                         \n167 Levels: Afghanistan Albania Algeria Angola Argentina Armenia ... Zimbabwe\n\n\nCode\n# Podemos también emplear el número de la columna\n# en el orden que aparece en el data.frame \n# después de una coma:\nw[,1]\n\n\n  [1] Afghanistan                       Albania                          \n  [3] Algeria                           Angola                           \n  [5] Argentina                         Armenia                          \n  [7] Australia                         Austria                          \n  [9] Azerbaijan                        Bahrain                          \n [11] Bangladesh                        Belarus                          \n [13] Belgium                           Benin                            \n [15] Bhutan                            Bolivia                          \n [17] Bosnia and Herzegovina            Botswana                         \n [19] Brazil                            Bulgaria                         \n [21] Burkina Faso                      Burma (Myanmar)                  \n [23] Burundi                           Cambodia                         \n [25] Cameroon                          Canada                           \n [27] Cape Verde                        Central African Republic         \n [29] Chad                              Chile                            \n [31] China                             Colombia                         \n [33] Comoros                           Congo, Democratic Republic of the\n [35] Congo, Republic of the            Costa Rica                       \n [37] Cote d'Ivoire                     Croatia                          \n [39] Cuba                              Cyprus                           \n [41] Czech Republic                    Denmark                          \n [43] Djibouti                          Dominican Republic               \n [45] Ecuador                           Egypt                            \n [47] El Salvador                       Equatorial Guinea                \n [49] Eritrea                           Estonia                          \n [51] Ethiopia                          Fiji                             \n [53] Finland                           France                           \n [55] Gabon                             Gambia, The                      \n [57] Georgia                           Germany                          \n [59] Ghana                             Greece                           \n [61] Guatemala                         Guinea                           \n [63] Guinea-Bissau                     Guyana                           \n [65] Haiti                             Honduras                         \n [67] Hong Kong                         Hungary                          \n [69] Iceland                           India                            \n [71] Indonesia                         Iran                             \n [73] Iraq                              Ireland                          \n [75] Israel                            Italy                            \n [77] Jamaica                           Japan                            \n [79] Jordan                            Kazakhstan                       \n [81] Kenya                             Korea, North                     \n [83] Korea, South                      Kuwait                           \n [85] Kyrgyzstan                        Laos                             \n [87] Latvia                            Lebanon                          \n [89] Lesotho                           Liberia                          \n [91] Libya                             Lithuania                        \n [93] Luxembourg                        Macedonia                        \n [95] Madagascar                        Malawi                           \n [97] Malaysia                          Mali                             \n [99] Malta                             Mauritania                       \n[101] Mauritius                         Mexico                           \n[103] Moldova                           Mongolia                         \n[105] Montenegro                        Morocco                          \n[107] Mozambique                        Namibia                          \n[109] Nepal                             Netherlands                      \n[111] New Zealand                       Nicaragua                        \n[113] Niger                             Nigeria                          \n[115] Norway                            Oman                             \n[117] Pakistan                          Palestine                        \n[119] Panama                            Papua New Guinea                 \n[121] Paraguay                          Peru                             \n[123] Philippines                       Poland                           \n[125] Portugal                          Qatar                            \n[127] Romania                           Russia                           \n[129] Rwanda                            Saudi Arabia                     \n[131] Senegal                           Serbia                           \n[133] Sierra Leone                      Singapore                        \n[135] Slovakia                          Slovenia                         \n[137] South Africa                      Spain                            \n[139] Sri Lanka                         Sudan                            \n[141] Suriname                          Swaziland                        \n[143] Sweden                            Switzerland                      \n[145] Syria                             Taiwan                           \n[147] Tajikistan                        Tanzania                         \n[149] Thailand                          Timor-Leste                      \n[151] Togo                              Trinidad and Tobago              \n[153] Tunisia                           Turkey                           \n[155] Turkmenistan                      Uganda                           \n[157] Ukraine                           United Arab Emirates             \n[159] United Kingdom                    United States                    \n[161] Uruguay                           Uzbekistan                       \n[163] Venezuela                         Vietnam                          \n[165] Yemen                             Zambia                           \n[167] Zimbabwe                         \n167 Levels: Afghanistan Albania Algeria Angola Argentina Armenia ... Zimbabwe\n\n\nComo se puede ver, los dos métodos devuelven la misma lista de países. Esto ocurre podque hemos realizado el mismo procedimiento utilizando dos métodos alternativos. No te preocupes por el segundo, lo describiremos con más detalle en la próxima subsección (es una de las características más chulas del R para manipular datos).\nAhora, intenta seleccionar la información sobre el Índice de Desarrollo Humano (columna hdi):\n\n\nCode\n# Busca la información sobre el HDI:\nw$hdi\n\n\n  [1] 0.349 0.719 0.677 0.403 0.775 0.695 0.937 0.851 0.713 0.801 0.469 0.732\n [13] 0.867 0.435    NA 0.643 0.710 0.633 0.699 0.743 0.305 0.451 0.282 0.494\n [25] 0.460 0.888 0.534 0.315 0.295 0.783 0.663 0.689 0.428 0.239 0.489 0.725\n [37] 0.397 0.767    NA 0.810 0.841 0.866 0.402 0.663 0.695 0.620 0.659 0.538\n [49]    NA 0.812 0.328 0.669 0.871 0.872 0.648 0.390 0.698 0.885 0.467 0.855\n [61] 0.560 0.340 0.289 0.611 0.404 0.604 0.862 0.805 0.869 0.519 0.600 0.702\n [73]    NA 0.895 0.872 0.854 0.688 0.884 0.681 0.714 0.470    NA 0.877 0.771\n [85] 0.598 0.497 0.769    NA 0.427 0.300 0.755 0.783 0.852 0.701 0.435 0.385\n [97] 0.744 0.309 0.815 0.433 0.701 0.750 0.623 0.622 0.769 0.567 0.284 0.606\n[109] 0.428 0.890 0.907 0.565 0.261 0.423 0.938    NA 0.490    NA 0.755 0.431\n[121] 0.640 0.723 0.638 0.795 0.795 0.803 0.767 0.719 0.385 0.752 0.411 0.735\n[133] 0.317 0.846 0.818 0.828 0.597 0.863 0.658 0.379 0.646 0.498 0.885 0.874\n[145] 0.589    NA 0.580 0.398 0.654 0.502 0.428 0.736 0.683 0.679 0.669 0.422\n[157] 0.710 0.815 0.849 0.902 0.765 0.617 0.696 0.572 0.439 0.395 0.140\n\n\nComo podéis ver, algunos valores aparecen como NA. Esto significa que no hay datos disponibles para esos países en particular. El R utiliza NA (Not Available) para representar los valores faltantes o no informados. Siempre que ve un NA, lo retira de los cálculos o lo trata de la manera que definamos en nuestros análisis."
  },
  {
    "objectID": "S_2_Datos.html#abrir-datos",
    "href": "S_2_Datos.html#abrir-datos",
    "title": "‘Picando’ datos",
    "section": "Abrir datos",
    "text": "Abrir datos\n\nArchivos Excel\nExisten múltiples formas de abrir archivos de Excel en R. La más fácil es utilizar la función read.xlsx() del paquete openxlsx. A pesar de que la función read.xlsx() sólo funciona con archivos de Excel recientes (aquellos con la extensión .xlsx), su principal ventaja es poder abrir datos directamente desde Internet sin tener que descargar el archivo primero. El código a continuación abre un Excel que contiene los niveles de educación por nacionalidad y sexo del Censo Demográfico 2021 utilizando un enlace de Dropbox:\n\n\nCode\nlibrary(openxlsx)\n\nd &lt;- read.xlsx(\"https://www.dropbox.com/s/orz8fdeg8as00fl/edu_nacion.xlsx?dl=1\")\n\nd\n\n\n\n\n\n\n\n\n\nEl archivo está ordenado y cada columna está identificada por un nombre. Otros símbolos, notas y comentarios fueron eliminados previamente para facilitar la lectura de los datos. También seleccionamos sólo los datos para “ambos sexos” y eliminamos la información detallada para cada sexo.\nAhora, copia el enlace a continuación y pégalo en tu navegador para descargar y cargar el archivo original desde la página web del INE (Instituto Nacional de Estadística):\nhttps://ine.es/jaxi/files/tpx/es/xlsx/55231.xlsx\nComo puedes observar, el archivo tiene encabezados, notas y una estructura más compleja en comparación con los datos abiertos anteriormente. El primer paso para utilizar datos en CUALQUIER paquete estadístico es asegurarse de que tus datos se ajustan a la estructura de una tabla de N filas x N columnas.\nSi intentamos abrir el archivo sin tratarlo antes, tal como lo proporciona el INE, aparecerá así:\n\n\nCode\nlibrary(openxlsx)\n\nd &lt;- read.xlsx(\"https://ine.es/jaxi/files/tpx/es/xlsx/55231.xlsx?nocab=1\")\n\nd\n\n\n\n\n\n\n\n\n\nAhora, compara los dos.\nLa primera versión está ordenada, con nombres de variables identificando cada columna y los datos están bien estructurados.\nLa segunda versión es cruda, sin nombres de columnas estructurados y la mayoría de los datos no están tratados.\nPor lo tanto, antes de abrir datos en R, verifica si el formato es adecuado o si necesitas realizar un trabajo preliminar.\n\n\nArchivos CSV\nOtros formatos comunes son los archivos de valores separados por comas (CSV). Estos archivos son básicamente texto con comas separando cada columna. Son particularmente útiles porque:\n\nSon fáciles de almacenar y comprimir. Archivos con incluso gigabytes pueden ser comprimidos en archivos mucho más pequeños.\nPueden ser abiertos en casi cualquier hoja de cálculo (como Excel o Numbers) o paquete estadístico (R, SPSS, Stata, SAS).\nSon robustos a los cambios en la tecnología. Versiones de Excel o SPSS hacen que los viejos conjuntos de datos sean incompatibles con el nuevo software. Dado que son texto básico, los archivos CSV son siempre compatibles y probablemente seguirán siendo compatibles en el futuro.\n\nLa función para abrir archivos CSV en R es read.csv(). El código a continuación abre el archivo CSV que contiene la puntuación de Rotten Tomatoes para cada una de las películas de Robert De Niro:\n\n\nCode\nd &lt;- read.csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/deniro.csv\")\n\nd\n\n\n\n\n\n\n\n\n\nSpain is different\nAlgunos países utilizan comas para indicar dígitos decimales en los números. Por lo tanto, 9.99 en los EE.UU. es lo mismo que 9,99 en España. Por esta razón, la mayoría de los archivos csv en esos países utilizan punto y coma (;) para separar columnas. Si utilizamos read.csv() los datos no se leerían correctamente. En esos casos, puedes utilizar la función más general read.delim() para abrir los archivos csv con otros separadores como punto y coma.\nEl código a continuación abre un archivo con la definición de las variables para estudios postelectorales del CIS. El archivo original utiliza punto y coma para separar las variables. Por lo tanto, empleamos la función read.delim() y añadimos el parámetro sep=“;” después del enlace al archivo.\n\n\nCode\nd &lt;- read.delim(\"https://www.dropbox.com/s/6f8nfzshzwelgil/CIS_definicion.csv?dl=1\",sep = \";\")\n\nd\n\n\n\n\n\n\n\n\n\n\n\nDatos SPSS\nSPSS es un paquete estadístico muy popular en las Ciencias Sociales. No es sorprendente que muchos estudios utilicen archivos de datos SPSS (.sav) como fuente principal para distribuir sus resultados. El paquete foreign ayuda a abrir datos de otras fuentes como SPSS, dbf y Stata. En el código a continuación, utilizamos la función read.spss() para abrir el archivo de datos SPSS del estudio postelectoral realizado por el Centro de Investigaciones Sociológicas (CIS) para las Elecciones Generales de España celebradas en noviembre de 2019.\n\n\nCode\nlibrary(foreign)\n\nd &lt;- read.spss(\"https://www.dropbox.com/s/s0j6hsidpy08ab3/3269.sav?dl=1\", \n               to.data.frame = T)\n\nd"
  },
  {
    "objectID": "S_2_Datos.html#limpieza-de-datos",
    "href": "S_2_Datos.html#limpieza-de-datos",
    "title": "‘Picando’ datos",
    "section": "Limpieza de datos",
    "text": "Limpieza de datos\n\nFiltrar datos y columnas\nOtra tarea común en el análisis de datos es seleccionar solo la información de interés. Muchos conjuntos de datos vienen con muchas variables que no utilizaremos en nuestro análisis. A veces, estamos interesados solo en algunas observaciones y no en todos los casos incluidos en los datos.\nExiste una variedad de formas de seleccionar datos en R. La más directa es utilizar una condición lógica para definir las observaciones a seleccionar. Un data.frame es un objeto bidimensional. Contiene Filas y Columnas. Podemos representarlo de esta manera: data.frame[F,C]. Por lo tanto, si quiero seleccionar las primeras 10 filas de los datos, solo necesito llamar a data.frame[1:10,]. Es como jugar el “batalla naval” o “hundir la flota” donde se emplean dos coordinadas (una de la línea y otra de la columna) para poder intentar bombardear el barco del adversario. Este comando selecciona las primeras 10 filas del conjunto de datos. Intentémoslo con nuestro data.frame w:\n\n\nCode\n# Selecciona todas las columnas de las 10 primeras líneas\nw[1:10,]\n\n\n\n\n\n\n\n\n\n¿Por qué necesito usar la coma después de 1:10? Es porque le estoy diciendo a R que seleccione las primeras 10 FILAS y todas las 104 COLUMNAS. Intentemos poner la coma primero:\n\n\nCode\n# Selecciona solo las 10 primeras columnas\nw[,1:10]\n\n\n\n\n\n\n\n\n\nEn este segundo ejemplo, seleccionamos todas las 167 FILAS y solo las 10 primeras COLUMNAS.\nAhora, ¿qué pasa si quiero seleccionar solo las primeras 5 filas y las primeras 3 columnas?\n\n\nCode\n# Selecciona las 5 primeras líneas y las\n# 3 primeras columnas\nw[1:5,1:3]\n\n\n\n\n\n\n\n\n\nMe muestra solo las primeras 5 filas y el nombre del país, el índice GINI y el tipo de régimen político.\nAhora es tu turno:\nSelecciona las primeras siete filas y las cuatro primeras columnas:\n\n\nCode\n# Selecciona las 7 primeras filas \n# y las 4 primeras columnas\nw[1:7,1:4]\n\n\n\n\n\n\n\n\n\nTales ejemplos nos ayudan a aprender cómo funciona la indexación en R (y en la mayoría de los lenguajes de programación). Sin embargo, generalmente queremos seleccionar observaciones basadas en valores dados. Por ejemplo, quiero seleccionar solo las democracias plenas. Puedo usar una expresión lógica para hacerlo:\n\n\nCode\n# Selecciona solamente \"Democracias plenas\" (Full Democ).\nw[w$dem_level4==\"Full Democ\",]\n\n\n\n\n\n\n\n\n\nAhora es tu turno. Selecciona solo los países con mayoría musulmana:\n\n\n\n\n\n\n\n\n\nCode\n# Selecciona solo países con \n# mayoría musulmana.\nw[w$muslim==\"Yes\",]\n\n\nTambién podemos seleccionar columnas específicas. Ahora, seleccionemos aquellos países que son democracias completas y las columnas “country”, “dem_level4”, y “religoin”:\n\n\nCode\n# Selecciona Full democracies y variables elegidas.\nw[w$dem_level4==\"Full Democ\", c(\"country\", \"dem_level4\", \"religion\")]\n\n\n\n\n\n\n\n\n\nAhora es tu turno. Selecciona solo los países con mayoría musulmana y las columnas “country”, “dem_level4”, y “religoin”:\n\n\nCode\n# Selecciona solamente mayoría musulmana y variables elegidas.\nw[w$muslim==\"Yes\", c(\"country\", \"dem_level4\", \"religion\")]\n\n\n\n\n\n\n\n\n\nAhora, seleccionemos solo aquellos países de w que tienen datos sobre el índice GINI gini10). En R, los valores faltantes se representan como NA:\n\n\nCode\n# Selecciona solamente países con datos de Gini\n# en la base w .\nw[! is.na(w$gini10), ]\n\n\n\n\n\n\n\n\n\n\n\nCombinando data.frames\nEn las secciones anteriores, aprendimos cómo filtrar datos en subgrupos. Ahora aprenderemos cómo unir diferentes conjuntos de datos en uno solo.\nDividí el conjunto de datos w en cuatro subgrupos: w1 con las primeras 83 filas, w2 con las siguientes 84 filas, wa con algunas variables seleccionadas previamente, y wb con otras variables seleccionadas.\nJuntando datos por fila\nEl primer método es simplemente poner un conjunto de datos sobre el otro. Este procedimiento solo funcionará si AMBOS conjuntos de datos tienen el mismo número de variables y los mismos nombres.\nLa función empleada es rbind(df1,df2, …, dfn). Revisa el ejemplo uniendo w1 y w2:\n\n\nCode\n# Junta w1 y w2 por fila:\nrbind(w1,w2)\n\n\n\n\n\n\n\n\n\nComo se puede ver, la tabla contiene 167 observaciones, igual que w, el conjunto de datos original. Si exploras los conjuntos de datos w1 y w2, verás que tienen 83 y 84 observaciones, respectivamente:\n\n\nCode\n# Explora los datos de w1\nw1\n\n# Explora los datos de w2\nw2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJuntando datos por columna\nEn muchas ocasiones, nuestros datos están dispersos en diferentes archivos. Algunas variables de interés están en un archivo, mientras que otras están en otro. Antes de realizar cualquier análisis, necesitamos reunir todos los atributos en un solo conjunto de datos.\nExisten varias formas de combinar datos en R. Aquí, exploraremos la función canónica merge(). Con merge() puedes unir dos conjuntos de datos y establecer qué información conservas y cuál descartas.\nAntes de nada, exploremos los conjuntos de datos wa y wb usando head():\n\n\nCode\n# Explora los datos de wa\nwa\n\n# Explora los datos de wb\nwb\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComo podemos ver, ambos conjuntos de datos tienen todos los países, pero las variables son diferentes, EXCEPTO por el país. El conjunto de datos wa contiene 5 columnas y wb otras 5. En este ejemplo, uniremos los conjuntos de datos wa y wb, usando la variable común “country” como clave para comparar ambos. El resultado esperado es un data.frame con 167 observaciones y 9 columnas (ya que “country” es la clave en wa y wb).\n\n\nCode\n# fusiona wa y wb usando \"country\" como identificador común y \n# manteniendo todos los valores de wa\nmerge(wa,wb, by=c(\"country\"), all=T)"
  },
  {
    "objectID": "S_2_Datos.html#creación-de-indicadores",
    "href": "S_2_Datos.html#creación-de-indicadores",
    "title": "‘Picando’ datos",
    "section": "Creación de indicadores",
    "text": "Creación de indicadores\n\nAbrir y Explorar los Datos\nEl primer paso en cualquier análisis de datos es conocer tus datos. Por lo tanto, la acción inicial es abrir el conjunto de datos en R y entender qué representa cada variable y verificar si la información es consistente.\nAbramos y exploremos el conjunto de datos edu_nacion.xlsx:\n\n\nCode\nlibrary(openxlsx)\n\n# Abre los datos tratados\nd &lt;- read.xlsx(\"https://www.dropbox.com/s/orz8fdeg8as00fl/edu_nacion.xlsx?dl=1\")\n\n# Examina los datos\nd\n\n\n\n\n\n\n\n\n\nLos siguientes pasos iniciarán con algunas verificaciones clave para asegurar la calidad de los datos antes de comenzar cualquier transformación o análisis de datos. Debido a la naturaleza del conjunto de datos que estamos utilizando como ejemplo, nos centraremos aquí en tres tareas principales:\n(a) Análisis de consistencia - Verificar si los datos son correctos y eliminar ambigüedades y errores. En nuestro caso, verificaremos si una variable contiene solo un tipo de información o más y, si es más, corregiremos el problema.\n(b) Unidades de observación - Asegurarse de que todos los datos se midan en el mismo nivel, evitando comparaciones entre manzanas y naranjas.\n(c) Creación de indicadores - Generar la información adecuada para realizar nuestros análisis, ya que, en la mayoría de los casos, los conjuntos de datos originales no contienen la información exacta que necesitamos y se requiere un tratamiento previo.\n\n\nAnálisis de Consistencia\nTodas las variables contienen solo UNA información o hay casos en los que las variables contienen más de una información?\nPodemos ver que la variable com_prov es un desastre. Contiene espacios en blanco, el código de las Comunidades Autónomas o Provincias y los nombres de cada una de ellas. Hay dos tipos de información aquí: códigos y nombres. Lo primero es separar los dos.\n\n\nCode\n# 1) Elimina espacios em blanco con la función trimws()\nd$com_prov &lt;- trimws(d$com_prov)\n\n# 2) Separa los códigos de los nombres con la función substr() \n# para crear dos nuevas variables: code y name\n\n# Seleccionamos los dos primeros dígitos de com_prov para\n# el código de la provincia\nd$code &lt;- substr(d$com_prov, 1,2)\n\n# Seleccionamos todos los demás caracteres a partir\n# del cuarto al último para encontrar el nombre de\n# las comunidades y provincias\nd$name &lt;- substr(d$com_prov, 4,nchar(d$com_prov))\n\n# Examina los resultados\nd[,c(\"com_prov\",\"code\",\"name\")]\n\n\n\n\n\n\n\n\n\n\n\nUnidades de Observación\n¿Todas las observaciones están en la misma unidad?\nNo. Podemos ver que el conjunto de datos contiene información sobre Provincias y Comunidades Autónomas. Este es un problema porque estamos tratando con información que está agregada a diferentes niveles. No se pueden comparar. Necesitamos separar el conjunto de datos original en dos: uno para Comunidades Autónomas y otro para Provincias.\nUsaremos filtros para crear estos dos data.frames. Este ejercicio nos brinda una excelente oportunidad para entrenar nuestras nuevas habilidades en la selección de datos.\n\n\nCode\n## Segundo: separar diferentes unidades de observación\n\n# Separar CCAA de Provincias\nd$com_prov\n\nd$ccaa &lt;- 0\nd$ccaa[c(1,10,14,16,18,21,23,33,39,44,48,51,56,58,60,62,66,68,70)] &lt;- 1\n\n# Crea un nuevo objecto con los dados de las CC. AA.\nca &lt;- d[d$ccaa==1,]\n\n# Crea un nuevo objecto con los dados de las provincias\npr &lt;- d[d$ccaa==0,]\n\n### Reordena los datos para que sean fáciles de examinar\nca &lt;- ca[,c(20,21,2:19)]\n\npr &lt;- pr[,c(20,21,2:19)]\n\n# Examina los resultados\nca\npr\n\n\n\n\n [1] \"01 Andalucía\"                   \"04 Almería\"                    \n [3] \"11 Cádiz\"                       \"14 Córdoba\"                    \n [5] \"18 Granada\"                     \"21 Huelva\"                     \n [7] \"23 Jaén\"                        \"29 Málaga\"                     \n [9] \"41 Sevilla\"                     \"02 Aragón\"                     \n[11] \"22 Huesca\"                      \"44 Teruel\"                     \n[13] \"50 Zaragoza\"                    \"03 Asturias, Principado de\"    \n[15] \"33 Asturias\"                    \"04 Balears, Illes\"             \n[17] \"07 Balears, Illes\"              \"05 Canarias\"                   \n[19] \"35 Palmas, Las\"                 \"38 Santa Cruz de Tenerife\"     \n[21] \"06 Cantabria\"                   \"39 Cantabria\"                  \n[23] \"07 Castilla y León\"             \"05 Ávila\"                      \n[25] \"09 Burgos\"                      \"24 León\"                       \n[27] \"34 Palencia\"                    \"37 Salamanca\"                  \n[29] \"40 Segovia\"                     \"42 Soria\"                      \n[31] \"47 Valladolid\"                  \"49 Zamora\"                     \n[33] \"08 Castilla - La Mancha\"        \"02 Albacete\"                   \n[35] \"13 Ciudad Real\"                 \"16 Cuenca\"                     \n[37] \"19 Guadalajara\"                 \"45 Toledo\"                     \n[39] \"09 Cataluña\"                    \"08 Barcelona\"                  \n[41] \"17 Girona\"                      \"25 Lleida\"                     \n[43] \"43 Tarragona\"                   \"10 Comunitat Valenciana\"       \n[45] \"03 Alicante/Alacant\"            \"12 Castellón/Castelló\"         \n[47] \"46 Valencia/València\"           \"11 Extremadura\"                \n[49] \"06 Badajoz\"                     \"10 Cáceres\"                    \n[51] \"12 Galicia\"                     \"15 Coruña, A\"                  \n[53] \"27 Lugo\"                        \"32 Ourense\"                    \n[55] \"36 Pontevedra\"                  \"13 Madrid, Comunidad de\"       \n[57] \"28 Madrid\"                      \"14 Murcia, Región de\"          \n[59] \"30 Murcia\"                      \"15 Navarra, Comunidad Foral de\"\n[61] \"31 Navarra\"                     \"16 País Vasco\"                 \n[63] \"01 Araba/Álava\"                 \"48 Bizkaia\"                    \n[65] \"20 Gipuzkoa\"                    \"17 Rioja, La\"                  \n[67] \"26 Rioja, La\"                   \"18 Ceuta\"                      \n[69] \"51 Ceuta\"                       \"19 Melilla\"                    \n[71] \"52 Melilla\"                    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreación de Indicadores\n¿Eres capaz de comparar los datos o necesitas calcular indicadores relativos?\nLos datos originales se expresan en números absolutos. No tiene sentido decir que Madrid tiene 923,113 extranjeros en edad escolar mientras que Salamanca solo tiene 15,365. El tamaño total de sus poblaciones es diferente. Por lo tanto, es crucial calcular números relativos (proporciones, porcentajes o razones) para comparar provincias o Comunidades Autónomas.\nPuesto que este es un conjunto de datos sobre educación, queremos crear indicadores diversos que nos permitan comparar tanto provincias o Comunidades Autónomas como grupos sociales (residentes nacidos en España y extranjeros) en relación con este tema en particular.\nLa primera cosa que necesitamos saber es cuántas personas con 15 años o más hay en total, para españoles y para extranjeros:\n\n\nCode\n# Totales\n\n# Total de personas con 15 años o más - población total\npr$total_edu_val &lt;- pr$total_edu-pr$tot_edu_no_apl\n\n# Total de personas con 15 años o más - Españoles\npr$es_edu_val &lt;- pr$total_edu_es-pr$es_edu_no_apl\n\n# Total de personas con 15 años o más - Extranjeros\npr$ex_edu_val &lt;- pr$total_edu_ex-pr$ex_edu_no_apl\n\n### Población nacida en el extranjero \n\n# Porcentaje\npr$p_foreign &lt;- round(pr$total_edu_ex/pr$total_edu*100,1)\n\n# Ratio de extranjeros por español\npr$rt_frgn_es &lt;- round(pr$total_edu_ex/pr$total_edu_es,2)\n\n# Compara los resultados\npr[,c(\"name\",\"total_edu_val\",\"es_edu_val\",\"ex_edu_val\",\"p_foreign\",         \n      \"rt_frgn_es\")]\n\n\n\n\n\n\n\n\n\nUna vez que tenemos estos números, podemos calcular los porcentajes de cada nivel educativo para la población total de 15 años o más.\n\n\nCode\n### Niveles educativos - población total\n\n# Primaria - Población total 15 o más\npr$p_tot_edu_prim &lt;- round(pr$tot_edu_prim/\n                             pr$total_edu_val*100,1)\n\n# Secundaria - Población total 15 o más\npr$p_tot_edu_sec &lt;- round((pr$tot_edu_prietp_sec+\n                             pr$tot_edu_segetp_sec)/\n                            pr$total_edu_val*100,1)\n\n# Universidad - Población total 15 o más\npr$p_tot_edu_uni &lt;- round(pr$tot_edu_sup/\n                            pr$total_edu_val*100,1)\n\n# Examina los resultados\npr[,c(\"name\",\"p_tot_edu_prim\",\"p_tot_edu_sec\",\"p_tot_edu_uni\")]\n\n\n\n\n\n\n\n\n\nAhora, creamos los mismos porcentajes para la población nacida en España.\n\n\nCode\n### Niveles educativos - nacidos en España\n\n# Primaria - españoles 15 o más\npr$p_es_edu_prim &lt;- round(pr$es_edu_prim/pr$es_edu_val*100,1)\n\n# Secundaria - españoles 15 o más\npr$p_es_edu_sec &lt;- round((pr$es_edu_prietp_sec+pr$es_edu_segetp_sec)/pr$es_edu_val*100,1)\n\n# Universidad - españoles 15 o más\npr$p_es_edu_uni &lt;- round(pr$es_edu_sup/pr$es_edu_val*100,1)\n\n# Examina los resultados\npr[,c(\"name\",\"p_es_edu_prim\",\"p_es_edu_sec\",\"p_es_edu_uni\")]\n\n\n\n\n\n\n\n\n\nEjercicio 1\nRepite el ejercicio y crea los porcentajes para la población nacida en el extranjero.\n\n\nCode\n### Niveles educativos - nacidos en el extranjero\n\n# Primaria - extranjero 15 o más\npr$p_ex_edu_prim &lt;- round(pr$ex_edu_prim/pr$ex_edu_val*100,1)\n\n# Secundaria - extranjero 15 o más\npr$p_ex_edu_sec &lt;- round((pr$ex_edu_prietp_sec+pr$ex_edu_segetp_sec)/pr$ex_edu_val*100,1)\n\n# Universidad - extranjero 15 o más\npr$p_ex_edu_uni &lt;- round(pr$ex_edu_sup/pr$ex_edu_val*100,1)\n\n# Examinemos los resultados\npr[,c(\"name\",\"p_ex_edu_prim\",\"p_ex_edu_sec\",\"p_ex_edu_uni\")]\n\n\n\n\n\n\n\n\n\nEjercicio 2\nUna vez que tenemos los datos para ambos grupos, con estas variables básicas, ¿qué otras variables o índices podrían calcularse a partir de los datos? Sugiere al menos dos.\n\n\nCode\n# ALGUNAS SUGERENCIAS:\n\n# Calcular la ratio entre nacidos en el extranjero \n# y en España para cada nivel educativo. \n\n# Tal ratio nos permitirá verificar el número de \n# extranjeros por cada nacido en España para cada\n# nivel educativo. Números POR DEBAJO de 1\n# muestran que hay menos (nacidos) EXTRANJEROS que españoles\n# con ese nivel educativo. Números POR ENCIMA de 1\n# representan que hay más extranjeros que españoles.\n\n# Primaria\npr$rt_pr &lt;- round(pr$p_ex_edu_prim/pr$p_es_edu_prim,2)\n\n# Secundaria\npr$rt_sc &lt;- round(pr$p_ex_edu_sec/pr$p_es_edu_sec,2)\n\n# Universidad\npr$rt_su &lt;- round(pr$p_ex_edu_uni/pr$p_es_edu_uni,2)\n\n# La próxima variable mide el grado de \n# desigualdad entre extranjeros y españoles\n# en cuanto a educación.\npr$desv &lt;- round(\n                  (\n                    abs(1-pr$rt_pr)+\n                    abs(1-pr$rt_sc)+\n                    abs(1-pr$rt_su)\n                    )/3,\n                  2)\n\n# Esta última variable normaliza la anterior\n# convirtiendo los valores a un rango de 0-1,\n# donde 0 representa total igualdad entre\n# extranjeros y españoles y 1 una desigualdad\n# absoluta entre ambos grupos.\npr$n_desv &lt;- round((pr$desv-min(pr$desv))/\n                     (max(pr$desv)-min(pr$desv)),2)\n\n# Examinemos los resultados\npr[,c(\"name\",\"rt_pr\",\"rt_sc\",\"rt_su\",\"desv\",\"n_desv\")]\n\n\n\n\n\n\n\n\n\nEjercicio 3 (en casa)\nRepita el proceso que acabamos de terminar utilizando el conjunto de datos que contiene la información agregada a nivel de Comunidad Autónoma (ca data.frame).\n\n\nCode\n# Totales\n\n# Total 15 años o más - población total\nca$total_edu_val &lt;- ca$total_edu-ca$tot_edu_no_apl\n\n# Total 15 años o más - españoles\nca$es_edu_val &lt;- ca$total_edu_es-ca$es_edu_no_apl\n\n# Total 15 años o más - población extranjera\nca$ex_edu_val &lt;- ca$total_edu_ex-ca$ex_edu_no_apl\n\n### Extranjeros\n\n# Porcentaje\nca$p_foreign &lt;- round(ca$total_edu_ex/ca$total_edu*100,1)\n\n# Ratio Extranjeros/Español\nca$rt_frgn_es &lt;- round(ca$total_edu_ex/ca$total_edu_es,2)\n\n### Niveles educativos - población total\n\n# Primaria - población total 15 o más\nca$p_tot_edu_prim &lt;- round(ca$tot_edu_prim/\n                             ca$total_edu_val*100,1)\n\n# Secundaria - población total 15 o más\nca$p_tot_edu_sec &lt;- round((ca$tot_edu_prietp_sec+\n                             ca$tot_edu_segetp_sec)/\n                            ca$total_edu_val*100,1)\n\n# Universidad - población total 15 o más\nca$p_tot_edu_uni &lt;- round(ca$tot_edu_sup/\n                            ca$total_edu_val*100,1)\n\n### Educación - Españoles\n\n# Primaria - españoles 15 o más\nca$p_es_edu_prim &lt;- round(ca$es_edu_prim/ca$es_edu_val*100,1)\n\n# Secundaria - españoles 15 o más\nca$p_es_edu_sec &lt;- round((ca$es_edu_prietp_sec+ca$es_edu_segetp_sec)/ca$es_edu_val*100,1)\n\n# Universidad - españoles 15 o más\nca$p_es_edu_uni &lt;- round(ca$es_edu_sup/ca$es_edu_val*100,1)\n\n\n### Educación - Extranjeros\n\n# Primaria - extranjeros 15 o más\nca$p_ex_edu_prim &lt;- round(ca$ex_edu_prim/ca$ex_edu_val*100,1)\n\n# Secundaria - extranjeros 15 o más\nca$p_ex_edu_sec &lt;- round((ca$ex_edu_prietp_sec+ca$ex_edu_segetp_sec)/ca$ex_edu_val*100,1)\n\n# Universidad - extranjeros 15 o más\nca$p_ex_edu_uni &lt;- round(ca$ex_edu_sup/ca$ex_edu_val*100,1)\n\n# Examina los resultados\nca"
  },
  {
    "objectID": "S_3_Analisis.html",
    "href": "S_3_Analisis.html",
    "title": "Análisis",
    "section": "",
    "text": "La tendencia central es una medida que resume la distribución de un conjunto de datos en un solo valor. Las medidas de tendencia central más comunes son la media, la mediana y la moda.\nCuando queremos saber más sobre los estudiantes en clase, por ejemplo, generalmente empleamos algunas señales de información para ayudarnos a comprender un poco mejor quiénes son. La edad es uno de esos tipos de información. Nuestra pregunta es: ¿cuántos años tienen los estudiantes? La composición por sexo es otra: ¿cuántos son mujeres y cuántos son hombres? Sus calificaciones en cursos anteriores también nos ayudan a conocerlos.\nLas medidas de tendencia central son herramientas para resumir datos sobre individuos o grupos que nos permiten comprender un poco mejor quiénes son o cuál es el comportamiento esperado en situaciones concretas.\n\n\n\nComo acabamos de ver, las medidas de tendencia central son la media, la mediana y la moda. Las dos primeras tienen funciones nativas en R para calcularlas, mientras que la tercera es menos utilizada en análisis comunes, por lo que fue descartada desde el principio.\nUsaremos un data.frame llamado d basado en el data.frame states del paquete polscidata para ilustrar los conceptos y realizar ejercicios.\n\n\nLa función mean() calcula el valor promedio o media de una variable dada. Tiene dos parámetros principales a tener en cuenta: x - la variable de la que deseamos calcular la media; y na.rm - indicando si queremos excluir los valores faltantes en el cálculo o no.\nCalculemos la media de la variable unemploy (% de desempleo en cada Estado) de nuestro data.frame d. Recuerda: es necesario usar el signo de dólar ($) después del nombre del data.frame para referirse a una variable. En este caso, sería d$unemploy. Así que hagámoslo:\n\n\nCode\nmean(d$unemploy)\n\n\n[1] 5.188\n\n\nEl paro medio en los 50 Estados de Estados Unidos es del 5.2 (5.188 para ser exactos).\nAhora, repitamos la operación para la variable relig_import (importancia de la religión):\n\n\nCode\nmean(d$relig_import)\n\n\n[1] NA\n\n\nComo puedes ver, el resultado fue NA (No Disponible). Verás este acrónimo cada vez que encuentres datos faltantes en R. Para eliminar los casos faltantes, necesitamos usar na.rm=TRUE como parámetro.\n\n\nCode\nmean(d$relig_import, na.rm = TRUE)\n\n\n[1] 37.31751\n\n\nAhora, te toca a ti. Calcula la media para las variables urban (% de población urbana) y permit (% de la población que “Siempre permite” el aborto).\n\n\nCode\nmean(d$urban)\n\n\n[1] 71.694\n\n\nCode\nmean(d$permit, na.rm = TRUE)\n\n\n[1] 36.6875\n\n\n\n\n\nLa segunda medida es la mediana, que separa los valores entre dos grupos con el mismo tamaño. La función es median() y tiene los mismos parámetros mencionados para la media: x - la variable de la que deseamos calcular la media; y na.rm - indicando si queremos excluir los valores faltantes en el cálculo o no.\nAhora, en lugar de calcular la media, calculemos la mediana para la variable unemploy (% de desempleo en cada Estado) de nuestro data.frame d.\n\n\nCode\nmedian(d$unemploy)\n\n\n[1] 5.25\n\n\nLa tasa de desempleo mediana, la que separa los 50 Estados de Estados Unidos en dos grupos de 25 estados, es 5.25.\nAhora, repitamos la operación para la variable relig_import (importancia de la religión):\n\n\nCode\nmedian(d$relig_import)\n\n\n[1] NA\n\n\nComo puedes ver, el resultado fue NA (No Disponible). Al igual que en el ejemplo anterior, necesitamos usar na.rm=TRUE como parámetro.\n\n\nCode\nmedian(d$relig_import, na.rm = TRUE)\n\n\n[1] 33.98906\n\n\nDe nuevo, te toca. Calcula la mediana para las variables urban (% de población urbana) y permit (% de la población que “Siempre permite” el aborto).\n\n\nCode\nmedian(d$urban)\n\n\n[1] 71.5\n\n\nCode\nmedian(d$permit, na.rm = TRUE)\n\n\n[1] 35.9\n\n\n\n\n\nLa tercera medida es la moda. Es el valor más frecuente en los datos. Tiene poco sentido calcular la moda para variables continuas, pero puede proporcionar información general para números enteros (la edad más común en un grupo o el número de veces que un equipo nacional de fútbol ganó la Copa del Mundo ;-) ). No hay una función para calcular la moda como tal en R. Podemos hacerlo usando la función table() y simplemente seleccionando el valor más alto.\nEn el fragmento de código a continuación, creo una función llamada calcMode() que:\n\ncuenta la frecuencia de cada valor de la variable\nordena los valores en orden decreciente y selecciona el primer valor\ndevuelve la Moda y su frecuencia.\n\nAhora, vamos a usarla para calcular la moda de la variable gunlaw_rank.\n\n\nCode\n# Crea la función para calcular la moda\ncalcMode &lt;- function(var){\n\n  # Averigua cuál valor aparece más  \n  tb &lt;-  sort(table(var), decreasing = T)[1]\n  \n  # Informa los resultados\n  paste0(\"Mode: \", names(tb), \" - Frequency: \", tb, \" times.\")\n\n}\n\n# Calcula la moda para la variable gunlaw_rank\ncalcMode(d$gunlaw_rank)\n\n\n[1] \"Mode: 36 - Frequency: 6 times.\"\n\n\nEsta función también se puede usar para variables categóricas. Repitamos el ejercicio para la variable cig_tax12_3 (Impuestos sobre los cigarrillos):\n\n\nCode\n# Crea la función para calcular la moda\ncalcMode &lt;- function(var){\n\n  # Averigua cuál valor aparece más  \n  tb &lt;-  sort(table(var), decreasing = T)[1]\n  \n  # Informa los resultados\n  paste0(\"Mode: \", names(tb), \" - Frequency: \", tb, \" times.\")\n\n}\n\n# Calcula la moda para variable cig_tax12_3\ncalcMode(d$cig_tax12_3)\n\n\n[1] \"Mode: MidTax - Frequency: 18 times.\"\n\n\nEs tu turno. Copia la función y calcula la moda para la variable pot_policy (Leyes de la marihuana):\n\n\nCode\n# Crea la función para calcular la moda\ncalcMode &lt;- function(var){\n\n  # Averigua cuál valor aparece más  \n  tb &lt;-  sort(table(var), decreasing = T)[1]\n  \n  # Informa los resultados\n  paste0(\"Mode: \", names(tb), \" - Frequency: \", tb, \" times.\")\n\n}\n\n# Calcula la moda para la variable pot_policy\ncalcMode(d$pot_policy)\n\n\n[1] \"Mode: Not legal - Frequency: 18 times.\""
  },
  {
    "objectID": "S_3_Analisis.html#medidas-de-tendencia-central",
    "href": "S_3_Analisis.html#medidas-de-tendencia-central",
    "title": "Análisis",
    "section": "",
    "text": "La tendencia central es una medida que resume la distribución de un conjunto de datos en un solo valor. Las medidas de tendencia central más comunes son la media, la mediana y la moda.\nCuando queremos saber más sobre los estudiantes en clase, por ejemplo, generalmente empleamos algunas señales de información para ayudarnos a comprender un poco mejor quiénes son. La edad es uno de esos tipos de información. Nuestra pregunta es: ¿cuántos años tienen los estudiantes? La composición por sexo es otra: ¿cuántos son mujeres y cuántos son hombres? Sus calificaciones en cursos anteriores también nos ayudan a conocerlos.\nLas medidas de tendencia central son herramientas para resumir datos sobre individuos o grupos que nos permiten comprender un poco mejor quiénes son o cuál es el comportamiento esperado en situaciones concretas.\n\n\n\nComo acabamos de ver, las medidas de tendencia central son la media, la mediana y la moda. Las dos primeras tienen funciones nativas en R para calcularlas, mientras que la tercera es menos utilizada en análisis comunes, por lo que fue descartada desde el principio.\nUsaremos un data.frame llamado d basado en el data.frame states del paquete polscidata para ilustrar los conceptos y realizar ejercicios.\n\n\nLa función mean() calcula el valor promedio o media de una variable dada. Tiene dos parámetros principales a tener en cuenta: x - la variable de la que deseamos calcular la media; y na.rm - indicando si queremos excluir los valores faltantes en el cálculo o no.\nCalculemos la media de la variable unemploy (% de desempleo en cada Estado) de nuestro data.frame d. Recuerda: es necesario usar el signo de dólar ($) después del nombre del data.frame para referirse a una variable. En este caso, sería d$unemploy. Así que hagámoslo:\n\n\nCode\nmean(d$unemploy)\n\n\n[1] 5.188\n\n\nEl paro medio en los 50 Estados de Estados Unidos es del 5.2 (5.188 para ser exactos).\nAhora, repitamos la operación para la variable relig_import (importancia de la religión):\n\n\nCode\nmean(d$relig_import)\n\n\n[1] NA\n\n\nComo puedes ver, el resultado fue NA (No Disponible). Verás este acrónimo cada vez que encuentres datos faltantes en R. Para eliminar los casos faltantes, necesitamos usar na.rm=TRUE como parámetro.\n\n\nCode\nmean(d$relig_import, na.rm = TRUE)\n\n\n[1] 37.31751\n\n\nAhora, te toca a ti. Calcula la media para las variables urban (% de población urbana) y permit (% de la población que “Siempre permite” el aborto).\n\n\nCode\nmean(d$urban)\n\n\n[1] 71.694\n\n\nCode\nmean(d$permit, na.rm = TRUE)\n\n\n[1] 36.6875\n\n\n\n\n\nLa segunda medida es la mediana, que separa los valores entre dos grupos con el mismo tamaño. La función es median() y tiene los mismos parámetros mencionados para la media: x - la variable de la que deseamos calcular la media; y na.rm - indicando si queremos excluir los valores faltantes en el cálculo o no.\nAhora, en lugar de calcular la media, calculemos la mediana para la variable unemploy (% de desempleo en cada Estado) de nuestro data.frame d.\n\n\nCode\nmedian(d$unemploy)\n\n\n[1] 5.25\n\n\nLa tasa de desempleo mediana, la que separa los 50 Estados de Estados Unidos en dos grupos de 25 estados, es 5.25.\nAhora, repitamos la operación para la variable relig_import (importancia de la religión):\n\n\nCode\nmedian(d$relig_import)\n\n\n[1] NA\n\n\nComo puedes ver, el resultado fue NA (No Disponible). Al igual que en el ejemplo anterior, necesitamos usar na.rm=TRUE como parámetro.\n\n\nCode\nmedian(d$relig_import, na.rm = TRUE)\n\n\n[1] 33.98906\n\n\nDe nuevo, te toca. Calcula la mediana para las variables urban (% de población urbana) y permit (% de la población que “Siempre permite” el aborto).\n\n\nCode\nmedian(d$urban)\n\n\n[1] 71.5\n\n\nCode\nmedian(d$permit, na.rm = TRUE)\n\n\n[1] 35.9\n\n\n\n\n\nLa tercera medida es la moda. Es el valor más frecuente en los datos. Tiene poco sentido calcular la moda para variables continuas, pero puede proporcionar información general para números enteros (la edad más común en un grupo o el número de veces que un equipo nacional de fútbol ganó la Copa del Mundo ;-) ). No hay una función para calcular la moda como tal en R. Podemos hacerlo usando la función table() y simplemente seleccionando el valor más alto.\nEn el fragmento de código a continuación, creo una función llamada calcMode() que:\n\ncuenta la frecuencia de cada valor de la variable\nordena los valores en orden decreciente y selecciona el primer valor\ndevuelve la Moda y su frecuencia.\n\nAhora, vamos a usarla para calcular la moda de la variable gunlaw_rank.\n\n\nCode\n# Crea la función para calcular la moda\ncalcMode &lt;- function(var){\n\n  # Averigua cuál valor aparece más  \n  tb &lt;-  sort(table(var), decreasing = T)[1]\n  \n  # Informa los resultados\n  paste0(\"Mode: \", names(tb), \" - Frequency: \", tb, \" times.\")\n\n}\n\n# Calcula la moda para la variable gunlaw_rank\ncalcMode(d$gunlaw_rank)\n\n\n[1] \"Mode: 36 - Frequency: 6 times.\"\n\n\nEsta función también se puede usar para variables categóricas. Repitamos el ejercicio para la variable cig_tax12_3 (Impuestos sobre los cigarrillos):\n\n\nCode\n# Crea la función para calcular la moda\ncalcMode &lt;- function(var){\n\n  # Averigua cuál valor aparece más  \n  tb &lt;-  sort(table(var), decreasing = T)[1]\n  \n  # Informa los resultados\n  paste0(\"Mode: \", names(tb), \" - Frequency: \", tb, \" times.\")\n\n}\n\n# Calcula la moda para variable cig_tax12_3\ncalcMode(d$cig_tax12_3)\n\n\n[1] \"Mode: MidTax - Frequency: 18 times.\"\n\n\nEs tu turno. Copia la función y calcula la moda para la variable pot_policy (Leyes de la marihuana):\n\n\nCode\n# Crea la función para calcular la moda\ncalcMode &lt;- function(var){\n\n  # Averigua cuál valor aparece más  \n  tb &lt;-  sort(table(var), decreasing = T)[1]\n  \n  # Informa los resultados\n  paste0(\"Mode: \", names(tb), \" - Frequency: \", tb, \" times.\")\n\n}\n\n# Calcula la moda para la variable pot_policy\ncalcMode(d$pot_policy)\n\n\n[1] \"Mode: Not legal - Frequency: 18 times.\""
  },
  {
    "objectID": "S_3_Analisis.html#medidas-de-dispersión-dispersión-y-varianza",
    "href": "S_3_Analisis.html#medidas-de-dispersión-dispersión-y-varianza",
    "title": "Análisis",
    "section": "Medidas de Dispersión: Dispersión y Varianza",
    "text": "Medidas de Dispersión: Dispersión y Varianza\n\n¿Qué es la Dispersión y la Varianza?\nEl video a continuación explica las principales medidas de dispersión: rango, rango intercuartil, varianza y desviación estándar.\n\n\n\nMedidas de Dispersión en R\n\nINTERVALO o RANGO\nLa función range() calcula el rango para cualquier variable NUMÉRICA dada en un data.frame, y devuelve los valores mínimo y máximo.\n\n\nCode\nrange(d$urban)\n\n\n[1] 38.2 94.4\n\n\nAhora calcula el rango para las variables prochoice (% de la población pro-elección) y permit.\n\n\nCode\nrange(d$prochoice)\n\n\n[1] 33 70\n\n\nCode\n# Puesto que permit contiene casos perdidos, \n# resulta importante usar el parámetro na.rm=TRUE\nrange(d$permit, na.rm = TRUE)\n\n\n[1] 15.5 58.5\n\n\n\n\nIQR - Rango Intercuartiles\nLos cuartiles son valores que separan una variable en cuatro grupos iguales con el mismo tamaño. Indican los valores que representan las posiciones del 25% inferior, 50% y 75% de los casos ordenados de menor a mayor. El rango intercuartil selecciona solo los cuartiles que marcan el 50% de las observaciones en el medio, dejando fuera el 25% inferior y el 25% superior. Esto ayuda a incluir los extremos en la evaluación de la dispersión de valores.\nMira este breve video para entender cuartiles, percentiles, deciles, etc…\n\nLa función IQR() calcula el rango intercuartil para una variable dada. Resta el segundo cuartil al tercero: Q3-Q2.\nEl código a continuación calcula el rango intercuartil para la variable urban.\n\n\nCode\nIQR(d$urban)\n\n\n[1] 25.05\n\n\nAhora, repite la operación para la variable permit.\n\n\nCode\nIQR(d$permit,na.rm = TRUE)\n\n\n[1] 15.45\n\n\n\n\nVARIANZA\nLos mismos principios se aplican a la varianza, calculada por la función var(). Los parámetros son los mismos que las funciones mean() y median().\nCalculemos la varianza de la variable urban:\n\n\nCode\nvar(d$urban)\n\n\n[1] 222.0842\n\n\nAhora, calcula la varianza de las variables over64 (% de edad 65 o superior) y permit.\n\n\nCode\nvar(d$over64)\n\n\n[1] 3.034371\n\n\nCode\nvar(d$permit,na.rm = TRUE)\n\n\n[1] 99.15958\n\n\n\n\nDesviación Estándar\nLa desviación estándar es la última medida de dispersión considerada en este tutorial. Se mide en la función sd() de R.\nCalculemos la desviación estándar de la variable urban:\n\n\nCode\nsd(d$urban)\n\n\n[1] 14.90249\n\n\nCalcula ahora la desviación estándar de las variables over64 (% de edad 65 o superior) y permit.\n\n\nCode\nsd(d$over64)\n\n\n[1] 1.741945\n\n\nCode\nsd(d$permit,na.rm = TRUE)\n\n\n[1] 9.957891"
  },
  {
    "objectID": "S_3_Analisis.html#trabajando-con-datos-categóricos-frecuencias",
    "href": "S_3_Analisis.html#trabajando-con-datos-categóricos-frecuencias",
    "title": "Análisis",
    "section": "Trabajando con Datos Categóricos: Frecuencias",
    "text": "Trabajando con Datos Categóricos: Frecuencias\n\nFrecuencias de datos categóricos\nMira el video a continuación para entender cómo calcular datos categóricos:\n\n\n\nTablas de Frecuencia en R\nLas tablas de frecuencia son la forma más adecuada de resumir datos categóricos. Una vez que tenemos las frecuencias, podemos usarlas para calcular una serie de otras estadísticas e indicadores.\nLa función table() en R devuelve los recuentos de cada categoría en una variable dada. Vamos a usarla para devolver el tipo de política de género que mantienen los EE. UU.:\n\n\nCode\ntable(d$gay_policy)\n\n\n\n     Most liberal           Liberal      Conservative Most conservative \n                6                14                10                20 \n\n\nComo podemos observar, la mayoría de los estados son Conservadores (10) o Muy Conservadores (20). Si quisiéramos expresar estos números en porcentajes, necesitaríamos dividir los resultados por el número total de casos o usar la función prop.table(). Hagámoslo:\n\n\nCode\n# Dividiendo los resultados por el total\n# de observaciones y, entonces, \n# multiplicando por 100 \ntable(d$gay_policy)/sum(table(d$gay_policy))*100\n\n\n\n     Most liberal           Liberal      Conservative Most conservative \n               12                28                20                40 \n\n\nCode\n# Usando la función prop.table() y, \n# entonces, multiplicando por 100\nprop.table(table(d$gay_policy))*100\n\n\n\n     Most liberal           Liberal      Conservative Most conservative \n               12                28                20                40"
  },
  {
    "objectID": "S_3_Analisis.html#explorando-la-distribución-de-datos-en-r",
    "href": "S_3_Analisis.html#explorando-la-distribución-de-datos-en-r",
    "title": "Análisis",
    "section": "Explorando la Distribución de Datos en R",
    "text": "Explorando la Distribución de Datos en R\n\nExplorando los data.frames\nLa síntesis de datos en R se refiere al proceso de reducir un conjunto de datos a un tamaño más manejable mediante la agregación o extracción de información clave de él. Esto se puede hacer utilizando varias funciones de R como summarize() y aggregate() que le permiten realizar cálculos como la media, la mediana y la desviación estándar en columnas específicas o grupos de datos. Además, la función describe() proporciona un resumen rápido de estadísticas básicas para un conjunto de datos dado. Otros paquetes de R como dplyr y tidyr también proporcionan funciones útiles para la síntesis y manipulación de datos.\nLa función summary() en R es una función genérica que se utiliza para producir un resumen de varios tipos de objetos de R, como vectores, matrices, listas, marcos de datos y modelos. Cuando se aplica a un vector o un marco de datos, summary() devuelve una variedad de estadísticas resumidas, como la media, la mediana, la desviación estándar, los valores mínimos y máximos del vector o marco de datos.\nPor ejemplo, si tenemos un marco de datos llamado d podemos usar el siguiente comando para obtener un resumen del marco de datos:\n\n\nCode\nsummary(d)\n\n\n     abort_rank3 abortion_rank12  adv_or_more       ba_or_more   \n More restr:17   Min.   : 1.00   Min.   : 6.100   Min.   :17.30  \n Mid       :17   1st Qu.:13.25   1st Qu.: 7.950   1st Qu.:24.15  \n Less restr:16   Median :25.50   Median : 9.200   Median :26.45  \n                 Mean   :25.50   Mean   : 9.794   Mean   :27.17  \n                 3rd Qu.:37.75   3rd Qu.:11.000   3rd Qu.:30.35  \n                 Max.   :50.00   Max.   :16.400   Max.   :38.20  \n                                                                 \n   cig_tax12     cig_tax12_3 conserv_advantage conserv_public \n Min.   :0.170   LoTax :17   Min.   :-2.20     Min.   :26.80  \n 1st Qu.:0.625   MidTax:18   1st Qu.:10.28     1st Qu.:33.92  \n Median :1.349   HiTax :15   Median :19.00     Median :38.65  \n Mean   :1.464               Mean   :17.71     Mean   :38.40  \n 3rd Qu.:2.000               3rd Qu.:25.77     3rd Qu.:42.90  \n Max.   :4.350               Max.   :36.00     Max.   :51.40  \n                                                              \n dem_advantage      govt_worker         gun_rank3    gun_rank11   \n Min.   :-36.700   Min.   :11.50   More restr:15   Min.   : 1.00  \n 1st Qu.: -4.875   1st Qu.:14.12   Mid       :14   1st Qu.:15.00  \n Median :  0.950   Median :15.85   Less restr:21   Median :26.00  \n Mean   :  0.948   Mean   :16.61                   Mean   :27.02  \n 3rd Qu.: 10.925   3rd Qu.:17.77                   3rd Qu.:39.00  \n Max.   : 24.000   Max.   :28.00                   Max.   :50.00  \n                                                                  \n  gun_scale11    hr_cons_rank11   hr_conserv11   hr_lib_rank11  \n Min.   : 0.00   Min.   : 43.0   Min.   :13.08   Min.   : 51.0  \n 1st Qu.: 4.00   1st Qu.:150.4   1st Qu.:44.97   1st Qu.:183.7  \n Median : 6.50   Median :197.2   Median :56.08   Median :232.3  \n Mean   :16.04   Mean   :207.5   Mean   :52.81   Mean   :221.0  \n 3rd Qu.:15.00   3rd Qu.:244.7   3rd Qu.:65.54   3rd Qu.:277.9  \n Max.   :81.00   Max.   :377.5   Max.   :85.38   Max.   :385.0  \n                                                                \n  hr_liberal11      hs_or_more      obama2012     obama_win12\n Min.   : 14.62   Min.   :79.90   Min.   :24.67   No :24     \n 1st Qu.: 34.46   1st Qu.:83.97   1st Qu.:40.05   Yes:26     \n Median : 44.53   Median :87.50   Median :50.24              \n Mean   : 49.26   Mean   :86.87   Mean   :48.16              \n 3rd Qu.: 55.91   3rd Qu.:89.80   3rd Qu.:55.42              \n Max.   :104.49   Max.   :91.80   Max.   :70.55              \n                                                             \n    pop2000            pop2010         pop2010_hun_thou   popchng0010     \n Min.   :  493782   Min.   :  563626   Min.   :  5.636   Min.   : -54804  \n 1st Qu.: 1735533   1st Qu.: 1833004   1st Qu.: 18.330   1st Qu.: 114520  \n Median : 4026890   Median : 4436370   Median : 44.364   Median : 299148  \n Mean   : 5616997   Mean   : 6162876   Mean   : 61.629   Mean   : 545879  \n 3rd Qu.: 6281944   3rd Qu.: 6680312   3rd Qu.: 66.803   3rd Qu.: 517304  \n Max.   :33871648   Max.   :37253956   Max.   :372.540   Max.   :4293741  \n                                                                          \n   popchngpct                   pot_policy   prochoice        prolife     \n Min.   :-0.600   Not legal          :18   Min.   :33.00   Min.   :25.00  \n 1st Qu.: 4.350   Pending legis      : 8   1st Qu.:47.00   1st Qu.:33.00  \n Median : 7.850   Decrim             : 6   Median :55.50   Median :40.00  \n Mean   : 9.852   Medicinal          :10   Mean   :53.66   Mean   :40.66  \n 3rd Qu.:13.900   Medicinal / Decrim.: 8   3rd Qu.:62.75   3rd Qu.:47.75  \n Max.   :35.100                            Max.   :70.00   Max.   :61.00  \n                                                                          \n   relig_cath      relig_prot      relig_high      relig_low     religiosity3\n Min.   : 5.90   Min.   :12.30   Min.   :19.10   Min.   :11.20   Low :17     \n 1st Qu.:13.82   1st Qu.:42.62   1st Qu.:32.98   1st Qu.:26.30   Mid :17     \n Median :22.60   Median :51.60   Median :38.20   Median :31.85   High:16     \n Mean   :21.91   Mean   :52.40   Mean   :39.40   Mean   :31.99               \n 3rd Qu.:27.82   3rd Qu.:61.70   3rd Qu.:45.33   3rd Qu.:39.10               \n Max.   :44.10   Max.   :80.30   Max.   :58.40   Max.   :57.10               \n                                                                             \n   romney2012      smokers12        stateid      to_0812       uninsured_pct  \n Min.   :27.84   Min.   :11.00   AK     : 1   Min.   :-9.400   Min.   : 4.50  \n 1st Qu.:41.31   1st Qu.:19.00   AL     : 1   1st Qu.:-4.800   1st Qu.:13.95  \n Median :48.31   Median :21.00   AR     : 1   Median :-3.700   Median :16.80  \n Mean   :49.80   Mean   :21.06   AZ     : 1   Mean   :-3.520   Mean   :16.77  \n 3rd Qu.:57.86   3rd Qu.:24.00   CA     : 1   3rd Qu.:-2.025   3rd Qu.:20.40  \n Max.   :72.56   Max.   :29.00   CO     : 1   Max.   : 2.100   Max.   :28.80  \n                                 (Other):44                                   \n  abort_rate05    abort_rate08        abortlaw3    abortlaw10   \n Min.   : 0.70   Min.   : 0.90   0-5 restr :17   Min.   : 0.00  \n 1st Qu.: 9.05   1st Qu.: 9.00   6-8 restr :20   1st Qu.: 4.25  \n Median :14.10   Median :15.35   9-10 restr:13   Median : 6.50  \n Mean   :15.25   Mean   :15.62                   Mean   : 6.28  \n 3rd Qu.:18.88   3rd Qu.:19.00                   3rd Qu.: 8.75  \n Max.   :38.20   Max.   :40.00                   Max.   :10.00  \n                                                                \n    alcohol        attend_pct    battle04     blkleg         blkpct04    \n Min.   :1.330   Min.   :22.00   No :37   Min.   : 0.00   Min.   : 0.40  \n 1st Qu.:2.078   1st Qu.:32.00   Yes:13   1st Qu.: 2.00   1st Qu.: 2.60  \n Median :2.345   Median :38.00            Median : 4.50   Median : 7.15  \n Mean   :2.414   Mean   :38.94            Mean   : 7.54   Mean   :10.33  \n 3rd Qu.:2.618   3rd Qu.:46.50            3rd Qu.:13.75   3rd Qu.:15.55  \n Max.   :4.380   Max.   :60.00            Max.   :26.00   Max.   :36.80  \n                                                                         \n    blkpct08         blkpct10          bush00          bush04     \n Min.   : 0.700   Min.   : 0.800   Min.   :31.91   Min.   :36.78  \n 1st Qu.: 3.225   1st Qu.: 3.825   1st Qu.:44.81   1st Qu.:46.48  \n Median : 7.350   Median : 8.250   Median :50.59   Median :52.70  \n Mean   :10.532   Mean   :11.262   Mean   :50.44   Mean   :53.14  \n 3rd Qu.:15.575   3rd Qu.:15.925   3rd Qu.:56.79   3rd Qu.:59.52  \n Max.   :37.200   Max.   :37.600   Max.   :67.76   Max.   :71.54  \n                                                                  \n    carfatal       carfatal07       cig_tax             cig_tax_3 \n Min.   : 8.80   Min.   : 6.70   Min.   :0.0700   $.07-$.64  :17  \n 1st Qu.:13.20   1st Qu.:12.00   1st Qu.:0.5750   $.695-$1.36:17  \n Median :17.35   Median :15.10   Median :0.9875   $1.41-$2.58:16  \n Mean   :17.52   Mean   :15.96   Mean   :1.0744                   \n 3rd Qu.:21.55   3rd Qu.:19.02   3rd Qu.:1.5075                   \n Max.   :31.50   Max.   :31.60   Max.   :2.5800                   \n                                                                  \n   cigarettes        college         conpct_m       cons_hr06    \n Min.   : 2.400   Min.   :17.00   Min.   :22.38   Min.   : 7.60  \n 1st Qu.: 5.505   1st Qu.:23.12   1st Qu.:30.25   1st Qu.:39.82  \n Median : 7.215   Median :25.10   Median :33.78   Median :59.85  \n Mean   : 7.576   Mean   :25.85   Mean   :33.97   Mean   :55.87  \n 3rd Qu.: 8.668   3rd Qu.:29.00   3rd Qu.:38.26   3rd Qu.:70.94  \n Max.   :18.950   Max.   :35.90   Max.   :46.83   Max.   :91.00  \n                                                                 \n   cons_hr09        cook_index       cook_index3    defexpen     \n Min.   :  0.00   Min.   :-20.20   More Rep:17   Min.   : 282.0  \n 1st Qu.: 22.12   1st Qu.: -9.35   Even    :18   1st Qu.: 600.0  \n Median : 40.94   Median : -1.75   More Dem:15   Median : 931.5  \n Mean   : 41.67   Mean   : -2.47                 Mean   :1093.7  \n 3rd Qu.: 61.41   3rd Qu.:  4.30                 3rd Qu.:1262.8  \n Max.   :100.00   Max.   : 13.40                 Max.   :4425.0  \n                                                                 \n    demhr11          dem_hr09         demnat06         dempct_m    \n Min.   :  0.00   Min.   :  0.00   Min.   :  0.00   Min.   :22.94  \n 1st Qu.: 20.56   1st Qu.: 40.71   1st Qu.: 25.57   1st Qu.:31.18  \n Median : 33.33   Median : 62.50   Median : 40.00   Median :35.59  \n Mean   : 41.20   Mean   : 60.98   Mean   : 45.01   Mean   :35.42  \n 3rd Qu.: 58.89   3rd Qu.: 85.62   3rd Qu.: 66.67   3rd Qu.:39.92  \n Max.   :100.00   Max.   :166.67   Max.   :100.00   Max.   :50.72  \n                                                                   \n   demstate06      demstate09      demstate13       density       \n Min.   :24.76   Min.   :23.81   Min.   : 0.00   Min.   :   1.20  \n 1st Qu.:43.94   1st Qu.:46.00   1st Qu.:35.76   1st Qu.:  44.45  \n Median :55.80   Median :57.65   Median :43.98   Median :  98.75  \n Mean   :53.62   Mean   :55.26   Mean   :46.03   Mean   : 194.96  \n 3rd Qu.:60.71   3rd Qu.:64.29   3rd Qu.:58.73   3rd Qu.: 209.50  \n Max.   :88.00   Max.   :90.27   Max.   :89.47   Max.   :1195.50  \n NA's   :1       NA's   :1                                        \n           division  earmarks_pcap         evm             evo       \n South Atlantic: 8   Min.   : 10.00   Min.   : 0.00   Min.   : 0.00  \n Mountain      : 8   1st Qu.: 14.80   1st Qu.: 0.00   1st Qu.: 0.00  \n W. North Cent : 7   Median : 25.70   Median : 0.00   Median : 4.00  \n New England   : 6   Mean   : 42.41   Mean   : 3.46   Mean   : 7.24  \n E. North Cent : 5   3rd Qu.: 37.62   3rd Qu.: 5.75   3rd Qu.:10.75  \n Pacific       : 5   Max.   :425.50   Max.   :34.00   Max.   :55.00  \n (Other)       :11                                                   \n    evo2012         evr2012                  gay_policy       gay_policy2\n Min.   : 0.00   Min.   : 0.00   Most liberal     : 6   Liberal     :20  \n 1st Qu.: 0.00   1st Qu.: 0.00   Liberal          :14   Conservative:30  \n Median : 3.00   Median : 0.00   Conservative     :10                    \n Mean   : 6.58   Mean   : 4.12   Most conservative:20                    \n 3rd Qu.:10.00   3rd Qu.: 6.00                                           \n Max.   :55.00   Max.   :38.00                                           \n                                                                         \n gay_policy_con  gay_support    gay_support3     gb_win00       gb_win04 \n No :30         Min.   :38.00   Low :17      Gore win:20   Kerry win:19  \n Yes:20         1st Qu.:51.00   Med :20      Bush win:30   Bush win :31  \n                Median :56.00   High:13                                  \n                Mean   :55.34                                            \n                3rd Qu.:60.75                                            \n                Max.   :68.00                                            \n                                                                         \n     gore00        gun_check         gun_dealer       gun_murder10  \n Min.   :26.34   Min.   :  976.5   Min.   :  5.915   Min.   :0.300  \n 1st Qu.:40.93   1st Qu.: 4848.4   1st Qu.: 42.904   1st Qu.:1.225  \n Median :46.22   Median : 6970.4   Median : 50.582   Median :2.700  \n Mean   :45.23   Mean   : 6833.9   Mean   : 58.240   Mean   :2.500  \n 3rd Qu.:50.49   3rd Qu.: 8357.8   3rd Qu.: 66.630   3rd Qu.:3.275  \n Max.   :60.99   Max.   :13589.3   Max.   :146.956   Max.   :7.700  \n                 NA's   :1                                          \n  gun_rank_rev    gunlaw_rank       gunlaw_rank3_rev  gunlaw_scale  \n Min.   : 1.00   Min.   : 1.00   Fewer restr:15      Min.   : 2.00  \n 1st Qu.:13.00   1st Qu.:13.25   Mid        :17      1st Qu.: 6.00  \n Median :24.50   Median :24.50   More restr :18      Median :10.50  \n Mean   :24.48   Mean   :24.52                       Mean   :17.66  \n 3rd Qu.:35.75   3rd Qu.:36.00                       3rd Qu.:19.50  \n Max.   :48.00   Max.   :48.00                       Max.   :79.00  \n                                                                    \n   hispanic04       hispanic08       hispanic10       indpct_m    \n Min.   : 0.800   Min.   : 1.100   Min.   : 1.20   Min.   :19.01  \n 1st Qu.: 2.800   1st Qu.: 3.475   1st Qu.: 4.25   1st Qu.:29.73  \n Median : 5.750   Median : 6.800   Median : 8.20   Median :33.02  \n Mean   : 8.812   Mean   : 9.858   Mean   :10.61   Mean   :33.33  \n 3rd Qu.:10.100   3rd Qu.:11.450   3rd Qu.:12.22   3rd Qu.:37.43  \n Max.   :43.300   Max.   :44.900   Max.   :46.30   Max.   :50.78  \n                                                                  \n    kerry04         libpct_m        mccain08        modpct_m    \n Min.   :26.00   Min.   :12.70   Min.   :26.58   Min.   :38.44  \n 1st Qu.:39.37   1st Qu.:17.57   1st Qu.:40.52   1st Qu.:44.66  \n Median :46.57   Median :19.06   Median :47.45   Median :46.09  \n Mean   :45.67   Mean   :19.75   Mean   :47.81   Mean   :46.28  \n 3rd Qu.:52.45   3rd Qu.:22.13   3rd Qu.:56.03   3rd Qu.:47.64  \n Max.   :61.94   Max.   :30.07   Max.   :65.65   Max.   :54.46  \n                                                                \n    nader00           obama08          obama_win08     over64     \n Min.   : 0.5173   Min.   :32.54   McCain win:22   Min.   : 6.40  \n 1st Qu.: 1.8182   1st Qu.:42.63   Obama win :28   1st Qu.:12.03  \n Median : 2.6546   Median :51.15                   Median :12.75  \n Mean   : 3.2473   Mean   :50.47                   Mean   :12.55  \n 3rd Qu.: 4.2784   3rd Qu.:57.28                   3rd Qu.:13.30  \n Max.   :10.0669   Max.   :71.85                   Max.   :16.80  \n NA's   :3                                                        \n     permit        pop_18_24       pop_18_24_10       prcapinc    \n Min.   :15.50   Min.   : 8.534   Min.   : 8.724   Min.   :24650  \n 1st Qu.:29.95   1st Qu.: 9.613   1st Qu.: 9.571   1st Qu.:28643  \n Median :35.90   Median : 9.953   Median : 9.905   Median :31330  \n Mean   :36.69   Mean   :10.121   Mean   : 9.924   Mean   :31951  \n 3rd Qu.:45.40   3rd Qu.:10.635   3rd Qu.:10.151   3rd Qu.:34428  \n Max.   :58.50   Max.   :12.672   Max.   :12.036   Max.   :45398  \n NA's   :10                                                       \n       region    relig_import    religiosity        reppct_m      rtw    \n Northeast: 9   Min.   :21.14   Min.   :-180.0   Min.   :14.24   No :34  \n Midwest  :12   1st Qu.:29.56   1st Qu.:-139.8   1st Qu.:27.90   Yes:16  \n South    :16   Median :33.99   Median :-100.5   Median :31.13           \n West     :13   Mean   :37.32   Mean   : -97.6   Mean   :31.25           \n                3rd Qu.:43.34   3rd Qu.: -53.5   3rd Qu.:34.61           \n                Max.   :64.94   Max.   :  -4.0   Max.   :44.97           \n                NA's   :12                                               \n   secularism       secularism3 seniority_sen2      south   \n Min.   :  4.0   Religious:17   No :40         Nonsouth:34  \n 1st Qu.: 53.5   Middle   :17   Yes:10         South   :16  \n Median :100.5   Secular  :15                               \n Mean   : 97.6   NA's     : 1                               \n 3rd Qu.:139.8                                              \n Max.   :180.0                                              \n                                                            \n                                        state       to_0004       \n Alabama                                   : 1   Min.   :-12.390  \n Alaska                                    : 1   1st Qu.:  2.478  \n Arizona                                   : 1   Median :  4.180  \n Arkansas                                  : 1   Mean   :  4.063  \n California                                : 1   3rd Qu.:  6.735  \n Colorado                                  : 1   Max.   : 10.960  \n (Other)                                   :44                    \n    to_0408          trnout00        trnout04        unemploy    \n Min.   :-5.600   Min.   :43.49   Min.   :42.32   Min.   :3.400  \n 1st Qu.:-0.175   1st Qu.:49.63   1st Qu.:54.52   1st Qu.:4.625  \n Median : 1.150   Median :55.30   Median :58.64   Median :5.250  \n Mean   : 1.280   Mean   :55.31   Mean   :59.37   Mean   :5.188  \n 3rd Qu.: 2.875   3rd Qu.:60.36   3rd Qu.:64.17   3rd Qu.:5.800  \n Max.   : 8.000   Max.   :69.26   Max.   :76.18   Max.   :7.600  \n                                                                 \n    union04          union07         union10           urban      \n Min.   : 2.700   Min.   : 3.00   Min.   : 3.100   Min.   :38.20  \n 1st Qu.: 6.475   1st Qu.: 6.55   1st Qu.: 6.225   1st Qu.:60.65  \n Median :10.200   Median :10.45   Median :10.850   Median :71.50  \n Mean   :11.264   Mean   :11.18   Mean   :11.358   Mean   :71.69  \n 3rd Qu.:15.200   3rd Qu.:14.45   3rd Qu.:15.575   3rd Qu.:85.70  \n Max.   :25.300   Max.   :25.20   Max.   :25.200   Max.   :94.40  \n                                                                  \n vep00_turnout   vep04_turnout   vep08_turnout   vep12_turnout  \n Min.   :44.20   Min.   :48.20   Min.   :50.50   Min.   :44.20  \n 1st Qu.:50.10   1st Qu.:57.85   1st Qu.:59.62   1st Qu.:55.70  \n Median :56.05   Median :62.75   Median :64.00   Median :59.65  \n Mean   :55.83   Mean   :62.18   Mean   :63.46   Mean   :59.94  \n 3rd Qu.:59.90   3rd Qu.:66.15   3rd Qu.:67.42   3rd Qu.:63.95  \n Max.   :69.50   Max.   :78.40   Max.   :78.20   Max.   :75.70  \n                                                                \n  womleg_2007     womleg_2010     womleg_2011     womleg_2015   \n Min.   : 8.80   Min.   :10.00   Min.   : 9.40   Min.   :12.50  \n 1st Qu.:17.48   1st Qu.:19.62   1st Qu.:19.48   1st Qu.:19.30  \n Median :22.70   Median :23.55   Median :23.50   Median :24.40  \n Mean   :23.25   Mean   :24.12   Mean   :23.81   Mean   :24.16  \n 3rd Qu.:29.93   3rd Qu.:28.82   3rd Qu.:28.18   3rd Qu.:28.68  \n Max.   :37.80   Max.   :37.50   Max.   :41.00   Max.   :42.00  \n                                                                \n\n\nEsta función hará un resumen de cada columna en el marco de datos, incluyendo el número de valores no faltantes, la media, la desviación estándar, los valores mínimos y máximos, junto con los cuartiles de los datos.\nTambién es posible usar la función summary() en columnas específicas de un marco de datos llamando a la función en la columna de interés:\n\n\nCode\n# Resume la variable con el % de personas\n# con universidad.\nsummary(d$college)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  17.00   23.12   25.10   25.85   29.00   35.90 \n\n\nVale la pena señalar que la función summary() también funciona con otros tipos de objetos de R, como modelos, listas y matrices y la salida puede variar según el tipo de objeto que se le pase.\nLa función str() en R se utiliza para mostrar la estructura interna de un objeto de R. Es una función genérica que se puede utilizar para inspeccionar la estructura de varios tipos de objetos de R, incluyendo vectores, matrices, listas, marcos de datos y modelos.\nCuando se aplica a un data.frame, str() devuelve un resumen de la estructura del marco de datos, incluyendo el número de filas y columnas, el nombre de cada columna y las primeras filas de datos. Por ejemplo:\n\n\nCode\n# Tipos de datos\nstr(d)\n\n\n'data.frame':   50 obs. of  135 variables:\n $ abort_rank3      : Factor w/ 3 levels \"More restr\",\"Mid\",..: 3 2 1 1 3 2 3 2 2 1 ...\n $ abortion_rank12  : num  35 20 4 5 49 25 45 30 26 9 ...\n $ adv_or_more      : num  9 7.7 6.1 9.3 10.7 12.7 15.5 11.4 9 9.9 ...\n $ ba_or_more       : num  26.6 22 18.9 25.6 29.9 35.9 35.6 28.7 25.3 27.5 ...\n $ cig_tax12        : num  2 0.425 1.15 2 0.87 ...\n $ cig_tax12_3      : Factor w/ 3 levels \"LoTax\",\"MidTax\",..: 3 1 2 3 2 2 3 2 2 1 ...\n $ conserv_advantage: num  21.3 36 26.7 19.5 6.3 15.7 1.8 6.3 17.2 25.8 ...\n $ conserv_public   : num  43.1 44.7 45.2 36 30.8 ...\n $ dem_advantage    : num  -12.2 -14.6 -1.4 -3.5 14.9 -2.4 17 15.9 4.5 -4.7 ...\n $ govt_worker      : num  28 17.5 17.6 15.5 14.9 15.7 15.9 16.1 14.5 17.8 ...\n $ gun_rank3        : Factor w/ 3 levels \"More restr\",\"Mid\",..: 3 2 3 3 1 1 1 2 3 2 ...\n $ gun_rank11       : num  50 17 39 50 1 15 5 18 41 22 ...\n $ gun_scale11      : num  0 14 4 0 81 15 58 13 3 8 ...\n $ hr_cons_rank11   : num  200 152 132 156 274 ...\n $ hr_conserv11     : num  55.7 65.6 69.3 62.6 54.8 ...\n $ hr_lib_rank11    : num  228 278 295 270 152 ...\n $ hr_liberal11     : num  44.3 34.4 30.7 37.4 81 ...\n $ hs_or_more       : num  91.4 82.1 82.4 84.2 80.6 89.3 88.6 87.4 85.3 83.9 ...\n $ obama2012        : num  40.8 38.4 36.9 44.5 60.2 ...\n $ obama_win12      : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 2 2 2 2 2 1 ...\n $ pop2000          : num  626932 4447100 2673400 5130632 33871648 ...\n $ pop2010          : num  710231 4779736 2915918 6392017 37253956 ...\n $ pop2010_hun_thou : num  7.1 47.8 29.2 63.9 372.5 ...\n $ popchng0010      : num  83299 332636 242518 1261385 3382308 ...\n $ popchngpct       : num  13.3 7.5 9.1 24.6 10 16.9 4.9 14.6 17.6 18.3 ...\n $ pot_policy       : Factor w/ 5 levels \"Not legal\",\"Pending legis\",..: 4 3 1 4 5 5 5 4 2 1 ...\n $ prochoice        : num  58 36 40 56 65 61 68 63 58 52 ...\n $ prolife          : num  37 54 55 39 28 34 26 31 36 43 ...\n $ relig_cath       : num  14.6 6.6 5.9 27.3 31.9 21.9 41.5 25.6 25.4 10.6 ...\n $ relig_prot       : num  50 79.3 78.6 43.3 37.8 46.1 32.1 52 51.2 70.3 ...\n $ relig_high       : num  31.3 55.7 52.3 36.6 34.5 33.5 30.5 35.2 37.6 47.9 ...\n $ relig_low        : num  39.5 14.3 18.7 33.9 36.6 39.3 40.4 33.7 30.7 20.3 ...\n $ religiosity3     : Factor w/ 3 levels \"Low\",\"Mid\",\"High\": 1 3 3 2 1 1 1 2 2 3 ...\n $ romney2012       : num  54.8 60.5 60.6 53.5 37.1 ...\n $ smokers12        : num  24 25 26 21 15 20 18 21 21 21 ...\n $ stateid          : Factor w/ 50 levels \"AK    \",\"AL    \",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ to_0812          : num  -9.4 -2.9 -2.9 -3.1 -6.5 ...\n $ uninsured_pct    : num  21.8 18.8 21.9 20.5 23.2 17.1 9.9 9.6 22.8 22.5 ...\n $ abort_rate05     : num  13.6 11.9 8.3 16 27.1 16.1 23.6 28.8 26.8 16.3 ...\n $ abort_rate08     : num  12 12 8.7 15.2 27.6 15.7 24.6 40 27.2 19.2 ...\n $ abortlaw3        : Factor w/ 3 levels \"0-5 restr\",\"6-8 restr\",..: 1 2 3 2 1 1 1 1 2 3 ...\n $ abortlaw10       : num  5 8 9 6 4 4 4 5 7 9 ...\n $ alcohol          : num  3.02 2.01 1.83 2.31 2.33 2.68 2.34 3.13 2.61 1.97 ...\n $ attend_pct       : num  22 52 50 29 33 29 30 35 35 45 ...\n $ battle04         : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 2 1 1 2 1 ...\n $ blkleg           : num  2 25 11 1 5 4 7 5 14 21 ...\n $ blkpct04         : num  3.6 26.4 15.8 3.5 6.8 4.1 10.1 20.4 15.7 29.6 ...\n $ blkpct08         : num  4.3 26.4 15.8 4.2 6.7 4.3 10.3 20.9 15.9 30 ...\n $ blkpct10         : num  4.7 26.8 16.1 5 7.2 5 11.3 22.9 17 31.5 ...\n $ bush00           : num  58.6 56.5 51.3 51 41.7 ...\n $ bush04           : num  61.1 62.5 54.3 54.8 44.4 ...\n $ carfatal         : num  17.4 24.9 25.6 20.3 12.1 17.3 10.1 15 19.1 17.8 ...\n $ carfatal07       : num  15.2 25.9 23.7 17.6 11.7 12.3 8.7 13.6 18.1 18.5 ...\n $ cig_tax          : num  2 0.425 0.59 2 0.87 0.84 2 1.15 0.339 0.37 ...\n $ cig_tax_3        : Factor w/ 3 levels \"$.07-$.64\",\"$.695-$1.36\",..: 3 1 1 3 2 2 3 2 1 1 ...\n $ cigarettes       : num  6.22 9.41 8.51 2.4 3.69 ...\n $ college          : num  26.7 21.1 19.1 24.3 29.1 34.7 34.6 27.6 25.1 25.7 ...\n $ conpct_m         : num  36.3 40.7 38.9 33.3 28.5 ...\n $ cons_hr06        : num  72 77.7 56.2 69 37.3 ...\n $ cons_hr09        : num  75 72 28.5 49.5 35.1 ...\n $ cook_index       : num  -13.4 -13.2 -8.8 -6.1 7.4 -0.2 7.1 7 -1.8 -6.8 ...\n $ cook_index3      : Factor w/ 3 levels \"More Rep\",\"Even\",..: 1 1 1 2 3 2 3 3 2 2 ...\n $ defexpen         : num  3556 1757 530 1771 1106 ...\n $ demhr11          : num  0 14.3 25 28.6 64.2 ...\n $ dem_hr09         : num  0 42.9 75 62.5 64.2 ...\n $ demnat06         : num  0 22.2 83.3 20 63.6 ...\n $ dempct_m         : num  26.1 38.9 43.1 31.9 41.3 ...\n $ demstate06       : num  43.3 60.7 75.6 44.4 60.8 ...\n $ demstate09       : num  46.7 57.9 72.6 41.1 64.2 ...\n $ demstate13       : num  36.7 35.7 46.7 41.1 66.7 ...\n $ density          : num  1.2 94.4 56 56.3 239.1 ...\n $ division         : Factor w/ 9 levels \"New England\",..: 9 6 7 8 9 8 1 5 5 5 ...\n $ earmarks_pcap    : num  425.5 38.9 26.7 20.9 12.5 ...\n $ evm              : num  3 9 6 10 0 0 0 0 0 15 ...\n $ evo              : num  0 0 0 0 55 9 7 3 27 0 ...\n $ evo2012          : num  0 0 0 0 55 9 7 3 29 0 ...\n $ evr2012          : num  3 9 6 11 0 0 0 0 0 16 ...\n $ gay_policy       : Factor w/ 4 levels \"Most liberal\",..: 3 4 4 3 2 2 1 3 4 4 ...\n $ gay_policy2      : Factor w/ 2 levels \"Liberal\",\"Conservative\": 2 2 2 2 1 1 1 2 2 2 ...\n $ gay_policy_con   : Factor w/ 2 levels \"No\",\"Yes\": 1 2 2 1 1 1 1 1 2 2 ...\n $ gay_support      : num  56 44 44 58 64 61 65 60 57 51 ...\n $ gay_support3     : Factor w/ 3 levels \"Low\",\"Med\",\"High\": 2 1 1 2 3 3 3 2 2 1 ...\n $ gb_win00         : Factor w/ 2 levels \"Gore win\",\"Bush win\": 2 2 2 2 1 2 1 1 2 2 ...\n $ gb_win04         : Factor w/ 2 levels \"Kerry win\",\"Bush win\": 2 2 2 2 1 2 1 1 2 2 ...\n $ gore00           : num  27.7 41.6 45.9 44.7 53.4 ...\n $ gun_check        : num  12016 9025 8443 5314 3040 ...\n $ gun_dealer       : num  139.3 47.4 67.4 45.4 21.6 ...\n $ gun_murder10     : num  2.7 2.8 3.2 3.6 3.4 1.3 2.7 4.2 3.8 3.9 ...\n $ gun_rank_rev     : num  6 30 13 13 48 32 46 38 13 16 ...\n $ gunlaw_rank      : num  43 19 36 36 1 17 3 11 36 33 ...\n $ gunlaw_rank3_rev : Factor w/ 3 levels \"Fewer restr\",..: 1 2 1 1 3 3 3 3 1 2 ...\n $ gunlaw_scale     : num  4 15 6 6 79 16 54 22 6 7 ...\n $ hispanic04       : num  4.9 2.2 4.4 28 34.7 19.1 10.6 5.8 19 6.8 ...\n $ hispanic08       : num  6.1 2.9 5.6 30.1 36.6 20.2 12 6.8 21 8 ...\n $ hispanic10       : num  5.5 3.9 6.4 29.6 37.6 20.7 13.4 8.2 22.5 8.8 ...\n $ indpct_m         : num  43.6 30 35.9 29.7 25.8 ...\n $ kerry04          : num  35.5 36.8 44.5 44.4 54.3 ...\n $ libpct_m         : num  17.9 16.8 16.8 19.2 24.2 ...\n $ mccain08         : num  59.4 60.3 58.7 53.4 36.9 ...\n  [list output truncated]\n - attr(*, \"variable.labels\")= Named chr [1:135] \"Abortion restrictions\" \"2012 Abortion rank AUL\" \"Percent advanced degree or higher\" \"Percent college or higher\" ...\n  ..- attr(*, \"names\")= chr [1:135] \"Abort_rank3\" \"Abortion_rank12\" \"Adv_or_more\" \"BA_or_more\" ...\n - attr(*, \"codepage\")= int 65001\n\n\nEste procedimiento mostrará un resumen de la estructura del marco de datos, incluyendo el número de filas y columnas, el nombre de cada columna, la clase de cada columna y los primeros valores del marco de datos.\nCuando se aplica a un vector o una lista, str() devuelve la longitud del objeto, la clase (por ejemplo, “numérico”, “carácter”) y los primeros valores.\nLa función str() es particularmente útil cuando se trabaja con conjuntos de datos grandes o complejos, ya que le permite inspeccionar rápidamente la estructura de los datos e identificar posibles problemas, como datos faltantes o tipos de datos inesperados.\nTambién es importante tener en cuenta que la función str() muestra menos información que la función summary(), y es más útil cuando el objeto es grande, complicado o cuando se desea mostrar la estructura de los datos sin mostrar los datos en sí.\nTambién podemos aplicar tales funciones a una selección de las variables para evitar devolver información sobre demasiadas variables:\n\n\nCode\n# Selecciona las variables pot_policy y prochoice\nsummary(d[, c(\"pot_policy\",\"prochoice\")])\n\n\n               pot_policy   prochoice    \n Not legal          :18   Min.   :33.00  \n Pending legis      : 8   1st Qu.:47.00  \n Decrim             : 6   Median :55.50  \n Medicinal          :10   Mean   :53.66  \n Medicinal / Decrim.: 8   3rd Qu.:62.75  \n                          Max.   :70.00  \n\n\nEjercicio\nExplore las variables dem_score14, dem_level4, hdi, gini08,religoin, y muslim en el data.frame world (w) usando la función summary():\n\n\nCode\n# Resume la base de datos w \nsummary(w[,c(\"dem_score14\", \"dem_level4\", \"hdi\", \"gini08\",\"religoin\", \"muslim\")])\n\n\n  dem_score14            dem_level4      hdi             gini08     \n Min.   :1.080   Full Democ   :24   Min.   :0.1400   Min.   :24.70  \n 1st Qu.:3.610   Part Democ   :52   1st Qu.:0.4675   1st Qu.:33.48  \n Median :5.790   Hybrid       :39   Median :0.6690   Median :39.10  \n Mean   :5.548   Authoritarian:52   Mean   :0.6325   Mean   :40.65  \n 3rd Qu.:7.395                      3rd Qu.:0.7810   3rd Qu.:46.98  \n Max.   :9.930                      Max.   :0.9380   Max.   :74.30  \n                                    NA's   :9        NA's   :45     \n               religoin  muslim   \n Catholic          :52   No :121  \n Orthodox Christian:16   Yes: 46  \n Other Christian   :27            \n Muslim            :46            \n Buddhist          :11            \n Other             :13            \n NA's              : 2            \n\n\n\n\nAgregar datos\nLa agregación de datos se refiere al proceso de recopilar y resumir datos de múltiples fuentes en un conjunto de datos único y consolidado. Esto se puede hacer utilizando varias técnicas, como agrupar datos por ciertas variables, aplicar operaciones matemáticas como suma, promedio o conteo a columnas específicas o combinar datos de múltiples tablas o conjuntos de datos.\nLa agregación de datos se utiliza a menudo para reducir la complejidad de conjuntos de datos grandes y facilitar el análisis y la visualización de datos. También se puede utilizar para identificar patrones, tendencias y valores atípicos en los datos.\nEn el R, la agregación de datos se puede realizar utilizando una variedad de funciones y paquetes, como aggregate(), group_by() y summarize() del paquete dplyr, tapply(), y by(). Estas funciones le permiten agrupar datos por ciertas variables y realizar cálculos en columnas específicas.\nPor ejemplo, si tenemos un marco de datos con múltiples columnas y queremos calcular la media de algunas columnas y la suma de otras, podemos usar el siguiente comando:\n\n\nCode\n# Selecciona algunas variables de la base de datos d \nx &lt;- d[,c(\"region\",\"vep00_turnout\",\"vep04_turnout\",\"vep08_turnout\",\"vep12_turnout\")]\n\n# Calcula la media para dichas variables\naggregate(x, \n          by=list(\n                  region=x$region), \n          mean, \n          na.rm=T)\n\n\n     region region vep00_turnout vep04_turnout vep08_turnout vep12_turnout\n1 Northeast     NA      59.70000      64.78889      65.96667      62.03333\n2   Midwest     NA      59.25833      66.30000      66.70000      63.40000\n3     South     NA      51.29375      57.98750      60.65000      57.53750\n4      West     NA      55.55385      61.71538      62.17692      58.23846\n\n\nEjercicio\nAhora, repita la agregación usando la variable religoin para grupos y hdi, gini10, dem_score14,lifeex_total, y frac_eth.\n\n\nCode\n# Selecciona las variables de w \nx &lt;- w[,c(\"religoin\",\"hdi\", \"gini10\", \"dem_score14\", \"lifeex_total\", \"frac_eth\")]\n\n# Calcula las medias para tales variables\naggregate(x, \n          by=list(\n                  region=x$religoin), \n          mean, \n          na.rm=T)\n\n\n              region religoin       hdi   gini10 dem_score14 lifeex_total\n1           Catholic       NA 0.6840980 42.12000    6.568269     72.25981\n2 Orthodox Christian       NA 0.7193750 35.02500    5.843750     71.73533\n3    Other Christian       NA 0.5891481 44.08148    6.363704     64.13963\n4             Muslim       NA 0.5515366 38.25556    3.806739     67.07556\n5           Buddhist       NA 0.6334000 38.91000    4.828182     71.17545\n6              Other       NA 0.6487500 36.62308    6.326154     70.82769\n   frac_eth\n1 0.3860660\n2 0.3502231\n3 0.4844296\n4 0.5359690\n5 0.3915778\n6 0.4669500\n\n\nEl paquete dplyr \nComo se mencionó anteriormente, el paquete dplyr extiende la funcionalidad básica de R aggregate() y nos permite usar varias funciones simultáneamente para agregar los datos en grupos.\n\n\nCode\n# carga el paquete dplyr \nlibrary(dplyr)\n\n# Calcula la media POR REGION para vep00_turnout, la\n# desviación estándar para vep04_turnout, el valor mínimo\n# para vep08_turnout, y el máximo para vep12_turnout\nd |&gt;\n  group_by(region) |&gt;\n  summarize(mean=mean(vep00_turnout),\n            sd=sd(vep04_turnout),\n            min=min(vep08_turnout),\n            max=max(vep12_turnout))\n\n\n# A tibble: 4 × 5\n  region     mean    sd   min   max\n  &lt;fct&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Northeast  59.7  5.16  58    70.1\n2 Midwest    59.3  6.24  59.4  75.7\n3 South      51.3  3.75  50.6  66.4\n4 West       55.6  6.73  50.5  70.3\n\n\nAhora, repita el procedimiento anterior para el conjunto de datos w usando la variable religoin para grupos y la media para hdi, la desviación estándar para gini10, la mediana para dem_score14, el mínimo para lifeex_total, y el máximo para frac_eth. No olvide excluir los casos faltantes:\n\n\nCode\n# carga dplyr\nlibrary(dplyr)\n\n# Calcula los agregados por religion\nw |&gt;\n  group_by(religoin) |&gt;\n  summarise(m_hdi=mean(hdi, na.rm = T),\n            sd_gini=sd(gini10, na.rm=T),\n            med_dem=median(dem_score14, na.rm=T),\n            min_life=min(lifeex_total, na.rm=T),\n            max_frac=max(frac_eth, na.rm=T)\n            )\n\n\n# A tibble: 7 × 6\n  religoin           m_hdi sd_gini med_dem min_life max_frac\n  &lt;fct&gt;              &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 Catholic           0.684   10.0     6.96     38.8    0.930\n2 Orthodox Christian 0.719    7.05    6.28     51.6    0.617\n3 Other Christian    0.589   12.1     6.24     48.7    0.908\n4 Muslim             0.552    6.26    3.76     45.0    0.862\n5 Buddhist           0.633    4.28    4.87     62.4    0.634\n6 Other              0.649    6.91    7.63     48.7    0.863\n7 &lt;NA&gt;               0.902   NA       4.60     68.9    0.490"
  },
  {
    "objectID": "S_3_Analisis.html#medidas-de-asociación",
    "href": "S_3_Analisis.html#medidas-de-asociación",
    "title": "Análisis",
    "section": "Medidas de Asociación",
    "text": "Medidas de Asociación\nAntes de empezar\nEn los ejercicios diseñados para este tutorial usaremos dos conjuntos de datos. El primero es el data.frame d basado en el data.frame states del paquete polscidata (como en la sección anterior). El segundo es el conjunto de datos tt basado en el data.frame Titanic que contiene datos sobre pasajeros y tripulantes del Titanic (Clase, Edad, Sexo, y si sobrevivieron o no).\n\n¿Cómo podemos medir la relación entre variables?\n¿Cuál es la relación entre el ejercicio físico y el peso corporal? ¿Y qué hay del tiempo de estudio y las calificaciones? ¿Hay alguna relación entre la educación y los ingresos? ¿La contaminación del aire y las enfermedades respiratorias? Estas preguntas se refieren a la asociación entre diferentes fenómenos. Usualmente usamos este tipo de preguntas cuando tratamos de establecer cómo un evento o atributo impacta en otro.\nEn estadística, la forma de medir este concepto amplio es la covarianza. Se basa en un principio sencillo: ¿cuánto y en qué dirección cambia la variable y cuando la otra variable x cambia? Así, si cada año de escolaridad aumenta 100 Euros en ingresos futuros, podemos decir que hay una correlación positiva entre educación e ingresos. Esto se debe a que ambos aumentan. Lo contrario ocurre con el gasto público en saneamiento y la mortalidad infantil. Cuanto más gastan los gobiernos en saneamiento (agua limpia y alcantarillado), menor es el número de muertes en niños pequeños. En este caso, hay una asociación negativa.\nAsista al video corto sobre covarianza:\n\nEl coeficiente de correlación de Pearson es una medida de la fuerza y dirección de la relación lineal entre dos variables. En otras palabras, mide cómo se relacionan dos variables cuantitativas. El valor de la correlación de Pearson varía entre -1 y 1. Un valor de 1 indica una correlación positiva perfecta, mientras que un valor de -1 indica una correlación negativa perfecta. Un valor de 0 indica que no hay relación entre las dos variables.\nMira el video corto sobre correlación de Pearson:"
  },
  {
    "objectID": "S_3_Analisis.html#mediciones-de-asociación-en-r",
    "href": "S_3_Analisis.html#mediciones-de-asociación-en-r",
    "title": "Análisis",
    "section": "Mediciones de Asociación en R",
    "text": "Mediciones de Asociación en R\nEn esta sección, exploraremos cómo se pueden calcular en R las dos principales medidas de asociación. La primera es la covarianza y la segunda la correlación. Finalmente, aprenderemos a crear un correlograma, un gráfico que facilita la interpretación de un gran número de variables.\n\n\nCovarianza\nLa covarianza es una medida de la relación entre dos variables. Es similar a la varianza, pero donde la varianza nos dice cómo una sola variable varía, la covarianza nos dice cómo dos variables varían juntas. La covarianza es positiva si las dos variables tienden a aumentar juntas y negativa si una variable disminuye cuando la otra aumenta. La covarianza es cero si no hay relación entre las dos variables.\nEn R, la función cov() es la responsable de calcular la covarianza de dos variables. El fragmento de código a continuación calcula la matriz de covarianza para las variables unemploy y urban, ambas pertenecientes al data.frame d.\n\n\nCode\ncov(d$unemploy, d$urban)\n\n\n[1] 1.631967\n\n\nEn el siguiente ejemplo, una de las variables relig_import (Porcentaje de personas que dicen que la religión juega un papel importante en sus vidas) tiene valores faltantes. Después de ejecutar el código a continuación, puede ver que la primera covarianza devuelve NA. Esto ocurre precisamente porque los NAs no se tratan. En las funciones mean(), median(), var(), y sd(), los NAs se manejan utilizando el parámetro “na.rm=T”. En el caso de la covarianza y la correlación, se debe utilizar un nuevo parámetro use=“pairwise.complete.obs”. Esta opción le dice a R que solo debe calcular la covarianza (o la correlación) para aquellos pares de valores donde ambos son diferentes de NA.\n\n\nCode\n# Covarianza sin lidiar con casos perdidos NAs \ncov(d$unemploy, d$relig_import)\n\n\n[1] NA\n\n\nCode\n# Covarianza lidiando con NAs\ncov(d$unemploy, d$relig_import, use=\"pairwise.complete.obs\")\n\n\n[1] 1.538539\n\n\nPráctica\nAhora es tu turno. Calcula la covarianza entre las variables obama08 (% de voto en Obama en 2008) y obama2012 (% de voto en Obama en 2012) en el data.frame d.\n\n\nCode\ncov(d$obama08, d$obama2012)\n\n\n[1] 95.55904\n\n\n\n\n\nCorrelación\nDistintamente de la covarianza, el coeficiente de correlación siempre varía de -1 a 1 independientemente de la escala de las variables empleadas en los cálculos. Por lo tanto, somos capaces de evaluar no solo la dirección, sino también la fuerza de la relación entre estos fenómenos, como ya has visto en los videos.\nAhora, calculemos la correlación entre las variables abort_rate08 (tasa de aborto en 2008) y obama08 (% de voto en Obama en 2008) en el data.frame d.\n\n\nCode\ncor(d$abort_rate08, d$obama08)\n\n\n[1] 0.6415203\n\n\nEl resultado es un coeficiente de correlación (r) igual a 0.642. Parece que hay una asociación moderada y positiva entre el aborto y el voto en Obama en 2008. Más claramente, cuanto mayor es la tasa de aborto, mayor es el voto potencial en Obama. La relación no es perfecta (si este fuera el caso, r=1), pero es lo suficientemente fuerte como para llamar nuestra atención sobre la relación entre el aborto y el voto.\nRepita el cálculo de correlación anterior, pero ahora use mccain08 (% de voto en John McCain en 2008) en lugar de obama08. ¿Qué obtienes como resultado?\n\n\nCode\ncor(d$abort_rate08, d$mccain08)\n\n\n[1] -0.6276876\n\n\nCorrelación de múltiples variables\nEn muchas ocasiones queremos realizar muchas correlaciones al mismo tiempo para acelerar el análisis. En esos casos, solo necesitamos proporcionar un data.frame o matriz con SOLO variables numéricas y la función cor() devuelve una tabla con todas las correlaciones para estas variables.\n\n\nCode\n# Selecciona algunas variables \n# del data.frame d\nds &lt;- d[,c(\"urban\",\"unemploy\",\n           \"abort_rate08\",\"prcapinc\",\n           \"relig_high\",\"obama08\",\"mccain08\")]\n\n# Calcula la correlación para esas\n# variables\nco &lt;- cor(ds)\n\n# Muestra los resultados\nround(co,3)\n\n\n              urban unemploy abort_rate08 prcapinc relig_high obama08 mccain08\nurban         1.000    0.109        0.663    0.526     -0.227   0.404   -0.404\nunemploy      0.109    1.000       -0.040   -0.228      0.208  -0.137    0.134\nabort_rate08  0.663   -0.040        1.000    0.589     -0.367   0.642   -0.628\nprcapinc      0.526   -0.228        0.589    1.000     -0.643   0.592   -0.590\nrelig_high   -0.227    0.208       -0.367   -0.643      1.000  -0.682    0.704\nobama08       0.404   -0.137        0.642    0.592     -0.682   1.000   -0.997\nmccain08     -0.404    0.134       -0.628   -0.590      0.704  -0.997    1.000\n\n\nComo puedes observar, el resultado es una matriz con la correlación entre todas las variables. El coeficiente r para urban vs. urban es 1.000 porque es la misma variable correlacionada consigo misma. Lo mismo ocurre con todas las demás variables cuando se comparan consigo mismas. El díada urban vs. unemploy, por otro lado, tiene un r=0.109, una asociación pequeña y positiva. Ahora, urban vs. abort_rate08 presenta un r=0.663, positivo y moderado. El voto en McCain (mccain08) está negativamente y fuertemente correlacionado con el voto en Obama en 2008 (obama08). Dado que la política de los Estados Unidos es bipartidista, es normal esperar que cuando el voto en un candidato aumenta, el voto en el otro disminuya.\nPor lo tanto, tales resultados nos ayudan a identificar aquellas variables con relaciones fuertes (tanto positivas como negativas) y a determinar aquellas que, inicialmente, no parecen estar relacionadas."
  },
  {
    "objectID": "S_3_Analisis.html#trabajando-con-datos-categóricos-frecuencias-cruzadas",
    "href": "S_3_Analisis.html#trabajando-con-datos-categóricos-frecuencias-cruzadas",
    "title": "Análisis",
    "section": "Trabajando con datos categóricos: Frecuencias cruzadas",
    "text": "Trabajando con datos categóricos: Frecuencias cruzadas\n\nFrecuencias de datos categóricos\nVisualice el video sobre cómo interpretar tablas de contingencia o frecuencias cruzadas:\n\n\n\nTablas de contingencia en R\nTablas de frecuencia son la forma más adecuada de resumir datos categóricos. Una vez que tenemos las frecuencias, podemos usarlas para calcular una serie de otras estadísticas e indicadores. La misma función table() utilizada en sesiones anteriores se puede usar para tablas de contingencia para más de una variable categórica.\nLa función prop.table() devuelve la proporción de cada categoría en una celda dada de la tabla:\n\n\nCode\ntb &lt;- table(d$gay_policy, d$region)\n\nprop.table(tb)*100\n\n\n                   \n                    Northeast Midwest South West\n  Most liberal             10       2     0    0\n  Liberal                   6       6     2   14\n  Conservative              2       6     6    6\n  Most conservative         0      10    24    6\n\n\n\nNo obstante, el resultado no es exactamente lo que necesitamos. Los porcentajes son relativos al total y no para la columna o la fila. La apariencia también podría mejorarse significativamente.\nLa función crosstable() del paquete crosstable produce una presentación mucho más agradable de los resultados:\n\n\nCode\nlibrary(crosstable)\n\ncrosstable(data = d,           # data = nombre del Data frame\n           cols = gay_policy,  # cols = Variable(s)\n           by= region) %&gt;%     # by = Variable que agrega los resultados\n  as_flextable()\n\n\n\nlabelvariableregionNortheastMidwestSouthWestgay_policyMost liberal5 (83.33%)1 (16.67%)0 (0%)0 (0%)Liberal3 (21.43%)3 (21.43%)1 (7.14%)7 (50.00%)Conservative1 (10.00%)3 (30.00%)3 (30.00%)3 (30.00%)Most conservative0 (0%)5 (25.00%)12 (60.00%)3 (15.00%)\n\n\n\nHazlo tú mismo. Usando el código en el fragmento anterior, crea una tabla cruzada para las variables pot_policy (Leyes de Marihuana) y obama_win12 (Obama ganó el Estado en 2012).\n\n\nCode\nlibrary(crosstable)\n\ncrosstable(data = d, \n           cols = pot_policy, \n           by= obama_win12) %&gt;%\n  as_flextable()\n\n\n\nlabelvariableobama_win12NoYespot_policyNot legal15 (83.33%)3 (16.67%)Pending legis3 (37.50%)5 (62.50%)Decrim3 (50.00%)3 (50.00%)Medicinal3 (30.00%)7 (70.00%)Medicinal / Decrim.0 (0%)8 (100.00%)\n\n\n\nAhora, empleando los datos del Titanic (tt), crea una tabla de contingencia para las variables Sex (Sexo del Pasajero) y Survived (Sobrevivió).\n\n\nCode\nlibrary(crosstable)\n\ncrosstable(data = tt, \n           cols = Sex, \n           by= Survived) %&gt;%\n  as_flextable()\n\n\n\nlabelvariableSurvivedNoYesSexMale1364 (78.80%)367 (21.20%)Female126 (26.81%)344 (73.19%)\n\n\n\nAhora, repite la operación usando el conjunto de datos del Titanic (tt) para crear una tabla de contingencia para las variables Class (Clase del Pasajero) y Survived.\n\n\nCode\nlibrary(crosstable)\n\ncrosstable(data = tt, \n           cols = Class, \n           by = Survived) %&gt;%\n  as_flextable()\n\n\n\nlabelvariableSurvivedNoYesClass1st122 (37.54%)203 (62.46%)2nd167 (58.60%)118 (41.40%)3rd528 (74.79%)178 (25.21%)Crew673 (76.05%)212 (23.95%)\n\n\n\nPongamos un poco de pimienta en el ejercicio. Filtra los datos tt para incluir solo miembros de la tripulación en un nuevo data.frame llamado cw. Luego, repite la operación usando el conjunto de datos de la tripulación del Titanic (cw) para crear una tabla de contingencia para las variables Sex (Sexo del miembro de la tripulación) y Survived.\n\n\nCode\n# Selecciona solamente los tripulantes\n# en el data.frame cw\ncw &lt;- tt[tt$Class==\"Crew\",]\n\nlibrary(crosstable)\n\ncrosstable(data = cw, \n           cols = Sex, \n           by= Survived) %&gt;%\n  as_flextable()\n\n\n\nlabelvariableSurvivedNoYesSexMale670 (77.73%)192 (22.27%)Female3 (13.04%)20 (86.96%)"
  },
  {
    "objectID": "S_3_Analisis.html#hipótesis-y-significancia-estadística",
    "href": "S_3_Analisis.html#hipótesis-y-significancia-estadística",
    "title": "Análisis",
    "section": "Hipótesis y Significancia Estadística",
    "text": "Hipótesis y Significancia Estadística\nEl test de hipótesis es un método estadístico utilizado en las ciencias sociales para determinar si hay suficiente evidencia para respaldar una afirmación o hipótesis específica sobre una población. Implica formular una hipótesis nula, que representa la suposición predeterminada o de no diferencia, y una hipótesis alternativa, que representa la afirmación o creencia que se está probando. Luego, se recopila una muestra de datos y se analiza utilizando pruebas estadísticas para determinar la probabilidad de obtener los resultados observados bajo la hipótesis nula. Dependiendo del resultado, la hipótesis nula se acepta o rechaza, proporcionando o no soporte para la hipótesis alternativa.\nAlgunas aplicaciones específicas de las pruebas de hipótesis en las ciencias sociales incluyen:\n\nPrueba de la efectividad de una nueva política o intervención: Los investigadores pueden utilizar la prueba de hipótesis para determinar si una nueva política o intervención tiene el efecto deseado en una población. Por ejemplo, un investigador podría probar la hipótesis de que un nuevo programa educativo conducirá a puntajes más altos en las pruebas entre los estudiantes.\nEvaluación de la relación entre variables: Los investigadores pueden utilizar la prueba de hipótesis para investigar la relación entre diferentes variables. Por ejemplo, un investigador podría probar la hipótesis de que hay una relación positiva entre el ingreso y la felicidad.\nInvestigación de diferencias entre grupos: Los investigadores pueden utilizar la prueba de hipótesis para determinar si hay diferencias significativas entre diferentes grupos. Por ejemplo, un investigador podría probar la hipótesis de que hay diferencias en los patrones de votación entre hombres y mujeres.\nEvaluación de la validez de una herramienta de medición: Los investigadores pueden utilizar la prueba de hipótesis para determinar si una herramienta de medición, como una encuesta o cuestionario, es confiable y válida.\nExploración del impacto de factores demográficos: Los investigadores pueden utilizar la prueba de hipótesis para investigar el impacto de factores demográficos, como la edad, el género y la raza, en un resultado específico."
  },
  {
    "objectID": "S_3_Analisis.html#p-values-y-nivel-de-significancia",
    "href": "S_3_Analisis.html#p-values-y-nivel-de-significancia",
    "title": "Análisis",
    "section": "P-values y nivel de significancia",
    "text": "P-values y nivel de significancia\n\nHipótesis nula\nUna hipótesis nula es una afirmación que representa la suposición predeterminada o de no diferencia en un test de hipótesis. Es la hipótesis que se prueba para determinar si hay suficiente evidencia para rechazarla en favor de la hipótesis alternativa. La hipótesis nula se denota como H0 y generalmente se formula como una afirmación de igualdad. Por ejemplo, una hipótesis nula podría afirmar que no hay diferencia en los puntajes de prueba entre dos grupos de estudiantes.\n\n\nHipótesis alternativa\nUna hipótesis alternativa es una afirmación que representa la creencia o afirmación que se está probando en un test de hipótesis. Representa la posibilidad de que haya una diferencia o efecto en la población. La hipótesis alternativa se denota como H1 y generalmente se formula como una afirmación de desigualdad. Por ejemplo, una hipótesis alternativa podría afirmar que hay una diferencia en los puntajes de prueba entre dos grupos de estudiantes.\nEl objetivo de un test de hipótesis es determinar si hay suficiente evidencia para rechazar la hipótesis nula en favor de la hipótesis alternativa. Si la hipótesis nula se rechaza, significa que hay evidencia para respaldar la hipótesis alternativa. Si la hipótesis nula no se rechaza, significa que no hay suficiente evidencia para respaldar la hipótesis alternativa.\nResulta importante tener en cuenta que un fallo en rechazar la hipótesis nula no significa que la hipótesis nula sea verdadera, sino que la evidencia no es lo suficientemente fuerte como para rechazarla.\n\n\nEl valor p\nEl valor p es una medida de la evidencia en contra de una hipótesis nula. Representa la probabilidad de obtener un resultado tan extremo o más extremo que el observado, asumiendo que la hipótesis nula es verdadera.\nEl valor p se utiliza para determinar si hay suficiente evidencia para rechazar la hipótesis nula en favor de la hipótesis alternativa. Si el valor p es menor que un nivel de significancia predeterminado (generalmente 0.05 o 0.01), se rechaza la hipótesis nula y se acepta la hipótesis alternativa. Si el valor p es mayor que el nivel de significancia, no se rechaza la hipótesis nula.\nPor otro lado, un valor p mayor que el nivel de significancia significa que no hay suficiente evidencia para rechazar la hipótesis nula, y los resultados pueden haber ocurrido por casualidad. Por lo tanto, el investigador no rechaza la hipótesis nula.\nEs importante tener en cuenta que un valor p bajo no significa que la hipótesis alternativa sea verdadera, sino que hay suficiente evidencia para rechazar la hipótesis nula en favor de la hipótesis alternativa.\nTambién resulta importante señalar que un valor p bajo no significa que la hipótesis sea verdadera, simplemente significa que los datos son poco probables bajo la hipótesis nula.\n\n\nNiveles de significancia\nLos niveles de significancia se refieren a los niveles de significancia estadística en las pruebas de hipótesis. En las pruebas de hipótesis, un nivel de significancia es un umbral utilizado para determinar si una diferencia o relación observada es estadísticamente significativa. Un nivel de significancia comúnmente utilizado en la investigación es 0.05, lo que significa que hay un 5% de probabilidad de que la diferencia o relación observada sea debida al azar. Si la probabilidad de obtener un resultado tan extremo o más extremo que el observado, si la hipótesis nula es verdadera, es menor o igual al nivel de significancia, se rechaza la hipótesis nula y se acepta la hipótesis alternativa.\nPor ejemplo, en un estudio que investiga la relación entre el ingreso y la felicidad, los investigadores podrían utilizar un nivel de significancia de 0.05 para determinar si la relación observada entre el ingreso y la felicidad es estadísticamente significativa. Si la probabilidad de observar una relación tan fuerte o más fuerte que la observada, si la hipótesis nula es verdadera, es menor o igual a 0.05, los investigadores rechazarían la hipótesis nula y concluirían que hay una relación estadísticamente significativa entre el ingreso y la felicidad.\n\n\nVideo\nAsiste al siguiente video para aprender más sobre el concepto de valor p:\n\n\n\nEjercicio\n\n¿Es mayor la tasa de abortos en los estados donde Obama ganó en 2008?\n\nFormula la pregunta como un conjunto de hipótesis nula y alternativa:\nH0: Estados que votaron por Obama y McCain tienen la misma tasa de abortos.\nH1: Estados donde Obama ganó tienen una tasa de abortos mayor que los estados donde McCain ganó.\n\n\nCode\n# Testa la hipótesis nula de que la tasa de abortos es la misma en los estados donde Obama y McCain ganaron en 2008\ntt &lt;- t.test(d$abort_rate08~d$obama_win08)\n\n# Examina el valor p\n# Te informa la probabilidad de aceptar \n# que H0 sea verdadera:\ntt$p.value\n\n\n[1] 7.182965e-06\n\n\nCode\n# Ahora, redondea a 3 decimales\nround(tt$p.value,3)\n\n\n[1] 0"
  },
  {
    "objectID": "S_3_Analisis.html#el-test-de-chi-cuadrado",
    "href": "S_3_Analisis.html#el-test-de-chi-cuadrado",
    "title": "Análisis",
    "section": "El test de Chi-Cuadrado",
    "text": "El test de Chi-Cuadrado\n\nDefinición\nUn test de Chi-Cuadrado es una prueba estadística que se utiliza para determinar si hay una diferencia significativa entre las frecuencias esperadas y observadas en un conjunto de datos categóricos. La prueba se basa en la distribución de Chi-Cuadrado, que es una distribución de probabilidad que describe la distribución de la suma de los cuadrados de k variables normales estándar independientes.\nEl teste de Chi-Cuadrado es comúnmente utilizado en pruebas de hipótesis para probar la bondad de ajuste de un modelo a los datos observados, o para probar la independencia en una tabla de contingencia.\nCuando se prueba la bondad de ajuste, la hipótesis nula es que los datos siguen una distribución de probabilidad específica, y la hipótesis alternativa es que los datos no siguen esa distribución.\nCuando se prueba la independencia en una tabla de contingencia, la hipótesis nula es que no hay asociación entre las dos variables categóricas y la hipótesis alternativa es que hay una asociación entre las dos variables.\nEl estadístico de prueba utilizado en un test de Chi-Cuadrado se calcula sumando las diferencias al cuadrado entre las frecuencias observadas y esperadas, divididas por las frecuencias esperadas. El estadístico de prueba calculado se compara entonces con la distribución de Chi-Cuadrado con un cierto grado de libertad para determinar el valor p.\nUn valor p menor que un nivel de significancia elegido (generalmente 0.05) se toma como evidencia para rechazar la hipótesis nula y aceptar la hipótesis alternativa.\nEs importante tener en cuenta que el test de Chi-Cuadrado asume que el tamaño de la muestra es lo suficientemente grande, de lo contrario no es apropiado utilizarlo.\n\n\nEjemplos\nUn ejemplo proviene de la prueba de Independencia en Encuestas de Votantes. Un investigador puede querer probar si la afiliación política de un votante es independiente de su edad. Recopilarían datos sobre la edad y la afiliación política de una muestra de votantes y crearían una tabla de contingencia. La hipótesis nula sería que no hay asociación entre la edad y la afiliación política y la hipótesis alternativa sería que hay una asociación. Se podría utilizar una prueba de Chi-Cuadrado para determinar si las frecuencias observadas difieren significativamente de lo que se esperaría si la hipótesis nula fuera verdadera.\n\n\nVideo\nAsiste al video siguiente sobre el test de Chi-Cuadrado:\n\n\n\nEl Chi-Cuadrado en R\nEn R, puedes realizar un test de Chi-Cuadrado utilizando la función chisq.test(). La función toma una tabla de contingencia como argumento, que es una tabla que muestra la distribución de frecuencias de dos o más variables categóricas. La tabla de contingencia se puede introducir como una matriz o un data frame.\nPor ejemplo, si tenemos un data frame llamado d con dos columnas abort_rank3 y religiosity3, y queremos probar si hay una asociación significativa entre las dos variables, usaríamos el siguiente código:\n\n\nCode\n# Realiza el test de chi-cuadrado\nchisq.test(d$abort_rank3, d$religiosity3)\n\n\n\n    Pearson's Chi-squared test\n\ndata:  d$abort_rank3 and d$religiosity3\nX-squared = 23.443, df = 4, p-value = 0.0001033\n\n\n\n\nEjercicio\nInténtalo tú\nEmpleando nuestros datos sobre países del mundo (w), proporciona una respuesta a la siguiente pregunta:\n¿Está relacionado el nivel de PIB per cápita en 2008 (gdpcap3_08) con el tipo de régimen (dem_level4)? ¿Varía la riqueza según el tipo de régimen? Recuerda, cada pregunta tiene sus propias hipótesis nula y alternativa:\nH0: El nivel de riqueza (PIB per cápita) no afecta al tipo de régimen\nH1: El nivel de riqueza varía según el tipo de régimen\nIntenta realizar el test de Chi-Cuadrado en R para probar estas hipótesis:\n\n\nCode\n# Realiza el test chi-cuadrado\nchisq.test(w$gdpcap3_08, w$dem_level4)\n\n\n\n    Pearson's Chi-squared test\n\ndata:  w$gdpcap3_08 and w$dem_level4\nX-squared = 64.821, df = 6, p-value = 4.693e-12"
  },
  {
    "objectID": "S_3_Analisis.html#el-test-t-de-student",
    "href": "S_3_Analisis.html#el-test-t-de-student",
    "title": "Análisis",
    "section": "El test t de Student",
    "text": "El test t de Student\n\nDefinición\nEl test t de Student es una prueba estadística utilizada para determinar si hay una diferencia significativa entre las medias de dos grupos. Se utiliza para comparar las medias de dos muestras, cuando las varianzas de las dos poblaciones son desconocidas y el tamaño de la muestra es pequeño. Se basa en la distribución t, que es una distribución de probabilidad que es similar a la distribución normal estándar, pero con una cola ligeramente más plana.\nExisten dos tipos de test t: el test t de muestras independientes y el test t de muestras dependientes.\n1. Test t de muestras independientes: Se utiliza cuando las dos muestras son independientes entre sí, como comparar el PIB per cápita entre dos países diferentes. Por ejemplo, un investigador puede querer comparar el PIB per cápita de Estados Unidos con el de China. La hipótesis nula sería que no hay diferencia en el PIB per cápita entre los dos países y la hipótesis alternativa sería que hay una diferencia.\n2. Test t de muestras dependientes: Este test se utiliza cuando los dos grupos están relacionados de alguna manera, como comparar el PIB per cápita antes y después de la implementación de una cierta política. Por ejemplo, se puede comparar el PIB per cápita de un país antes y después de la firma de un acuerdo comercial. La hipótesis nula sería que no hay diferencia en el PIB per cápita antes y después del acuerdo comercial y la hipótesis alternativa sería que hay una diferencia.\nResulta importante tener en cuenta que el test t asume que los datos son aproximadamente distribuidos normalmente y que las varianzas de los dos grupos son iguales. Si estas suposiciones no se cumplen, puede ser más apropiado utilizar una prueba no paramétrica como el test de rangos de Wilcoxon (Wilcoxon rank-sum test).\nm test may be more appropriate.\n\n\nVideo\nAsiste al siguiente video sobre el test t:\n\n\n\nEl test t de Student en R\nEn R, puedes realizar un test t de Student utilizando la función t.test(). La función se puede utilizar para comparar las medias de dos muestras independientes o la media de una sola muestra con un valor conocido.\nCuestión: ¿Son los países con mayorías musulmanas menos democráticos que otros?\nHipótesis:\nH0: Los países musulmanes son tan democráticos como los demás países\nH1: Los países musulmanes son menos democráticos que los demás países\n\n\nCode\n# Ejecuta el test t.\nt.test(w$dem_score14~w$muslim, conf.level=0.99)\n\n\n\n    Welch Two Sample t-test\n\ndata:  w$dem_score14 by w$muslim\nt = 8.6908, df = 120.77, p-value = 2.104e-14\nalternative hypothesis: true difference in means between group No and group Yes is not equal to 0\n99 percent confidence interval:\n 1.679539 3.126983\nsample estimates:\n mean in group No mean in group Yes \n         6.210000          3.806739"
  },
  {
    "objectID": "S_3_Analisis.html#el-análisis-de-varianza-anova",
    "href": "S_3_Analisis.html#el-análisis-de-varianza-anova",
    "title": "Análisis",
    "section": "El análisis de varianza (ANOVA)",
    "text": "El análisis de varianza (ANOVA)\nEl ANOVA (Análisis de Varianza) es un método estadístico utilizado para determinar si hay una diferencia significativa entre las medias de dos o más grupos. Se utiliza para comparar las medias de múltiples muestras, cuando las varianzas de las poblaciones son desconocidas y el tamaño de la muestra es pequeño.\nExisten tres tipos de ANOVA: ANOVA de un factor, ANOVA de dos factores y ANOVA de varios factores.\n1. ANOVA de un factor: Se utiliza cuando hay un solo factor o variable independiente, como comparar el PIB per cápita de varios países. Por ejemplo, un investigador puede querer comparar el PIB per cápita de Estados Unidos, China y Japón. La hipótesis nula sería que no hay diferencia en el PIB per cápita entre los tres países y la hipótesis alternativa sería que hay una diferencia.\n2. ANOVA de dos factores: Este test se utiliza cuando hay dos variables independientes, como comparar el PIB per cápita de varios países antes y después de la implementación de una cierta política. Por ejemplo, un investigador de estudios globales puede querer comparar el PIB per cápita de Estados Unidos, China y Japón antes y después de la firma de un acuerdo comercial. La hipótesis nula sería que no hay diferencia en el PIB per cápita entre los tres países antes y después del acuerdo comercial y la hipótesis alternativa sería que hay una diferencia.\n3. ANOVA de varios factores: Este test se utiliza cuando hay más de dos variables independientes, como comparar el PIB per cápita de varios países antes y después de la implementación de una cierta política y también el efecto de la población en el PIB per cápita.\nEs importante tener en cuenta que el ANOVA asume que los datos están distribuidos normalmente y que las varianzas de los grupos son iguales. Si estas suposiciones no se cumplen, puede ser más apropiado utilizar una prueba no paramétrica como el test de Kruskal-Wallis.\nTambién resulta importante tener en cuenta que estos ejemplos son solo ejemplos y que los resultados del test ANOVA deben ser interpretados cuidadosamente, considerando otros factores como el tamaño de la muestra, la potencia del test y el tamaño del efecto.\n\nVideo\nAsiste al siguiente video sobre los tests ANOVA:\n\n\n\nANOVA en R\nEn R, puedes realizar un test ANOVA utilizando las funciones aov() o Anova() del paquete car, o la función oneway.test(). El ANOVA se utiliza para determinar si las medias de dos o más grupos son iguales.\nPor ejemplo, si tienes una variable llamada “data” que contiene las respuestas de un experimento, y una variable llamada “group” que indica el grupo al que pertenece cada respuesta, y quieres probar si las medias de los grupos son iguales, utilizarías el siguiente código con la función aov():\n\n\nCode\n# Realiza el análisis\nan &lt;- aov(dem_score14~religoin, data = w)\n\n# Recupera los resultados\nsummary(an)\n\n\n             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nreligoin      5  226.5   45.30    13.5 5.62e-11 ***\nResiduals   159  533.5    3.36                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n2 observations deleted due to missingness\n\n\nLa función aov() ajusta un modelo ANOVA a los datos, y la función summary() devuelve un resumen del modelo que incluye el estadístico F y el valor p para el test. El valor p te indica la probabilidad de observar un estadístico F tan extremo o más extremo que el calculado a partir de tus datos, asumiendo que la hipótesis nula (es decir, que las medias de los grupos son iguales) es verdadera. Un valor p pequeño (típicamente menor que 0.05) indica que puedes rechazar la hipótesis nula y concluir que hay una diferencia significativa en las medias entre los grupos.\nSi los resultados del ANOVA muestran una diferencia significativa entre los grupos, se recomienda realizar pruebas post-hoc para identificar qué grupos son significativamente diferentes. Hay varias pruebas post-hoc disponibles en R como Tukey HSD, Bonferroni, Scheffe, entre otras.\nUn test Tukey HSD es una prueba post-hoc que se utiliza para comparar las medias de múltiples grupos después de que un test ANOVA ha revelado una diferencia significativa entre los grupos. Se utiliza para determinar qué pares específicos de grupos son significativamente diferentes entre sí.\nEn R, puedes realizar un test Tukey HSD utilizando la función TukeyHSD() del paquete stats. La función toma como entrada el resultado de un test ANOVA.\nPor ejemplo, repitamos el ANOVA y agreguemos una prueba Tukey HSD en los grupos:\n\n\nCode\n# Repite el test ANOVA \nan &lt;- aov(dem_score14~religoin, data = w)\n\n# Realiza el test Tukey HSD con un nivel\n# de significancia de 99% o p=0.01.\ntk&lt;-TukeyHSD(an, conf.level = 0.99)\n\n# Guarda los resultados en un  data.frame \ndtk &lt;- data.frame(tk$religoin)\n\n# Redondea los valores para facilitar la interpretación\ndtk$p.adj &lt;- round(dtk$p.adj,3)\n\n# Muestra los resultados\ndtk\n\n\n                                          diff        lwr        upr p.adj\nOrthodox Christian-Catholic        -0.72451923 -2.5181276  1.0690891 0.737\nOther Christian-Catholic           -0.20456553 -1.6927776  1.2836465 0.997\nMuslim-Catholic                    -2.76153010 -4.0314235 -1.4916367 0.000\nBuddhist-Catholic                  -1.74008741 -3.8222138  0.3420390 0.053\nOther-Catholic                     -0.24211538 -2.1875568  1.7033260 0.998\nOther Christian-Orthodox Christian  0.51995370 -1.4594172  2.4993246 0.946\nMuslim-Orthodox Christian          -2.03701087 -3.8579346 -0.2160871 0.002\nBuddhist-Orthodox Christian        -1.01556818 -3.4728806  1.4417442 0.718\nOther-Orthodox Christian            0.48240385 -1.8602178  2.8250255 0.981\nMuslim-Other Christian             -2.55696457 -4.0779864 -1.0359427 0.000\nBuddhist-Other Christian           -1.53552189 -3.7796539  0.7086101 0.183\nOther-Other Christian              -0.03754986 -2.1554782  2.0803785 1.000\nBuddhist-Muslim                     1.02144269 -1.0842597  3.1271451 0.559\nOther-Muslim                        2.51941472  0.5487613  4.4900681 0.000\nOther-Buddhist                      1.49797203 -1.0722606  4.0682046 0.349\n\n\n\n\nEl gráfico Tukey HSD\nUn gráfico Tukey HSD, también conocido como un gráfico de comparación múltiple de Tukey, es una representación gráfica de los resultados de una prueba Tukey HSD. Se utiliza para comparar visualmente las medias de múltiples grupos e identificar qué pares específicos de grupos son significativamente diferentes entre sí.\nUn gráfico de Tukey HSD típicamente consiste en una serie de líneas, una para cada grupo. Las líneas muestran los valores mínimo y máximo del intervalo de confianza generado por la prueba. El punto en el centro de la línea es la diferencia media entre los dos grupos que se están comparando.\nEn ese tipo de gráfico, las líneas para los grupos que no son significativamente diferentes entre sí se encuentran conectadas por una línea horizontal, llamada “promedio común”. Esta línea representa la diferencia media que no se considera estadísticamente significativa. Las líneas para los grupos que son significativamente diferentes entre sí no están conectadas por una línea horizontal, y la diferencia en las medias se representa por la distancia al promedio común.\nEl gráfico de Tukey HSD también suele incluir asteriscos, letras u otros símbolos para identificar qué pares específicos de grupos son significativamente diferentes entre sí.\nEn R, hay muchas formas diferentes de generar un gráfico Tukey HSD. No obstante, dado que utilizaremos el ambiente ggplot en todos nuestros tutoriales (y en el curso de visualización de datos), emplearemos aquí la función ggHSD() del paquete ggiraphExtra:\n\n\nCode\n# Carga los paquetes\nlibrary(ggplot2)\nlibrary(ggiraphExtra)\n\n# Repite el test de ANOVA\nan &lt;- aov(dem_score14~religoin, data = w)\n\n# Realiza el test Tukey HSD con un nivel\n# de significancia de 99% o p=0.01.\ntk&lt;-TukeyHSD(an, conf.level = 0.99)\n\n\n# Crea un gráfico que representa los \n# intervalos de confianza informados\n# por el test Tukey HSD\nggHSD(tk) +\n    theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 10))+\n    theme_classic()\n\n\n\n\n\n\n\nEjercicio\nAhora te toca a ti.\nPrimero, repite el test ANOVA y agrega una prueba Tukey HSD para los grupos dem_score14 y gdp_cap3 del conjunto de datos w.\n\n\nCode\n# Realiza el análisis\nan &lt;- aov(dem_score14~gdp_cap3, data = w)\n\n# Muestra los resultados\nsummary(an)\n\n\n             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \ngdp_cap3      2  215.4  107.71   33.19 1.32e-12 ***\nResiduals   146  473.9    3.25                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n18 observations deleted due to missingness\n\n\nSegundo, genera las diferencias para cada par de categorías utilizando el test Tukey HSD:\n\n\nCode\n# Repite el test de ANOVA\nan &lt;- aov(dem_score14~gdp_cap3, data = w)\n\n# Realiza el test Tukey HSD con un nivel\n# de significancia de 99% o p=0.01.\ntk&lt;-TukeyHSD(an, conf.level = 0.99)\n\n# Guarda los resultados en un  data.frame \ndtk &lt;- data.frame(tk$gdp_cap3)\n\n# Redondea los valores para facilitar la interpretación\ndtk$p.adj &lt;- round(dtk$p.adj,3)\n\n# Muestra los resultados\ndtk\n\n\n                diff         lwr      upr p.adj\nMiddle-Low  1.018329 -0.04407901 2.080738 0.014\nHigh-Low    2.896038  1.83362933 3.958446 0.000\nHigh-Middle 1.877708  0.78932033 2.966096 0.000\n\n\nTercero, crea el gráfico para representar los coeficientes:\n\n\nCode\n# Carga los paquetes\nlibrary(ggplot2)\nlibrary(ggiraphExtra)\n\n# Repite el test de ANOVA\nan &lt;- aov(dem_score14~gdp_cap3, data = w)\n\n# Realiza el test Tukey HSD con un nivel\n# de significancia de 99% o p=0.01.\ntk&lt;-TukeyHSD(an, conf.level = 0.99)\n\n# Crea un gráfico que representa los \n# intervalos de confianza informados\n# por el test Tukey HSD\nggHSD(tk) +\n    theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 10))+\n    theme_classic()"
  },
  {
    "objectID": "basico.html",
    "href": "basico.html",
    "title": "Fundamentosde visualización de datos",
    "section": "",
    "text": "El documental de PBS “El arte de la visualización de datos” resulta muy informativo sobre la importancia de la visualización de datos:\n\n\nTodos los días vemos cómo se manipula la información para intentar convencer a la gente. Los gráficos no se quedan fuera de esa tendencia. El corto video abajo nos muestra algunas de las estrategias más comunes para descubrir intentos de mentir con gráficos:"
  },
  {
    "objectID": "basico.html#por-qué-visualizar-datos",
    "href": "basico.html#por-qué-visualizar-datos",
    "title": "Fundamentosde visualización de datos",
    "section": "",
    "text": "El documental de PBS “El arte de la visualización de datos” resulta muy informativo sobre la importancia de la visualización de datos:\n\n\nTodos los días vemos cómo se manipula la información para intentar convencer a la gente. Los gráficos no se quedan fuera de esa tendencia. El corto video abajo nos muestra algunas de las estrategias más comunes para descubrir intentos de mentir con gráficos:"
  },
  {
    "objectID": "basico.html#qué-es-la-visualización-de-datos",
    "href": "basico.html#qué-es-la-visualización-de-datos",
    "title": "Fundamentosde visualización de datos",
    "section": "¿Qué es la visualización de datos?",
    "text": "¿Qué es la visualización de datos?\nLa visualización de datos es una forma de comunicar información de manera efectiva utilizando elementos visuales como gráficos, mapas y tablas. Se trata de una parte esencial del trabajo científico, puesto que representa tanto una herramienta de análisis como un instrumento de comunicación de los resultados.\nDentro de los ámbitos científicos, los gráficos se consideran como parte del proceso de exploración de datos. Resultan muy útiles para descubrir patrones, validar la calidad de los datos y entender procesos que serían más difíciles de entender si se presentaran en forma de tablas o texto.\nMás recientemente, su uso se ha extendido a la comunicación de resultados y a la divulgación científica, ya que permiten presentar de manera clara y efectiva los hallazgos de un análisis de datos tanto a expertos como a un público no especializado."
  },
  {
    "objectID": "basico.html#por-qué-es-importante-la-visualización-de-datos",
    "href": "basico.html#por-qué-es-importante-la-visualización-de-datos",
    "title": "Fundamentosde visualización de datos",
    "section": "¿Por qué es importante la visualización de datos?",
    "text": "¿Por qué es importante la visualización de datos?\nTomemos como ejemplo, el gráfico “Warming Stripes”, creado por Edward Hakwings en 2018 para representar los cambios en las temperaturas medias anuales entre 1850 y 2017.\n \nEste gráfico se ha convertido en un símbolo de la lucha contra el cambio climático y ha sido utilizado por organizaciones como la ONU y la NASA para concienciar sobre el problema. ¿Por qué? Examinemos algunos elementos que hacen este gráfico tan efectivo:\n\nSimplicidad: El gráfico es simple y fácil de entender. No hay elementos de distracción, comentarios o decoraciones indeseadas, ni siquiera hace falta una escala informando qué se mide. Por solo mirarlo, ya nos damos cuenta de que se trata de una secuencia lineal de temperatura. Aquí, la regla de “menos es más” se afirma con mucha potencia.\nEl uso del color: El uso del color es muy efectivo. El color azul representa temperaturas más bajas, mientras que el rojo representa temperaturas más altas. La elección de estos colores es muy acertada, ya que el azul y el rojo son colores que se asocian comúnmente con el frío y el calor. Por lo tanto, no hace falta una leyenda para explicar qué representa cada barra.\nEl uso de la escala: Por tratarse de cambios (y no de valores absolutos), la variación entre las observaciones aumenta, lo que facilita la visualización de un patrón claro e inequívoco de calentamiento global.\n\nEn resumen, aunque siempre haya habido grupos contrarios a la tesis del calentamiento global, a partir de la creación de esta visualización, cualquiera que quiera argumentar en contra tendrá mucha mayor dificultad en hacerlo y necesitará argumentos muy convincentes para disuadir a la gente.\nTeniendo en mente el ejemplo anterior, podemos decir que la visualización de datos es importante por varias razones:\n\nFacilita la comprensión de los datos: Los gráficos y las visualizaciones permiten comprender mejor los datos y descubrir patrones y relaciones que serían difíciles de detectar de otra manera. Es cada vez más común trabajar con una cantidad enorme de datos que serían inabarcables sin estrategias heurísticas que posibilitaran su síntesis de manera efectiva. Los gráficos son una de las formas de abstracción más poderosas. Vemos que se trata de un gráfico muy fácil de leer.\nFacilita la comunicación de resultados: Los gráficos y las visualizaciones permiten comunicar de manera clara los resultados de un análisis de datos a expertos y a un público no especializado. No hace falta ser un experto en climatología para entender que las barras rojas son cada vez más largas y que eso significa que las temperaturas están aumentando. Personas con muy distintos niveles educativos pueden entender el mensaje.\nFacilita la toma de decisiones: Los gráficos y las visualizaciones permiten tomar decisiones informadas basadas en datos y evidencia. El gráfico de las barras de temperatura deja claro que tenemos un problema y que hace falta tomar cartas en el asunto, pues el crecimiento parece ser exponencial.\nFacilita la identificación de problemas: Los gráficos y las visualizaciones permiten identificar problemas y errores en los datos, como valores atípicos y datos faltantes.\nFacilita la identificación de oportunidades: Los gráficos y las visualizaciones permiten identificar oportunidades y tendencias que pueden ser aprovechadas para mejorar los procesos y los resultados.\n\n\nPor lo tanto, no hace falta tener un super gráfico lleno de parafernalia y “cachibaches” para comunicar efectivamente un mensaje. La simplicidad y la claridad son las claves para una visualización efectiva."
  },
  {
    "objectID": "basico.html#reglas-básicas",
    "href": "basico.html#reglas-básicas",
    "title": "Fundamentosde visualización de datos",
    "section": "Reglas básicas",
    "text": "Reglas básicas\nExiste un conjunto de reglas básicas que nos ayudan a la hora de crear visualizaciones de alta calidad. Si uno se adhiere a estos principios básicos, es mucho más probable que sea capaz de comunicar de manera efectiva la información que se desea transmitir.\n\nTenga una historia que contar o buscar\nYa sé que parece discurso de vendedor de autos usados o de conferenciante de las charlas TED, pero es cierto. ¿Por qué el gráfico es importante? ¿Qué pretende descubrir o revelar? No es necesario que sea una historia compleja o sumamente elaborada, sino que sea clara, fácil de entender y, sobre todo, que importe a la gente. Y para que importe a la gente, debes saber a qué gente te diriges, aunque, a veces, uno termina sorprendiéndose de la diversidad de personas que se interesan por un tema.\nEn 2018, terminadas las elecciones presidenciales de Brasil en las que ganó Jair Bolsonaro, empezó una discusión en los medios y las redes sociales sobre cuál habría sido el apoyo efectivo del tercer candidato en la disputa, Ciro Gomes, al candidato del Partido de los Trabajadores (PT), Fernando Haddad, en la segunda vuelta de los comicios. Muchos apoyadores del PT decían que Ciro Gomes había sido el responsable de la derrota de Haddad, mientras que otros decían que no había sido así. Entonces, he decidido aplicar una técnica de inferencia ecológica, que intenta descubrir patrones a partir de datos agregados, para ver si podía descubrir algo.\nPara casa mesa, he calculado la cantidad de votos que se habrían transferidos de unos a otros. Con esas informaciones, podía estimar cuál proporción de votos de cada candidato se transfería a otros, los blancos y nulos y las abstenciones. Con esos datos, he creado el siguiente gráfico cordas que revela la transferencia estimada de votos entre candidatos:\n\nEn la izquierda del gráfico vemos la red completa de transferencias, con los candidatos derrotados en la primera vuelta en la izquierda y las opciones de voto en la segunda vuelta a la derecha. En la derecha de la imagen, vemos la transferencia de cada candidato por separado. He decidido separar cada uno de ellos para facilitar la visualización de los patrones.\nVemos que las secciones electorales que votaron en mayor medida a Ciro Gomes han sido las únicas que inequívocamente han transferido votos a Fernando Haddad. Los patrones de los demás candidatos favorecen a Bolsonaro o son más complejos, sin una preferencia clara.\nAunque se tratara de una publicación privada en facebook, destinada solamente a mis amigos politólogos, en poco tiempo el gráfico se ha vuelto viral (infelizmente, sin la explicación metodológica que lo acompañaba). Muchos de los apoyadores de Ciro lo compartían y comentaban para contrarrestar las acusaciones de los del PT de que los “ciristas” habían votado nulo o apoyado a Bolsonaro. Este impacto inesperado solo fue posible porque el gráfico tenía una historia que contar y que importaba a la gente.\n\n\nQue tus datos sean de calidad\nEn la comunidad de análisis de datos en inglés, se suele emplear una expresión que me parece excelente para entender los problemas y virtudes de cualquier investigación o gráfico: “garbage in, garbage out” (algo en español como “aunque la mona se vista de seda, mona se queda” o quod natura non dat, Salmantica non praestat). Es decir, si no eres Moisés, no puedes sacar agua de piedra. Creo que las referencias populares nos quieren decir es: un análisis basado en datos de mala calidad no puede aportar nada de interesante. No resulta casual que la mayor parte del trabajo de investigación se dedique a la recolección y limpieza de datos y en las revisiones por pares se hace hincapié en la consistencia de los aspectos metodológicos. Tienen que ser interesantes y confiables para ser válidos.\n\n\n¡Esto son gráficos, no pinturas Rococó, señores!\nA mí, personalmente, me gusta el Rococó. Esos palacios decorados, esas pinturas de Fragonard o Watteau, todo muy bonito, un lujazo manifiesto en colores y formas. No obstante, un gráfico (al menos en un principio) no debería ser algo que recargue los sentidos. Obviamente, hay controversias y algunos diseñadores defienden la idea de que un gráfico es una forma de expresión visual más y, por lo tanto, puede asumir cualquier estilo estético que se desee.\nNo obstante, si queremos comunicar de forma rápida y efectiva a un público que no tiene tiempo ni busca una contemplación estética en nuestros gráficos, lo mejor es mantenerlos simples y claros. No es necesario que sean aburridos, pero sí que sean efectivos.\n¿Qué quiero decir simples y claros? Primero, que no se debe abusar de los colores, las formas y los elementos decorativos. Un gráfico debe ser fácil de leer y de entender. Si el lector tiene que esforzarse para entender lo que se quiere comunicar, es probable que no lo haga. Llenar los gráficos de elementos visuales vacíos de significado (para evitar el horror vacui) resultaría contraproducente. Eso no quiere decir que no se puedan emplear elementos estéticos para facilitar el entendimiento y causar una impresión placentera en los lectores. Como dijo Edward Tufte en el documental de la PBS, “el contenido siempre viene primero, la belleza naturalmente le seguirá”.\n\n\nHuye de las plantillas de Excel, SPSS, Stata o R\n¡Pero, tampoco nos pasemos de dejados! Si examinamos una muestra de publicaciones científicas en las ciencias sociales resulta impresionante ver el poco cuidado estético que se tiene con los gráficos. Aunque no es necesario que sean obras de arte, sí es importante que sean fáciles de leer y que aprovechen para informar lo mejor posible. No es necesario que sean muy elaborados, pero sí que sean claros, efectivos y atractivos.\nEn la mayoría de los casos, los autores simplemente copian y pegan los resultados de Excel, SPSS o Stata (incluso R) en sus documentos sin preocuparse por cómo el perfeccionamento de elementos visuales como el color, el tipo de fuente o la disposición de los símbolos puede mejorar la comprensión de los datos. Un gráfico atractivo, además de limpio y efectivo, resulta agradable y llama la atención por el placer estético que produce en el observador. También es una forma de demostrar cierto estilo o sofisticación en el trabajo de un autor. Es como su “marca” personal. Es la impresión que suelo tener cuando veo un gráfico de diseñadoras como Federica Fragapane, Giorgia Lupi o Nadieh Bremer.\nAtraer la atención del lector no es cosa menor. Tenemos a nuestra disposición miles de artículos y libros para leer, y si no logramos captar la atención del lector, es probable que nuestro trabajo no sea leído. Gráficos bien acabados revelan atención al detalle y preocupación por la calidad del trabajo que se lleva a cabo. Utilizando una analogía con la moda, sería como hacer una “operación bikini” y luego ir a la playa en chándal de andar por casa.\nNo digo que te conviertas en un diseñador para hacer un gráfico atractivo, pero sí es necesario tener en cuenta algunos principios básicos de diseño y visualización de datos. Existe una infinitud de manuales de visualización de datos con capítulos específicos sobre la elección de colores, fuentes, tamaños, formas, etc. Mi sugerencia es que consultéis algunas de esas obras para aprender los principios básicos, valerá mucho la pena (Brewer 2005; Healy 2019; Brewer, Hatchard, and Harrower 2003; Yau 2011, 2013; Tufte 2001; Cleveland 1993; Munzner 2014; Few 2004). Veréis que a partir de cierto momento se empiezan a repetir los mismos consejos y recomendaciones. En ese instante, ya tendrás lo suficiente para aplicar en tus propios gráficos.\n\n\n\n\n\n\n\n\n\nEn el gráfico anterior, he comparado tres gráficos realizados con plantillas de Excel, Stata y ggplot2 con uno hecho por mí. Aunque los tres primeros gráficos son correctos y cumplen con su función, pueden mejorar mucho.\nAñadimos dos variables más: urbanización para el tamaño y si se trata de un país de mayoría musulmana. Además, incorporamos un título en negrita, un subtítulo y una fuente. También hemos cambiado los colores y la posición de la leyenda y lo hemos convertido en una versión interactiva con un “tooltip” con los datos representados de forma detallada."
  },
  {
    "objectID": "ciencia_datos.html",
    "href": "ciencia_datos.html",
    "title": "Ciencia de datospolíticos",
    "section": "",
    "text": "El análisis de datos no representa una gran innovación para los científicos sociales. Desde hace décadas, empleamos técnicas de recolección y análisis de datos que nos permiten identificar patrones y llevar a cabo inferencias sobre cómo funciona la sociedad, la política o la economía. Empleamos técnicas cualitativas y estadísticas para analizar los datos, así como diferentes métodos de comunicación de resultados, como la visualización de datos o la narrativa basada en datos. Además, empleamos datos secundarios o controlamos técnicas de recolección de datos como encuestas, entrevistas o experimentos.\nNo obstante, ¿por qué ahora se ha puesto de moda el término ciencia de datos? En gran medida, la respuesta se encuentra en un cambio de paradigma entre los profesionales de tecnología de información (TI). Antes, el TI se dedidaba fundamentalmente en la gestión de bases de datos y en la programación de aplicaciones. El análisis de datos se debaja en manos de los departamentos especializados de grandes corporaciones, como financiero, contabilidad, etc. No obstante, hoy, las fronteras entre el tratamiento y recolección de datos y su análisis se han difuminado. Más y más profesionales de TI se dedican a analizar datos y desarrollan nuevos métodos a partir de la combinación de una cantidad creciente de datos con técnicas estadísticas tradicionales. Modelos estadísticos tradicionales, como la regresión logística, por ejemplo, se han empleado de forma innovadora utilizando cantidades ingentes de datos para no solo explicar fenómenos, sino para predecir comportamientos futuros.\nLa difusión de Internet y la digitalización de diversos procesos políticos, económicos y sociales han generado un volumen sin precedente de datos que exigían nuevos métodos de análisis. De golpe, un politólogo tenía acceso a todas las series de votación por candidato y mesa desde hace 30 años o todos los diarios de sesiones de un parlamento desde la redemocratización. Este aluvión de datos trajo consigo nuevos retos para el análisis. Los métodos tradicionales de organización de datos (planillas Excel, documentos Word o bases de datos de SPSS) se han quedado cortos frente a nuevos formatos y la exigencia de conocimientos de programación para convertir, por ejemplo, texto en información que permita el análisis.\nPor esa razón, investigadores y científicos sociales han percibido las ventajas y oportunidades ofrecidas por mejores conocimientos de programación y tratamiento de datos. De golpe, resultó posible tratar, estructurar y analizar cantidades de datos hasta poco tiempo impensables. ¿Cómo mapear la evolución de los derechos femeninos en 30 años de debates parlamentarios en cinco países de América Latina? Si consideramos que una sola legislatura puede generar alrededor de 30 mil páginas de debates, un análisis manual resulta imposible. No obstante, con técnicas de procesamiento de lenguaje natural y análisis de redes, tal análisis se ha viable.\nComo hemos podido ver en el video arriba, nuestro trabajo se asemeja más al de un analista de datos que al de un científico de datos de forma más general. Utilizamos diferentes herramientas para encontrar patrones en los datos, desarrollar modelos explicativos y empleamos técnicas de visualización tanto para explorar como para comunicar nuestros resultados. Además, somos expertos en la construcción de narrativas coherentes que articulan una multiplicidad de datos en un relato comprensible y que sirve de base para la toma de decisión de distintos actores, tanto públicos como privados.\nNo obstante, resulta cada vez más interesante navigar por ambos mundos y conocer las técnicas de manejo y modelaje de datos existentes. Tal necesidad se hace incluso más premente por los cambios del modo de hacer ciencia en las ciencias sociales, que se acercan a pasos agigantados a las ciencias naturales. Grupos de investigación multidisciplinarios y laboratorios, antes raros, se han convertido en el foco de financiación por gobiernos y otras entidades. La colaboración entre politólogos, informáticos, sociólogos y estadísticos resulta más común y deseada."
  },
  {
    "objectID": "ciencia_datos.html#qué-es-ciencia-de-datos",
    "href": "ciencia_datos.html#qué-es-ciencia-de-datos",
    "title": "Ciencia de datospolíticos",
    "section": "",
    "text": "El análisis de datos no representa una gran innovación para los científicos sociales. Desde hace décadas, empleamos técnicas de recolección y análisis de datos que nos permiten identificar patrones y llevar a cabo inferencias sobre cómo funciona la sociedad, la política o la economía. Empleamos técnicas cualitativas y estadísticas para analizar los datos, así como diferentes métodos de comunicación de resultados, como la visualización de datos o la narrativa basada en datos. Además, empleamos datos secundarios o controlamos técnicas de recolección de datos como encuestas, entrevistas o experimentos.\nNo obstante, ¿por qué ahora se ha puesto de moda el término ciencia de datos? En gran medida, la respuesta se encuentra en un cambio de paradigma entre los profesionales de tecnología de información (TI). Antes, el TI se dedidaba fundamentalmente en la gestión de bases de datos y en la programación de aplicaciones. El análisis de datos se debaja en manos de los departamentos especializados de grandes corporaciones, como financiero, contabilidad, etc. No obstante, hoy, las fronteras entre el tratamiento y recolección de datos y su análisis se han difuminado. Más y más profesionales de TI se dedican a analizar datos y desarrollan nuevos métodos a partir de la combinación de una cantidad creciente de datos con técnicas estadísticas tradicionales. Modelos estadísticos tradicionales, como la regresión logística, por ejemplo, se han empleado de forma innovadora utilizando cantidades ingentes de datos para no solo explicar fenómenos, sino para predecir comportamientos futuros.\nLa difusión de Internet y la digitalización de diversos procesos políticos, económicos y sociales han generado un volumen sin precedente de datos que exigían nuevos métodos de análisis. De golpe, un politólogo tenía acceso a todas las series de votación por candidato y mesa desde hace 30 años o todos los diarios de sesiones de un parlamento desde la redemocratización. Este aluvión de datos trajo consigo nuevos retos para el análisis. Los métodos tradicionales de organización de datos (planillas Excel, documentos Word o bases de datos de SPSS) se han quedado cortos frente a nuevos formatos y la exigencia de conocimientos de programación para convertir, por ejemplo, texto en información que permita el análisis.\nPor esa razón, investigadores y científicos sociales han percibido las ventajas y oportunidades ofrecidas por mejores conocimientos de programación y tratamiento de datos. De golpe, resultó posible tratar, estructurar y analizar cantidades de datos hasta poco tiempo impensables. ¿Cómo mapear la evolución de los derechos femeninos en 30 años de debates parlamentarios en cinco países de América Latina? Si consideramos que una sola legislatura puede generar alrededor de 30 mil páginas de debates, un análisis manual resulta imposible. No obstante, con técnicas de procesamiento de lenguaje natural y análisis de redes, tal análisis se ha viable.\nComo hemos podido ver en el video arriba, nuestro trabajo se asemeja más al de un analista de datos que al de un científico de datos de forma más general. Utilizamos diferentes herramientas para encontrar patrones en los datos, desarrollar modelos explicativos y empleamos técnicas de visualización tanto para explorar como para comunicar nuestros resultados. Además, somos expertos en la construcción de narrativas coherentes que articulan una multiplicidad de datos en un relato comprensible y que sirve de base para la toma de decisión de distintos actores, tanto públicos como privados.\nNo obstante, resulta cada vez más interesante navigar por ambos mundos y conocer las técnicas de manejo y modelaje de datos existentes. Tal necesidad se hace incluso más premente por los cambios del modo de hacer ciencia en las ciencias sociales, que se acercan a pasos agigantados a las ciencias naturales. Grupos de investigación multidisciplinarios y laboratorios, antes raros, se han convertido en el foco de financiación por gobiernos y otras entidades. La colaboración entre politólogos, informáticos, sociólogos y estadísticos resulta más común y deseada."
  },
  {
    "objectID": "ciencia_datos.html#cómo-se-aplica-a-la-política",
    "href": "ciencia_datos.html#cómo-se-aplica-a-la-política",
    "title": "Ciencia de datospolíticos",
    "section": "¿Cómo se aplica a la política?",
    "text": "¿Cómo se aplica a la política?\n\nEmpezamos esta sección con el vídeo de Cambridge Analytica, porque no hay nadie mejor que ellos para explicarnos cómo esa nueva perspectiva de datos puede ser (mal)empleada en la política. La empresa ha sido objeto de un escándalo al recolectar datos de forma no autorizada y emplearlos para influir en las elecciones estadunidenses de 2016. A través de la recolección de datos de millones de usuarios de Facebook, la empresa fue capaz de desarrollar perfiles psicológicos de los votantes y dirigir mensajes específicos a cada uno de ellos. Aunque no sabemos exactamente cuánto y cómo influyó en el voto, la publicidad recibida por el caso ha abierto un debate importante sobre la ética en el uso de los datos personales y cómo estos pueden ser empleados para influir en la toma de decisiones de los ciudadanos.\nNuevas aplicaciones de la ciencia de datos en la política se han vuelto comunes. Modelos de análisis de texto permiten identificar patrones en discursos políticos y debates parlamentarios. Análisis de redes de coautoría de leyes se emplean para medir cambios en la polarización de los diputados. Nuevos datos + nuevas técnicas de análisis = nuevas preguntas y métodos para entender cómo funciona la política.\nLo mismo pasa en las políticas públicas. Aunque el análisis de datos aplicado a la evaluación de políticas públicas no sea algo nuevo, la cantidad de datos disponibles y las técnicas de análisis han cambiado radicalmente. Hoy, es posible evaluar el impacto de una política pública en tiempo real, a través de la recolección de datos en línea y sistemas de información integrados. Muchas universidades han desarrollado incluso grados o posgrados especializados en el análisis de datos orientado hacia las políticas públicas:\n\nComo vemos, los cambios en la forma de hacer ciencia han sido radicales y han abierto un abanico de posibilidades para los investigadores de ciencias sociales. Los modelos de Inteligencia Artificial prometen ser aún más disruptivos en un futuro cercano. Por ello, resulta necesario, al menos, tener un conocimiento básico de tales tecnologías y cómo se aplican a distintos ámbitos de la ciencia política y las políticas públicas."
  },
  {
    "objectID": "ciencia_datos.html#paquetes-estadísticos-o-lenguajes-de-programación",
    "href": "ciencia_datos.html#paquetes-estadísticos-o-lenguajes-de-programación",
    "title": "Ciencia de datospolíticos",
    "section": "Paquetes estadísticos o lenguajes de programación",
    "text": "Paquetes estadísticos o lenguajes de programación\nNo sé si por mero hábito o puro vicio, muchos programas de grado y posgrado en ciencias sociales siguen enseñando a sus estudiantes a usar paquetes estadísticos como el SPSS en lugar de lenguajes de programación como R o Python. El principal motivo es quizas la facilidad de uso de los primeros, que permiten hacer análisis estadísticos sin necesidad de programar. Las interfaces basadas en menús y ventanas emergentes pasan una impresión de control y familiaridad con los análisis estadísticos, algo que ni siempre es cierto.\nLos lenguajes de programación, por otra parte, resultan más difíciles de aprender, sobre todo si uno nunca ha programado en su vida. Sin embargo, amplian el abanico de posibilidades de análisis mucho más allá de lo que podría soñar alguien con fluencia en SPSS, por ejemplo. El video abajo ayuda a entender las diferencias entre ambos y por qué deberíamos abandonar los paquetes estadísticos en favor de los lenguajes de programación:\n\nSi uno está convencido de que debe aprender a programar, emerge otro debate: ¿R o Python? Ambos lenguajes son muy útiles para el análisis de datos, ambos se utilizan en aplicaciones punteras de IA y ambos tienen una comunidad de usuarios muy activa. R es más empleado entre investigadores, mientras que Python es más popular en la industria. Las capacidades de gráficos de R son superiores a las de Python, pero Python es más versátil y se emplea en una gama más amplia de aplicaciones. El video abajo ayuda a entender las diferencias entre ambos:\n\nLa principal razón para aprender R en la ciencia política se encuentra en que la mayoría de los artículos y análisis de datos se programan en R. No obstante, tal preponderancia puede desaparecer en el futuro. Muchos modelos de IA se programan en Python y algunos investigadores empiezan a mezclar ambos lenguajes en sus análisis."
  },
  {
    "objectID": "ciencia_datos.html#tengo-que-aprender-a-programar-cómo-empiezo",
    "href": "ciencia_datos.html#tengo-que-aprender-a-programar-cómo-empiezo",
    "title": "Ciencia de datospolíticos",
    "section": "Tengo que aprender a programar, ¿cómo empiezo?",
    "text": "Tengo que aprender a programar, ¿cómo empiezo?\nMuchos investigadores de ciencias sociales se sienten impulsados a adquirir nuevos conocimientos en programación y análisis de datos. Dicha tarea muchas veces puede parecer abrumadora. No obstante, existe un enorme abanico de recursos gratuitos y de pago que facilitan enormemente el proceso de aprendizaje.\n\nJugando\nUna forma de aprender a programar cuando uno no tiene ninguna experiencia previa es jugando. Existen varios juegos educativos que te permiten aprender conceptos básicos de programación de forma muy divertida y progresiva. En esta sección, presentamos algunos juegos, algunos gratuitos y otros de pago, que te pueden ayudar a aprender a programar de forma muy divertida y progresiva. Con estos juegos, no aprenderás a programar en un lenguaje de programación real, pero sí a pensar de forma algorítmica y a resolver problemas de forma estructurada. Se trata de un paso irreemplazable en el proceso de aprendizaje de la programación. Aunque puedan parecer “infantiles” y la publicidad vaya dirigida a padres que quieren que sus hijos aprendan principios de programación y ciencia de la computación, tengo a doctorandos míos enganchados a algunos de estos juegos.\nRabbids Coding\n\nRabbids Coding es quizás el más fácil de obtener y jugar. Se trata de un juego educativo en el que puedes aprender algunos conceptos básicos de programación como el de algoritmo, reiteración, condiciones, bucles jugando. El juego tiene dos grandes puntos fuertes. Primero, es totalmente grátis y se puede jugar en cualquier ordenador o móvil. Segundo, es muy divertido y adictivo. Empieza en un nivel muy fácil, pero va a aumentando la complejidad a medida en que vas superando niveles.\n7 Billion Humans\n\nDisponible en las plataformas Steam, Nintengo Switch o en la App Store de Apple, 7 billion humans es un juego de programación un poco más avanzado que Rabbids Coding. Aunque sea de pago (alrededor 6 o 7 dólares en la App Store de Apple o 15 en Steam), en el puedes aprender conceptos más avanzados de programación de forma muy divertida y progresiva. Los conceptos son los mismos: algoritmo, reiteración, condiciones, bucles, funciones, entre otros. Aprenderás a pensar de forma algorítmica y a resolver problemas de forma estructurada como en un lenguaje de programación real, pero utilizando bloques, lo que facilita el aprendizaje.\nSwift Playgrounds\n\nSwift Playgrounds es un juego educativo de Apple que te permite aprender a programar en Swift, el lenguaje de programación de Apple. Lo más interesante no está en aprender Swift, sino en entrar en contacto con un lenguaje de script, algo más avanzado que los juegos anteriores. El juego trata de ayudar a un personaje a resolver problemas de programación de forma progresiva: recolectar yemas, abrir portales, etc. Para ello, tienes que crear programas en Swift, algo que resulta muy sencillo gracias a la interfaz gráfica del juego. Además, no hay límite. La interfaz de Playgrounds permite que puedas escribir incluso aplicaciones profesionales, si avanzas lo suficiente. La aplicación es totalmente gratis, pero solo está disponible en ordenadores Mac o en iPads.\n\n\nAsistiendo a cursos online\nExiste una enorme cantidad de recursos online para el aprendizaje de R y de programación en general. Se pueden encontrar una multitud de videos y tutoriales en Youtube o libros online gratuitos que te pueden ayudar a aprender a programar. Los cursos online representa una opción más estructurada y progresiva de estudiar. Aunque sean de pago, el coste no suele ser muy elevado (cuesta lo mismo o incluso menos que un libro técnico impreso) y la calidad suele ser alta, especialmente aquellos organizados por universidades o empresas de tecnología. En esta sesión recomiendo dos que pueden ser útilies para los iniciantes. Ambos se encuentran en Coursera, aunque se pueden encontrar otras alternativas en EdX, Udemy, Codecademy, etc. Aunque estén en inglés, poseen subtítulos en español que permiten entender todo el contenido sin problemas.\nEl primero es la especialización en ciencia de datos de la Universidad Johns Hopkins. Ha sido el que he cursado yo en 2011 cuando hice la transición desde Stata a R. El curso es bastante completo y bien evaluado, los ejercicios son muy prácticos y los profesores muy didácticos. Cubren desde los principios hasta programación más avanzada en R.\nEl segundo es la introducción al R hecha por Google. Es un curso más corto y menos completo que el anterior, pero también muy bien valorado. Los materiales son creados de modo profesional y muy bien cuidados en sus aspectos estéticos y didácticos.\n\n\nPracticando con tus datos\nLo más importante para aprender a programar es emplear tus propios datos o resolver problemas reales de análisis de datos con el lenguaje que deseas manipular. La estrategia ideal consiste en combinar\nAlgunos consejos clave para consolidar el proceso de aprendizaje:\n\nTrabaja con un problema y datos reales. Intenta integrar el uso de la herramienta en tu trabajo cotidiano. Esto te permitirá emplear tu horario laboral para aprender y, al mismo tiempo, resolver problemas reales. De inicio no se trata de hacer todo de golpe en un nuevo lenguaje, pero ir integrando poco a poco el uso de la herramienta en tu trabajo cotidiano.\nElige problemas concretos para empezar. Resulta mucho más fácil aprender si restringes el proyecto a un conjunto abarcable de tareas o problemas concretos, como abrir y limpiar los datos o llevar a cabo ciertos análisis básicos. Quizás, al principio, empiezas a abrir y transformar los datos o hacer gráficos con R y, luego, te dedicas a hacer análisis más complejos o integrar otras fases del proceso.\nDefine objetivos claros. Establezca metas de aprendizaje claras y alcanzables. Por ejemplo, abrir datos de Excel, SPSS, Stata y CSV en R. Luego, limpiar los datos y calcular algunos indicadores y así sucesivamente. Elegir objetivos pequeños, concretos y que permitan la visualización de resultados rápidos es muy buena estrategia para no perder el ánimo en procesos de aprendizaje complejos como puede ser aprender un lenguaje de programación por primera vez.\nTrabaja en equipo. La colaboración entre individuos con diferentes niveles y habilidades hace el proceso de aprendizaje más ameno, divertido y, por ende, efectivo. Elige bien el grupo de personas, integra a gente con distintos niveles de conocimiento y experiencia y los resultados pueden ser enormemente sorpreendentes. Los compañeros ayudan tanto en la motivación como un primer recurso para resolver problemas. Podéis incluso establecer mecanismos lúdicos para aumentar la colaboración o la competencia entre los miembros del grupo. Por ejemplo, “el individuo o equipo dentro del grupo que resuelva primero el problema elige el próximo reto o no paga la primera ronda de cervezas”.\nMantén el foco en aprender. Por más que emplees la herramienta en tu trabajo cotidiano, no pierdas de vista que el objetivo es aprender. Tampoco te frustres por la pérdida inicial de productividad. La peor tentación viene cuando uno piensa: “Yo lo hago en 10 minutos en SPSS, ¿por qué tengo que perderme horas intentando hacer lo mismo en R?”. Es verdad, pero una vez aprendido, la misma tarea la prodrás hacer en pocos segundos o ser mucho más efectivo en el proceso de análisis de datos como un todo: de la recolección a la publicación de los resultados."
  },
  {
    "objectID": "gramatica.html#gráficos-por-capas",
    "href": "gramatica.html#gráficos-por-capas",
    "title": "Gramáticade los gráficos",
    "section": "Gráficos por capas",
    "text": "Gráficos por capas\nComo se puede ver en el vídeo, la mejor manera de pensar en la gramática de los gráficos es a partir de una estructura de capas superpuestas. La idea es muy sencilla: cada gráfico se construye a partir de una serie de capas que se van sumando una a una, de modo que uno puede ir añadiendo mayor sofisticación y complejidad en la medida que ya tiene resueltos los temas anteriores.\nCada capa de un gráfico es un componente independiente que se puede modificar y combinar con otras capas para crear un gráfico más complejo. La figura abajo nos brinda una representación visual de la gramática de los gráficos:\n\nEn la base se encuentra la capa de datos. Cualquier visualización depende fundamentalmente de la información que se desea comunicar. Esta capa condiciona todo lo que viene después: las geometrías que podemos emplear, las estadísticas, la capacidad de dividir en diferentes grupos, etc.\nImaginemos nuestra base de datos w con los datos de los países. Queremos crear un diagrama de dispersión para analizar la relación entre la esperanza de vida (lifeex_total) y el nivel de democracia (dem_score14). imaginemos que queremos contrastar esas dos variables con el IDH (hdi) y el nivel del PIB per cápita (gdpcap3_08). Nuestro gráfico solo se importará con esas variables y ninguna más, pues no las emplearemos.\n\n\nCode\n# Carga los datos\nlibrary(poliscidata)\n\n# Crea una base w a partir\n# de la original world\nw &lt;- world\n\n# Visualiza el nombre del país,\n# la esperanza de vida y el nivel\n# de democracia\nreactable(w[, c(\"country\", \"lifeex_total\", \"dem_score14\",\"hdi\",\"gdpcap3_08\")])\n\n\n\n\n\n\n\nEsta sería nuestra capa de datos. Tenemos cinco variables, dos en formato texto (factor) y dos numéricas: el nombre del país, la esperanza de vida, el nivel de democracia, el IDH y la desigualdad de género. Para crearla formalmente en R, debemos decir que la base de datos que vamos a emplear es la que se llama w en la función ggplot del paquete ggplot2.\n\n\nCode\n# Carga el paquete\nlibrary(ggplot2)\n\n# Crea la capa de datos \ng &lt;- ggplot(w)\n\n\nEste procedimiento crea un nuevo objeto llamado g (g de gráfico, pero podría ser cualquier otro nombre) que contiene solamente la indicación de que w es la capa de datos.\nLa siguiente capa es la de estética. En esta capa se definen las variables que se van a visualizar y cómo. También se refieren a ese nivel como el “mapeo” de las variables. En nuestro caso, queremos visualizar la esperanza de vida en el eje x y el nivel de democracia en el eje y. Ya tenemos para un gráfico de dispersión (scatterplot).\nNo obstante, también queremos que el tamaño de cada punto sea proporcional al IDH, siendo que los países con mayor desarrollo humano tendrán puntos más grandes y los de menos, más pequeños. Aprovechamos para definir que el color de los puntos corresponda al valor del nivel del PIB per cápita (Bajo, Mediano, Alto).\nPara crear la capa de estética en R, sería tan sencillo como “sumar” la definición de la estética a la capa de datos:\n\n\nCode\n# Añade una capa de estética\n# para la relación entre la esperanza\n# de vida y el nivel de democracia\n# con el IDH establecido como tamaño \n# y el PIB per cápita como color\ng &lt;- g + \n     aes(x=lifeex_total,\n         y=dem_score14,\n         size=hdi,\n         color=gdpcap3_08)\n\n# visualiza el gráfico\ng\n\n\n\n\n\n“¡Pero no veo nada más que el fondo y los ejes!” Claro que no. Estás en el backstage todavía. Solo dijiste al R que querías visualizar la esperanza de vida en el eje x, el nivel de democracia en el eje y, el tamaño de los puntos proporcional al IDH y el color de los puntos proporcional a la desigualdad de género. Pero no le dijiste cómo querías visualizarlo. Para ello necesitas definir que tipo de representación visual quieres: pueden ser puntos, líneas, barras, florecitas, avioncitos… ¿Cómo el R va a adivinar lo que Ud.? Eso es lo que viene a continuación.\nAñadiremos una capa de geometría, representada por la función geom_ seguida del tipo de geometría que queremos. En nuestro caso, queremos puntos, por lo que usaremos la función geom_point.\n\n\nCode\n# Añade la capa de geometría\n# que serán los puntos\ng &lt;- g + geom_point()\n\n# Visualiza el gráfico\ng\n\n\n\n\n\n\nAhora sí, ¡habemus gráfico! Hemos sumado a geometría de puntos a las capas anteriores de datos y estética. Pero, nos resultó un gráfico que da miedo (ya lidiaremos con eso más tarde).\nMuchos pararían aquí, pero desperdiciaríamos la oportunidad de hacer un gráfico más informativo. Todavía podemos añadir más capas y cambios a nuestra visualización para que sea más bonita e eficaz.\nImaginemos que nos gustaría separar los países según regiones. Para ello, necesitamos una nueva capa: la capa de facetas. En esta capa, se definen las variables que se van a utilizar para separar los datos en diferentes paneles. En nuestro caso, queremos separar los países por regiones.\nPara ello, empleamos la función facet_wrap y le decimos que queremos dividir los países por la variable regionun. La capa de facetas se vería así:\n\n\nCode\n# Añade la capa de facetas para\n# dividir el gráfico por regiones\ng &lt;- g + facet_wrap(~regionun)\n\n# Visualiza el gráfico\ng\n\n\n\n\n\nComo habéis visto, he ido añadiendo capas al gráfico y él estaba de lo más contento. Ahora quiero añadir alguna estadística chula que me permita visualizar mejor los resultados, como una elipse que circule los puntos de cada grupo de PIB per cápita. Lo hago por medio de una capa de estadística:\n\n\nCode\n# Añado la capa de estadística\ng &lt;- g + stat_ellipse()\n\n# visualizo el gráfico\ng\n\n\n\n\n\nYa tengo muchos decorados. Ahora toca cambiar un poco la representación jugando con la capa de coordenadas.\n\n\nCode\n# Cambia las coordenadas\n# a polares\ng &lt;- g + coord_polar()\n\n# Visualiza el gráfico\ng\n\n\n\n\n\n¿Demasiado liado para ti? Para mi también. Mi experimento no ha sido muy exitoso. No hay problema, volvemos al tipo de coordenadas anterior:\n\n\nCode\n# Superpone las coordenadas \n# cartesianas a las anteriores\ng &lt;- g + coord_cartesian()\n\n# Visualiza el gráfico\ng\n\n\n\n\n\nEsto nos advierte también que la estructura de capas no resulta obligatoria. Las únicas capas que son estrictamente necesarias son la de datos, estética y geometría. Las demás son opcionales y pueden ser añadidas o quitadas según la necesidad.\nAhora nos toca mejorar la apariencia del gráfico. Para ello, añadiemos una capa de tema. En esta capa, se definen los elementos que se van a utilizar para mejorar la apariencia del gráfico. Necesitamos quitar ese fondo feo, cambiar los colores, añadir un título, cambiar el nombre de los ejes, etc. Hagamoslo:\n\n\nCode\n# Añadimos un tema pre programado\n# para quitar elementos indesejables\ng &lt;- g + theme_classic()\n\n# Cambiamos el color\ng &lt;- g + scale_color_manual(\n                values=c(\"red3\",\n                         \"orange\",\n                         \"blue\"))\n\n# Añadimos un título y cambiamos\n# los nombres de los ejes\ng &lt;- g + labs(title=\"Relación entre esperanza de vida y nivel de democracia\",\n              x=\"Esperanza de vida\",\n              y=\"Nivel de democracia\")\n\n# Cambiamos el título de las\n# leyendas\ng &lt;- g + guides(\n            color = guide_legend(title=\"PIB per cápita\"),\n            size = guide_legend(title=\"IDH\")\n            )\n\n# Aumentamos el tamaño del título\ng &lt;- g + theme(plot.title = \n                 element_text(size=16, \n                              face=\"bold\")) \n\n# Visualizamos el gráfico\ng"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ciencia de datos políticos en R",
    "section": "",
    "text": "Esta página web forma parte del curso “Ciencia de datos políticos con R”. En ella, se recogen los materiales y ejemplos que se desarrollarán durante las sesiones."
  },
  {
    "objectID": "index.html#el-curso",
    "href": "index.html#el-curso",
    "title": "Ciencia de datos políticos en R",
    "section": "",
    "text": "Esta página web forma parte del curso “Ciencia de datos políticos con R”. En ella, se recogen los materiales y ejemplos que se desarrollarán durante las sesiones."
  },
  {
    "objectID": "index.html#el-profesor",
    "href": "index.html#el-profesor",
    "title": "Ciencia de datos políticos en R",
    "section": "El profesor",
    "text": "El profesor\nRodrigo Rodrigues-Silveira \nrodrodr@usal.es\nProfesor de ciencia política de la USAL. Director del proyecto “Comportamiento legislativo y erosión democrática en América Latina” (PELA Comportamiento)."
  },
  {
    "objectID": "index.html#el-contenido",
    "href": "index.html#el-contenido",
    "title": "Ciencia de datos políticos en R",
    "section": "El contenido",
    "text": "El contenido\nDurante el curso se abordarán los siguientes temas:\n\nIntroducción a la la ciencia de datos en R\nManipulación y análisis de datos sociales\nCreación de gráficos y narrativas visuales\nAnálisis de textos y modelos de IA generativa"
  },
  {
    "objectID": "index.html#sesiones",
    "href": "index.html#sesiones",
    "title": "Ciencia de datos políticos en R",
    "section": "Sesiones",
    "text": "Sesiones\nLas sesiones tendrán una duración de 5 horas y se llevarán a cabo en el CIEPS.\nDÍA 1 - 20/01/2025 de 8 a 13h\nDÍA 2 - 21/01/2025 de 8 a 13h\nDÍA 3 - 22/01/2025 de 8 a 13h\nDÍA 4 - 23/01/2025 de 8 a 13h"
  },
  {
    "objectID": "index.html#servicio-técnico",
    "href": "index.html#servicio-técnico",
    "title": "Ciencia de datos políticos en R",
    "section": "🤖 Servicio técnico 🤖",
    "text": "🤖 Servicio técnico 🤖\nPara que podáis reproducir los ejemplos de análisis presentados durante el curso debéis instalar en vuestros ordenadores el R y el RStudio Desktop.\nPara los modelos de inteligencia artificial, deben instalar Ollama.\nTambién debéis ejecutar el siguiente código en R que instala los paquetes necesarios:\n\n\nCode\n# Crea un vector con los paquetes a instalar\npc &lt;- c(\"devtools\",\"ggplot2\",\"ggrepel\",\"ggdist\",\n        \"ggiraph\",\"giraphExtra\",\"ggridges\",\"dplyr\",\n        \"vdemdata\",\"sf\",\"cowplot\",\"poliscidata\",\n        \"treemap\",\"treemapify\",\"plotly\",\"networkD3\",\n        \"gapminder\",\"patchwork\",\"ggcorrplot\",\"rollama\",\n        \"ggnetwork\",\"ggridges\",\"ggbeeswarm\",\"ggtext\",\n        \"netrankr\",\"igraph\",\"reactable\",\"RColorBrewer\",\n        \"hrbrthemes\",\"ggthemes\",\"tvthemes\",\"broom\",\n        \"tidyverse\",\"knittr\",\"kableExtra\",\"rmarkdown\",\n        \"poliscidata\",\"psych\",\"crosstable\",\"corrplot\",\n        \"ggpomological\",\"igraph\",\"netrankr\",\"ggpmisc\",\n        \"forestplot\",\"jtools\",\"stargazer\",\"distributional\")\n\n# Instala los paquetes\ninstall.packages(pc)\n\n# Instala el paquete tenet que no está en CRAN\n# (si ya no lo habéis instalado en el curso \n# anterior de introducción al R)\ndevtools::install_github(\"rodrodr/tenet\", force=T)\ndevtools::install_github(\"rstudio/learnr\")\ndevtools::install_github(\"rundel/learnrhash\")\ndevtools::install_github('bbc/bbplot')\ndevtools::install_github(\"vdeminstitute/vdemdata\")\n\n# Instala este paquete después de haber instalado los anteriores\ndevtools::install_github(\"gadenbuie/ggpomological\")"
  },
  {
    "objectID": "interactivo.html",
    "href": "interactivo.html",
    "title": "Interactividaden los gráficos",
    "section": "",
    "text": "Una de las grandes ventajas de la visualización de datos viene de la posibilidad de interactuar con los gráficos. En este sentido, la interactividad permite a los usuarios explorar los datos de manera más profunda, y a menudo, de una manera más intuitiva. En este capítulo veremos cómo crear gráficos interactivos en R a partir de un conjunto de paquetes especializados."
  },
  {
    "objectID": "interactivo.html#introducción",
    "href": "interactivo.html#introducción",
    "title": "Interactividaden los gráficos",
    "section": "",
    "text": "Una de las grandes ventajas de la visualización de datos viene de la posibilidad de interactuar con los gráficos. En este sentido, la interactividad permite a los usuarios explorar los datos de manera más profunda, y a menudo, de una manera más intuitiva. En este capítulo veremos cómo crear gráficos interactivos en R a partir de un conjunto de paquetes especializados."
  },
  {
    "objectID": "interactivo.html#tipos-de-interacción",
    "href": "interactivo.html#tipos-de-interacción",
    "title": "Interactividaden los gráficos",
    "section": "Tipos de interacción",
    "text": "Tipos de interacción\nExisten diferentes formas de interacción en los gráficos interactivos. En este curso exploraremos las siguientes: tooltips, cliques, hover (pasar el cursor sobre un elemento) y zoom. A continuación, describiremos cada una de ellas.\n\nTooltips\nLos tooltips son pequeñas ventanas emergentes que aparecen cuando el usuario pasa el ratón sobre un elemento interactivo. En estos tooltips se pueden mostrar datos adicionales que complementan la información que se muestra en el gráfico. En R, podemos crear tooltips con solamente definir una variable como contenido o crear versiones más complejas a partir de pocas líneas de código html.\nEl código abajo muestra cómo crear dos gráficos de dispersión con tooltips en R. El primero con un tooltip simple y el segundo con uno más complejo. Para hacerlo emplearemos el paquete ggiraph y la geometría geom_point_interactive, que permite crear gráficos de dispersión interactivos.\nPrimer gráfico: tooltip solo con el nombre del país.\n\n\nCode\nlibrary(poliscidata)\nlibrary(ggplot2)\nlibrary(ggiraph)\n\n# Carga los datos\nw &lt;- world\n\n# Genera el gráfico\np &lt;- ggplot(w, \n            aes(x=lifeex_total, \n                y=dem_score14))+\n    geom_point_interactive(\n            aes(tooltip=country))\n\n# Visualiza el gráfico\n# interactivo\ngirafe(ggobj = p)\n\n\n\n\n\n\nSegundo gráfico: tooltip simple con poco código html y datos de nuevas variables.\n\n\nCode\n# Versión A - Saltos de línea\n\n# Crea una variable en el data.frame\n# con el contenido del tooltip\nw$tooltip_text &lt;- paste0(\"&lt;h5 style='color:red;'&gt;&lt;strong&gt;\", \n                         w$country, \"&lt;/strong&gt;&lt;/h5&gt;\",\n                         \"&lt;strong&gt;Esperanza de vida:&lt;/strong&gt; \",\n                         w$lifeex_total,\n                         \"&lt;br&gt;&lt;strong&gt;Democracia:&lt;/strong&gt; \",\n                         w$dem_score14,\n                         \"&lt;br&gt;&lt;strong&gt;Religión:&lt;/strong&gt; \",\n                         w$religoin)\n\n# Genera el gráfico\np &lt;- ggplot(w, \n            aes(x=lifeex_total, \n                y=dem_score14))+\n    geom_point_interactive(\n            aes(tooltip=tooltip_text))\n\n# Visualiza el gráfico\n# interactivo\ngirafe(ggobj = p)\n\n\n\n\n\n\nTercer gráfico: tooltip más elaborado con una tabla html.\n\n\nCode\n# Versión B - tabla\n\n# Crea una variable en el data.frame\n# con el contenido del tooltip\nw$tooltip_text &lt;- paste0(\"&lt;style&gt;.row{border-bottom:1px solid;}&lt;/style&gt;\",\n                        \"&lt;h5 style='color:red;'&gt;&lt;strong&gt;\", \n                         w$country, \n                         \"&lt;/strong&gt;&lt;/h5&gt;\",\n                         \"&lt;table&gt;\",\"\n                         &lt;col width='180px' /&gt;\",\n                         \"&lt;col width='40px' /&gt;\",\n                         \"&lt;tr class='row' style='color:orange;'&gt;\",\n                         \"&lt;td&gt;Esperanza de vida&lt;/td&gt;\",\n                         \"&lt;td&gt;\", round(w$lifeex_total,1),\"&lt;/td&gt;\",\n                         \"&lt;/tr&gt;\",\n                         \"&lt;tr class='row' style='color:yellow;'&gt;\",\n                         \"&lt;td&gt;Democracia&lt;/td&gt;\",\n                         \"&lt;td&gt;\", round(w$dem_score14,1),\"&lt;/td&gt;\",\n                         \"&lt;/tr&gt;\",\n                         \"&lt;tr&gt;\",\n                         \"&lt;td valign='top'&gt;Religión&lt;/td&gt;\",\n                         \"&lt;td&gt;\", w$religoin,\"&lt;/td&gt;\",\n                         \"&lt;/tr&gt;\",\n                         \"&lt;/table&gt;\")\n\n# Genera el gráfico\np &lt;- ggplot(w, \n            aes(x=lifeex_total, \n                y=dem_score14))+\n    geom_point_interactive(\n            aes(tooltip=tooltip_text))\n\n# Visualiza el gráfico\n# interactivo\ngirafe(ggobj = p)\n\n\n\n\n\n\n\n\n\nCliques\nLa segunda forma de interacción que veremos es a través de cliques. En este caso, el usuario puede hacer clic en un elemento del gráfico y ser redirigido a una página web. En el siguiente ejemplo, al hacer clic en un país, se abrirá una página de Wikipedia con información sobre el país.\nEn este caso, combinamos la instrucción javascriptde windows.open(), con la dirección de la página de Wikipedia del país. Para ello, creamos una nueva variable en el data.frame con el código javascript direccionando a la página web. Luego, en la geometría geom_point_interactive añadimos la instrucción onclick con el nombre de la variable click que contiene el código javascript.\n\n\nCode\n# Retira las comillas simples\n# del nombre de los países\nw$country &lt;- gsub(\"'\",\" \",w$country)\n\n# Crea un código para abrir la\n# página de wikipedia del país\nw$click &lt;- sprintf(\n              paste0('window.open(\"http://en.wikipedia.org/wiki/', \n                     w$country, \n                     '\")'))\n\n\n# Genera el gráfico\np &lt;- ggplot(w, \n            aes(x=lifeex_total, \n                y=dem_score14))+\n    geom_point_interactive(\n            aes(onclick=click,\n                tooltip=country))\n\n# Visualiza el gráfico\n# interactivo\ngirafe(ggobj = p)\n\n\n\n\n\n\n\n\nHover\nLa tercera forma de interacción es a través del hover, que se activa al pasar el cursor sobre un elemento del gráfico. En este caso, se puede mostrar información adicional sobre el elemento sin necesidad de hacer clic. En el código abajo, al pasar el cursor sobre un país, se cambiará el color de los países de un mismo continente y los demás se pondrán semitransparentes.\n\n\nCode\nlibrary(poliscidata)\n\nw &lt;- world\n\n# Crea un tooltip con algunos datos\n# del país\nw$tooltip_text &lt;- paste0(\"&lt;strong&gt;\", w$country, \"&lt;/strong&gt;&lt;br&gt;\",\n                         \"&lt;strong&gt;Esperanza de vida:&lt;/strong&gt; \",\n                         w$lifeex_total,\n                         \"&lt;br&gt;&lt;strong&gt;Democracia:&lt;/strong&gt; \",\n                         w$dem_score14)\n\n\nlibrary(ggthemes)\nlibrary(ggplot2)\nlibrary(ggiraph)\n\n# Capa de datos\np &lt;- ggplot(w)\n\n# Añade la capa de estética\np &lt;- p +\n   aes(x = lifeex_total, \n       y = dem_score14,\n       data_id=regionun)\n\n# Añade la capa geométrica interactiva\np &lt;- p + geom_point_interactive(\n              aes(tooltip = tooltip_text)\n              )\n\n# Visualiza el gráfico interactivo\nx &lt;- girafe(ggobj = p, \n            options = \n              list(\n                opts_hover_inv(css = \"opacity:0.1;\")\n              )\n            )\n\nx\n\n\n\n\n\n\n\n\nZoom\nLa cuarta forma de interacción es a través del zoom, que permite al usuario acercar o alejar una parte del gráfico. En el siguiente ejemplo, se muestra un gráfico de dispersión con la posibilidad de hacer zoom en una región específica del gráfico por medio de un botón que aparecerá en la parte superior derecha.\n\n\nCode\nlibrary(poliscidata)\n\nw &lt;- world\n\n# Crea un tooltip con algunos datos\n# del país\nw$tooltip_text &lt;- paste0(\"&lt;strong&gt;\", w$country, \"&lt;/strong&gt;&lt;br&gt;\",\n                         \"&lt;strong&gt;Esperanza de vida:&lt;/strong&gt; \",\n                         w$lifeex_total,\n                         \"&lt;br&gt;&lt;strong&gt;Democracia:&lt;/strong&gt; \",\n                         w$dem_score14)\n\n\nlibrary(ggthemes)\nlibrary(ggplot2)\nlibrary(ggiraph)\n\n# Capa de datos\np &lt;- ggplot(w)\n\n# Añade la capa de estética\np &lt;- p +\n   aes(x = lifeex_total, \n       y = dem_score14,\n       data_id=regionun)\n\n# Añade la capa geométrica interactiva\np &lt;- p + geom_point_interactive(\n              aes(tooltip = tooltip_text)\n              )\n\n# Visualiza el gráfico interactivo\nx &lt;- girafe(ggobj = p, \n            options = \n              list(\n                opts_hover_inv(css = \"opacity:0.1;\"),\n                opts_zoom(min=1, max=3)\n              )\n            )\n\nx"
  },
  {
    "objectID": "interactivo.html#paquetes-de-gráficos-interactivos",
    "href": "interactivo.html#paquetes-de-gráficos-interactivos",
    "title": "Interactividaden los gráficos",
    "section": "Paquetes de gráficos interactivos",
    "text": "Paquetes de gráficos interactivos\nEn esta sección mencionaremos algunos de los paquetes de gráficos interactivos con los que podéis crear diferentes formas de visualización de datos. No se trata de un recuento exhaustivo, sino de una selección de paquetes que consideramos útiles y fáciles de usar. También menciono el paquete tenet que desarrollo para el análisis de textos en R, pero que contiene una serie de gráficos interactivos.\n\nggiraph\nEl primer paquete que mencionaremos es ggiraph, que permite crear gráficos interactivos con la librería ggplot2. Este paquete es muy útil para crear gráficos con la misma sintaxis de ggplot2. Trabaja con geometrías interactivas, como geom_sf_interactive, geom_point_interactive, geom_bar_interactive, entre otras, que se comportan exactamente como sus contrapartes no interactivas, pero con la posibilidad de añadir interactividad.\nPara activar la interactividad, se debe añadir la función girafe() al final del gráfico. En el siguiente ejemplo, se muestra un mapa interactivo hecho con ggiraph. Ahí queda evidente la sintaxe de ggplot2 y la facilidad de añadir interactividad a un gráfico.\n\n\nCode\nlibrary(ggthemes)\nlibrary(ggplot2)\nlibrary(ggiraph)\n\n# Lee los datos de Carolina del Norte\nnc &lt;- sf::st_read(system.file(\"shape/nc.shp\", \n                              package = \"sf\"), \n                  quiet = TRUE)\n\n# Crea un gráfico interactivo, con tooltip,\n# hover y click\ngg &lt;- ggplot(nc) +\n  geom_sf_interactive(aes(fill = AREA, \n                          tooltip = NAME, \n                          data_id = NAME,\n                          onclick =  sprintf(\"window.open(\\\"http://en.wikipedia.org/wiki/%s_County,_North_Carolina\\\")\", NAME)))+\n  theme_map()+\n  theme(legend.position = \"none\")+\n  scale_fill_continuous_tableau(palette=\"Purple\")\n  \n# Genera la versión interactiva  \nx &lt;- girafe(ggobj = gg, \n            options = \n              list(\n                opts_hover(css = ''), \n                opts_hover_inv(css = \"opacity:0.1;\")\n    )\n  )\n\n# Visualiza el gráfico\nx\n\n\n\n\n\n\n\n\nplotly\nEl paquete plotly es otro paquete muy útil para crear gráficos interactivos en R. Como ggiraph, Este paquete permite crear gráficos interactivos con la misma sintaxis de ggplot2, pero con la posibilidad de añadir interactividad. Además, plotly permite crear gráficos 3D, mapas, gráficos de barras, gráficos de dispersión, entre otros.\nAbajo vemos un ejemplo de un gráfico de dispersión interactivo hecho con plotly. En este caso, se añade un tooltip con información de cada punto y se añade un efecto de zoom para acercar o alejar una parte del gráfico.\n\n\nCode\nlibrary(plotly)\nlibrary(ggplot2)\n\n# Capa de datos\np &lt;- ggplot(w)\n\n# Añade la capa de estética\np &lt;- p +\n   aes(x = lifeex_total, \n       y = dem_score14,\n       fill=regionun)\n\n# Añade la capa geométrica\np &lt;- p + geom_point(color=\"transparent\")\n\nggplotly(p)\n\n\n\n\n\n\n\n\nVisNetwork\nSe trata de una librería de gráficos de redes interactivos. Permite crear gráficos de redes con nodos y enlaces, y añadir interactividad a través de zoom, arrastrar y soltar, y otros efectos. Permite mucho control de la interactividad y es muy útil para visualizar redes complejas.\n\n\nNetworkD3\nEl paquete networkD3 es otra librería de gráficos de redes interactivos. Basada en D3.js, permite crear gráficos de redes con nodos y enlaces, y añadir interactividad a través de zoom, arrastrar y soltar, y otros efectos. Permite mucho control de la interactividad y es muy útil para visualizar redes complejas.\n\n\nleaflet\nEl paquete leaflet es una librería de mapas interactivos. Permite crear mapas con diferentes capas, añadir marcadores, polígonos, líneas, y añadir interactividad a través de zoom, arrastrar y soltar, y otros efectos. Es muy útil para visualizar datos geoespaciales.\n\n\ntmap\nLa librería tmap es otra librería de mapas interactivos. Consiste en una alternativa eficiente a leaflet para la visualización de datos geoespaciales.\n\n\ntenet\nEl paquete tenet es un paquete que he desarrollado para el análisis de textos en R. Contiene una serie de gráficos interactivos que permiten explorar los textos de una manera más profunda. A continuación, se muestran algunos ejemplos de gráficos.\nforceDirecterTree\nEste gráfico muestra un árbol de palabras clave con un diseño de fuerza directa. Es útil para visualizar la relación entre las palabras clave y su frecuencia en un texto.\n\n\nCode\n# Carga los paquetes\nlibrary(tenet)\nlibrary(quanteda)\n\n# Crea un objeto corpus con\n# los discursos de investidura\n# de los presidentes españoles\ncp &lt;- corpus(spa.inaugural)\n    \n# Carga el diccionario de palabras\ndic &lt;- dic.pol.es\n\n# Cuenta la frecuencia\nxx &lt;- countKeywords(cp, \n                    dic.pol.es, \n                    rel.freq = F, \n                    group.var = \"President\",\n                    quiet=T)\n\n# Agrega los resultados    \nxx &lt;- aggregate(list(frequency=xx$frequency), \n                by=list(groups=xx$groups, \n                        level1=xx$level1,\n                        level2=xx$level2), \n                sum, na.rm=T)\n\n# Crea el gráfico\nforceDirectedTree(data = xx, \n                  height = 500, \n                  max.radius = 40,\n                  value_col = \"frequency\")\n\n\n\n\n\n\nplotVoronoiTree\nComo el gráfico anterior, este gráfico muestra un árbol de palabras clave, pero con un diseño de Voronoi. Se trata de una forma de treemap, pero con un diseño distinto.\n\n\nCode\n# Con los mismos datos, genera\n# un diagrama de árbol de voronoi\nplotVoronoiTree(xx, \n                value_col = \"frequency\")\n\n\n\n\n\n\nplotGrid\nLa función plotGrid permite crear una cuadrícula de gráficos interactivos. En el siguiente ejemplo, se muestra cómo crear una cuadrícula de gráficos de dispersión interactivos con plotGrid.\n\n\nCode\n# Carga los paquetes\nlibrary(tenet)\nlibrary(quanteda)\n\n# Crea un corpus con los \n# discursos de investidura\n# de los presidentes españoles\ncp &lt;- corpus(spa.inaugural)\n\n# Cuenta las palabras clave\n# del diccionario dic.pol.es \n# que he preparado como ejemplo\nxz &lt;- countKeywords(cp, \n                    dic.pol.es, \n                    rel.freq = T, \n                    group.var = \"President\",\n                    quietly = TRUE)\n\n# Agrega las frecuencias por grupo\n# del diccionario\nxx &lt;- aggregate(list(frequency=xz$frequency), \n                by=list(groups=xz$groups,\n                        level1=xz$level1,\n                        level2=xz$level2), \n                sum, na.rm=T)\n\n# Elimina los valores no\n# encontrados\nxx &lt;- xx[xx$frequency&gt;0,]\n\n# Ordena los valores por \n# level1 y level2\nxx &lt;- xx[order(xx$level1, \n               xx$level2),]\n\nxx$level2 &lt;- factor(xx$level2, \n                    levels=unique(xx$level2))\n\n\n# Crea el gráfico (estandarizado)\nplotGrid(xx, \n         x=\"groups\", \n         y=\"level2\", \n         size=\"frequency\",\n         palette=pal$cat.cartocolor.bold.11,\n         color=\"level1\", \n         standardize = TRUE,\n         interactive=TRUE,\n         height_svg = 9,\n         width_svg = 8,\n         leg.size = \"Media (%)\",\n         leg.color = \"Categoría\"\n         )\n\n\n\n\n\n\nplotChord\nLa función plotChord permite crear un gráfico de cuerdas interactivos. En el siguiente ejemplo, se muestra cómo crear un gráfico de cuerdas con plotChord.\n\n\nCode\n# Crea un corpus con los\n# discursos de investidura\ncp &lt;- quanteda::corpus(spa.inaugural)\n\n# Carga el diccionario\ndic &lt;- dic.pol.es\n\n# Genera los datos de las \n# coincidencias entre los términos\n# del diccionario en el corpus\nd &lt;- matchCodes(cp, dic, quietly = T)\n\n# Crea el gráfico de cordas\nplotChord(d, \n          from=\"term1\", \n          to=\"term2\", \n          value=\"value\")\n\n\n\n\n\n\nplotKeyness\nLa función plotKeyness permite crear un gráfico de keyness interactivos. Se trata de entender cuáles son las palabras más destacadas de un texto de referencia con relación a un corpus de otros textos.\n\n\nCode\n# Selecciona solo la\n# sesión 124 del corpus\n# de debates legislativos de\n# la XIV legislatura\n# \"Ley del Sí es Sí\"\nspa &lt;- spa.sessions[spa.sessions$session.number==124,]\n\n# Agrega los debates por partido\nre &lt;- aggregate(list(text=spa$speech.text), \n                by=list(rep.party=spa$rep.party),\n                FUN=paste, \n                collapse=\"\\n\")\n\n# Crea un corpus con los resultados\ncp &lt;- corpus(re)\n\n# Agrupa por partido\nci &lt;- corpus_group(cp, groups = rep.party)\n\n# Visualiza el gráfico\nplotKeyness(corpus = ci,\n            ref.cat = \"Vox\", \n            title = \"\")\n\n\n\n\n\n\nplotSpike\nLa función plotSpike permite crear un gráfico de dispersión léxica interactivo.\n\n\nCode\n# Agrega los debates por sesión\nag &lt;- aggregate(list(text=spa.sessions$speech.text),\n                by=list(session_number=spa.sessions$session.number),\n                paste, \n                collapse=\"\\n\")\n\n# Añade ceros para ordenar de modo correcto\n# las sesiones por números\nag$session_number[nchar(ag$session_number)==1] &lt;- \npaste0(\"00\", ag$session_number[nchar(ag$session_number)==1])\n\nag$session_number[nchar(ag$session_number)==2] &lt;- \npaste0(\"0\", ag$session_number[nchar(ag$session_number)==2])\n\n# Convierte los resultados en un corpus\nlibrary(quanteda)\ncp &lt;- corpus(ag, \n             docid_field = \"session_number\")\n\n\n# Crea un diccionario con los temas\n# territorio, género y memoria\ndic &lt;- dictionary(\n  list(Territorio=c(\"federal\",\"estatuto\",\"nacionalismo\",\n                    \"regionalismo\",\"cataluña\",\"lengua\"),\n       Género=c(\"violencia machista\",\"mujer\",\"violencia sexual\",\n                \"aborto\",\"reproductivo\",\"género\",\"\\\\btrans\\\\b\"),\n       Memoria=c(\"memoria\",\"franquismo\",\"franquista\",\"dictadura\")))\n\n\n# Busca la posición de cada palabra\n# en las sesiones\nter &lt;- filterWords(cp, dic)\n\n# Define los nombres de las sesiones.\nter$name &lt;- paste0(\"Session \", ter$name)\n\n# Crea el gráfico\nplotSpike(data=ter, \n          legend.title=\"Tema:\",\n          title=\"Congreso de los Diputados - XIV Legislatura (2019-2023)\",\n          subtitle=\"Territorio, género y memoria en los debates de los plenos.\")\n\n\n\n\n\n\nplotSankey\nLa función plotSankey permite crear un gráfico interactivo de Sankey o de aluvión. Resulta excelente para acompañar flujos o transiciones.\n\n\nCode\n# Crea un corpus con los\n# discursos de investidura\ncp &lt;- corpus(spa.inaugural)\n\n# Carga el diccionario\ndic &lt;- dic.pol.es\n\n# Cuenta las palabras clave\nxx &lt;- countKeywords(cp, \n                    dic.pol.es, \n                    rel.freq = F, \n                    group.var = \"President\",\n                    quiet=T)\n\n# Agrega las frecuencias por grupo\nxx &lt;- aggregate(list(frequency=xx$frequency), \n                by=list(groups=xx$groups, \n                        level1=xx$level1,\n                        level2=xx$level2), \n                sum, na.rm=T)\n          \n# Crea el gráfico\nplotSankey(data=xx,\n           from=\"groups\",\n           to=\"level1\",\n           value=\"frequency\")\n\n\n\n\n\n\nplotStream\nLa función plotStream permite crear un gráfico de flujo interactivo. Es ideal para visualizar la evolución de las palabras clave en un corpus a lo largo del tiempo.\n\n\nCode\n# Selecciona los diputaos más  \n# representativos de Vox\nag &lt;- spa.sessions[\n        spa.sessions$rep.name%in%\n          c(\"Abascal Conde, Santiago\",\n            \"Espinosa de los Monteros de Simón, Iván\",\n            \"Olona Choclán, Macarena\",                \n            \"Ortega Smith-Molina, Francisco Javier\"),]\n\n# Crea una variable de mes para \n# facilitar la visualización de los datos\nag$month &lt;- substr(ag$session.date,3,7)\n\n# Agrega las palabras por diputado\n# y mes\nag &lt;- aggregate(\n    list(words=ag$speech.tokens), \n      by=list(\n        month=ag$month, \n        rep=ag$rep.name, \n        party=ag$rep.party), \n      sum, \n      na.rm=T)\n\n# Ordena los datos por mes\nag &lt;- ag[order(ag$month),]\n\n# Crea el gráfico\nplotStream(ag, \n           x=\"month\", \n           y=\"words\", \n           group = \"rep\")"
  },
  {
    "objectID": "personalizacion.html",
    "href": "personalizacion.html",
    "title": "AparienciaPersonalización y temas",
    "section": "",
    "text": "En esta parte del curso, aprenderemos a personalizar los gráficos y hacerlos más atractivos. Como en las partes anteriores, utilizaremos la gramática de los gráficos incorporada en la librería ggplot2 para hacerlo. El propósito consiste en cambiar diversos elementos relacionados al aspecto y la presentación de los gráficos que facilita su interpretación y que ayudan mucho en la comunicación de los resultados."
  },
  {
    "objectID": "personalizacion.html#introducción",
    "href": "personalizacion.html#introducción",
    "title": "AparienciaPersonalización y temas",
    "section": "",
    "text": "En esta parte del curso, aprenderemos a personalizar los gráficos y hacerlos más atractivos. Como en las partes anteriores, utilizaremos la gramática de los gráficos incorporada en la librería ggplot2 para hacerlo. El propósito consiste en cambiar diversos elementos relacionados al aspecto y la presentación de los gráficos que facilita su interpretación y que ayudan mucho en la comunicación de los resultados."
  },
  {
    "objectID": "personalizacion.html#personalización-de-los-gráficos",
    "href": "personalizacion.html#personalización-de-los-gráficos",
    "title": "AparienciaPersonalización y temas",
    "section": "Personalización de los gráficos",
    "text": "Personalización de los gráficos"
  },
  {
    "objectID": "personalizacion.html#las-variables-básicas-color-forma-y-tamaño",
    "href": "personalizacion.html#las-variables-básicas-color-forma-y-tamaño",
    "title": "AparienciaPersonalización y temas",
    "section": "Las variables básicas: color, forma y tamaño",
    "text": "Las variables básicas: color, forma y tamaño\n\nColor\nEl elemento más evidente en la personalización de los gráficos es el color. En ggplot2, los colores se pueden modificar de diversas maneras. Por ejemplo, se pueden cambiar los colores de las líneas, los puntos, las barras, los textos, los fondos, entre otros.\nAdemás, los colores no van solos, sino que se combinan en paletas o escalas de colores. Las paletas de colores son conjuntos de colores que se combinan de manera armoniosa y que se utilizan para representar diferentes categorías o variables en un gráfico. Existen tres tipos fundamentales de escala de colores:\n\nsequencial - se utilizan para representar variables numéricas contínuas que van de un valor bajo a un valor alto. Por ejemplo, la población, el porcentaje de voto o el PIB per cápita.\n\n\n\n\n\n\nLa figura arriba muestra las paletas de colores secuenciales disponibles en el paquete RColorBrewer que incorpora las escalas desarrolladas por Cynthia Brewer y que se pueden explorar en ColorBrewer. Como podemos ver, los colores van de los tonos más claros a los más oscuros. En general, los colores más claros representan valores bajos y los colores más oscuros representan valores altos.\n\ndivergente - se utilizan para representar variables numéricas que tienen un punto medio o un valor de referencia. Por ejemplo, la diferencia entre dos valores, la temperatura, el cambio porcentual o la correlación.\n\n\n\n\n\n\nAhora, el punto medio de la escala tiene su centro en un color neutro -como el blanco, el gris o el amarillo- y dos escalas contrarias que marcan posiciones antagónicas. Los colores de cada una de ellas se hace más intensos a medida que se alejan del centro.\n\ncualitativo - se utilizan para representar variables categóricas o nominales. Por ejemplo, los países, los partidos políticos, los tipos de productos o los colores.\n\n\n\n\n\n\nTales escalas permiten representar valores que no poseen un orden o una jerarquía. Por lo tanto, los colores se utilizan para diferenciar las categorías y no para representar valores numéricos. De ese modo, no hay un patrón jerárquico ascendiente, descendiente o centrífugo. El objetivo consiste en diferenciar al máximo las categorías entre sí, sin establecer una relación de jerarquía entre ellas.\nDe ese modo, debemos emplear diferentes escalas de color de acuerdo con el tipo de información que disponemos. Por ejemplo, si queremos representar la evolución de una variable a lo largo del tiempo, es mejor utilizar una escala de color secuencial. Si queremos representar la diferencia entre dos valores, es mejor utilizar una escala de color divergente. Si queremos representar diferentes categorías, es mejor utilizar una escala de color cualitativa.\nAdemás, en un gráfico de ggplot2 hay dos elementos que se somente a la manipulación del color: el fill y el color. El fill se utiliza para rellenar áreas -de las barras, líneas, puntos, polígonos, entre otros-. El color, por otra parte, se utiliza para cambiar el color de los bordes.\nLas funciones relacionadas a las escalas de color, por lo tanto, respetan eso dos ejes: el tipo de escala (secuencial, divergente o cualitativa) y si se trata de color (color) o relleno (fill).\nEl gráfico de cajas (boxplot) abajo es el mismo de la sección anterior. No obstante, ahora añadimos un elemento más al gráfico: la escala de color scale_color_brewer y seleccionamos la paleta cualitativa llamada Dark2. Aprovechamos también para cambiar el título de la leyenda para “Región” (name=“Región”). Vemos que los colores de relleno de las cajas cambian para corresponder a la nueva escala de color.\nEl gráfico original:\n\n\nCode\n# carga los datos y\n# el paquete ggplot2\nlibrary(poliscidata)\nlibrary(ggplot2)\n\n# Datos sobre los estados\n# de EE. UU.\nd &lt;- states \n\n# Crea el gráfico de cajas (boxplot)\np &lt;- ggplot(data = d,\n            mapping = aes(x=unemploy, \n                          y=region,\n                          color=region,\n                          group=region)) + \n        geom_boxplot(width=0.1)\n\np\n\n\n\n\n\n\nEl gráfico con la nueva escala:\n\n\nCode\np &lt;- p + scale_color_brewer(name=\"Región\",\n                           palette=\"Dark2\")\n\np\n\n\n\n\n\n\nAhora, emplearemos el atributo fill para cambiar el color de relleno. Para ello, en lugar de emplear color en la capa de estética, cambiaremos para fill y a scale_fill_brewer. Veamos la diferencia en un nuevo gráfico:\n\n\nCode\n# carga los datos y\n# el paquete ggplot2\nlibrary(poliscidata)\nlibrary(ggplot2)\n\n# Datos sobre los estados\n# de EE. UU.\nd &lt;- states \n\n# Crea el gráfico de cajas (boxplot)\np &lt;- ggplot(data = d,\n            mapping = aes(x=unemploy, \n                          y=region,\n                          fill=region,\n                          group=region)) + \n        geom_boxplot(width=0.1)\n\np\n\n\n\n\n\nCode\np &lt;- p + scale_color_brewer(name=\"Región\", \n                            palette=\"Dark2\")\n\np\n\n\n\n\n\nY si quiero elegir los colores, ¿qué hago? Sencillo, debes elegir la escala de color o relleno manual:\n\n\nCode\np &lt;- p + scale_fill_manual(values=c(\"red3\",\n                                     \"steelblue\",\n                                     \"darkgreen\",\n                                     \"purple\"))\n\np\n\n\n\n\n\n\n\nFormas y símbolos\nOtro elemento visual que podemos adaptar a nuestros intereses son las formas o los símbolos. Por ejemplo, en algunas publicaciones, piden a los autores que generen gráficos en blanco y negro o escala de grises. En esos casos, toca emplear otros recursos visuales. En un diagrama de dispersión podemos querer emplear distintos tipos de símbolo (círculos, cuadrados, triángulos o rombos, por ejemplo) para diferencias entre categorías.\nPara ello, empleamos el parámetro shape en la capa estética para definir que a una variable determinada corresponderá un símbolo único. Reutilizaremos el código para el gráfico de dispersión de la sección anterior para establecer el continente (regionun) como variable que determinará la forma de los puntos en el gráfico:\n\n\nCode\nlibrary(poliscidata)\n\n# Empleamos los datos de paises\n# y excluimos los casos en los\n# que no hay información sobre\n# la religión\nw &lt;- world\nw &lt;- w[! is.na(w$religoin),]\n\nlibrary(ggplot2)\n\n# Crea el gráfico\np &lt;- ggplot(w)\n\n# Capa estética con la religión\n# como color\np &lt;- p + aes(x=hdi, \n            y=dem_score14,\n            shape=regionun)\n\n# Capa geométrica\np &lt;- p + geom_point()\n\n# Visualiza el gráfico\np\n\n\n\n\n\n\n\nTamaño\nFinalmente, el tamaño representa la tercera variable visual que nos ocuparemos aquí. El parámetro sizepermite escalonar las observaciones del gráfico para que se destaquen en función de una variable numérica. En el siguiente gráfico de dispersión, empleamos el tamaño de los puntos para representar la población total de los países.\n\n\nCode\nlibrary(ggplot2)\n\n# Crea el gráfico\np &lt;- ggplot(w)\n\n# Capa estética con la religión\n# como color\np &lt;- p + aes(x=hdi, \n            y=dem_score14,\n            size=pop_total)\n\n# Capa geométrica\np &lt;- p + geom_point()\n\n# Visualiza el gráfico\np"
  },
  {
    "objectID": "personalizacion.html#texto",
    "href": "personalizacion.html#texto",
    "title": "AparienciaPersonalización y temas",
    "section": "Texto",
    "text": "Texto\nLa gran mayoría de los gráficos incluye un conjunto de elementos de texto: títulos, ejes, etiquetas, leyendas, entre otros. Una buena elección de título, su tamaño y posición, por ejemplo, puede hacer que el gráfico sea más fácil de entender. En gráficos científicos, resulta obligatorio añadir información las fuentes de los datos. El tipo de fuente también puede ser manipulado para mejorar la legibilidad del gráfico o para atraer la atención. Por esa razón, en este apartado veremos cómo manipular los elementos textuales de los gráficos. Nos concentraremos en tres elementos concretos: las fuentes o tipografías, los títulos y las etiquetas.\n\nFuentes\nLas fuentes tipográficas pueden personalizar un gráfico y ayudar a convertirlo en algo más atractivo. En ggplot2, la función theme permite manipular los elementos textuales de un gráfico. Para cambiar la fuente de un gráfico, empleamos el atributo family en la función element_text. No obstante, muchas geometrías de ggplot2 tienen un atributo family que permite cambiar la fuente de un elemento específico.\nA continuación, mostramos cómo cambiar la fuente de un gráfico de dispersión con dos fuentes descargadas de Google Fonts: Griffy y Mr Bedfort. Para ello, empleamos la función theme y element_text para cambiar la fuente de los elementos textuales del gráfico:\n\n\nCode\np + theme(text=element_text(family=\"Griffy\",\n                            size=20,\n                            face=\"bold\"))\n\n\n\n\n\nCode\np + theme(text=element_text(family=\"Mr Bedfort\", \n                            size=16))\n\n\n\n\n\n\n\nTítulos\n¿Qué hacemos con un gráfico sin títulos? Pues, no sabríamos qué estamos viendo. Los títulos son esenciales para la interpretación de los gráficos. Los ejes también deben estar bien etiquetados para que el lector pueda entender qué está viendo.\nEn ggplot2, los títulos se pueden añadir a través de la función labs. Esta función permite añadir títulos a los ejes, la leyenda y el gráfico en general. A continuación, mostramos cómo añadir un título al gráfico de dispersión de la sección anterior:\n\n\nCode\np &lt;- p + labs(title=\"Índice de Desarrollo Humano vs. Democracia\",\n               subtitle= \"Países del mundo\",\n               x=\"Índice de Desarrollo Humano\",\n               y=\"Democracia\",\n               caption=\"Fuente: paquete poliscidata.\",\n               size=\"Población\")\n\np\n\n\n\n\n\nUna curiosidad. Si os habéis fijado bien, hemos añadido un parámetro size=“Población” a los textos. Este parámetro permite añadir un título a la leyenda de tamaño del gráfico. Si hubiéramos añadido una variable de color, podríamos añadir el título de la leyenda de color con el parámetro color=“Religión”. Hagámoslo:\n\n\nCode\n# Añade la religión como color en\n# la capa de estética\np &lt;- p + aes(color=religoin)\n\n# Añade el título de la leyenda de color\np &lt;- p + labs(color=\"Religión\")\n\n# Muestra el gráfico\np\n\n\n\n\n\nComo podéis ver, lo que había hecho antes se quedó y he ido añadiendo cosas. Esa es una de las principales ventajas de ggplot2: la capacidad de añadir elementos a un gráfico de forma sencilla y rápida.\n\n\nEtiquetas de valores\nEn algunos casos, es necesario añadir etiquetas a los valores de un gráfico. Por ejemplo, en un gráfico de dispersión, puede ser útil añadir el nombre de los países a los puntos. Para ello, empleamos la función geom_text o geom_text_repel del paquete ggrepel. La función geom_text añade etiquetas a los puntos del gráfico, mientras que geom_text_repel añade etiquetas que no se solapan entre sí. A continuación, mostramos cómo añadir etiquetas a los puntos del gráfico de dispersión de la sección anterior:\n\n\nCode\np &lt;- ggplot(d, aes(x=abort_rate08, \n                   y=obama08))+\n        geom_point()\n\n\np + geom_text(aes(label=stateid), \n              hjust=0, \n              vjust=0)\n\n\n\n\n\nEl próximo gráfico muestra cómo utilizar la función geom_text_repel para añadir etiquetas a los puntos del gráfico de dispersión. En este caso, las etiquetas no se solapan entre sí:\n\n\nCode\n# Carga el paquete\nlibrary(ggrepel)\n\n# Añade las etiquetas\np + geom_text_repel(\n        aes(label=stateid), \n            hjust=0, \n            vjust=0,\n            check_overlap = TRUE)"
  },
  {
    "objectID": "personalizacion.html#temas",
    "href": "personalizacion.html#temas",
    "title": "AparienciaPersonalización y temas",
    "section": "Temas",
    "text": "Temas\nLos temas son una forma de personalizar la apariencia de un gráfico. Tienen una enorme utilidad, porque permiten cambiar la apariencia de un gráfico de forma rápida y sencilla y, además, garantizar un estilo único para los gráficos de un proyecto. Por ejemplo, si estoy escribiendo la tesis doctoral y quiero garantizar que todos mis gráficos tengan la misma apariencia, puedo crear un tema personalizado y aplicarlo a todos los gráficos. Este trabajo sería mucho más laborioso sin el uso de los temas.\nEn ggplot2, los temas permiten cambiar la apariencia de los elementos del gráfico, como el fondo, los ejes, las etiquetas, entre otros. La función theme permite cambiar el tema de un gráfico. Existe una cantidad enorme de temas predefinidos en ggplot2 o en paquetes adicionales como ggthemes o tvthemes, pero también es posible crear un tema personalizado.\n\nTemas predefinidos\nEn paquete ggplot2 posee una serie de temas predefinidos que permiten cambiar la apariencia de un gráfico. Son conjunto de instrucciones que definen la apariencia de los elementos de un gráfico, como la fuente, los colores, el fondo, los ejes, entre otros.El código abajo muestra cómo cambiar el tema de un gráfico de dispersión a un tema predefinido de ggplot2:\n\n\nCode\np &lt;- ggplot(d, aes(x=abort_rate08, \n                   y=obama08))+\n        geom_point()+\n        labs(title=\"Aborto y voto en Obama\",\n             subtitle=\"Tasa de aborto y voto en Obama en los estados de EE. UU. en 2008.\",\n             x=\"Tasa de aborto\",\n             y=\"Votos para Obama\",\n             caption=\"Fuente: paquete poliscidata.\")\n\np &lt;- p + theme_classic()\n\np + geom_text_repel(\n        aes(label=stateid), \n            hjust=0, \n            vjust=0,\n            check_overlap = TRUE)\n\n\n\n\n\nSi comparamos con la versión anterior del mismo gráfico, vemos que hay una mejoría significativa en la presentación. El tema theme_classic es uno de los temas predefinidos de ggplot2. Otros temas predefinidos son theme_minimal, theme_light, theme_dark, theme_bw, entre otros. No hay colores y muy pocos elementos decorativos, algo que convierte el gráfico en particularmente atractivo para visualizar los patrones.\nPodemos utilizar el tema de los Simpsons del paquete tvthemes para cambiar la apariencia de un gráfico.\n\n\nCode\nlibrary(tvthemes)\n\np + theme_simpsons()\n\n\n\n\n\n\n\nPersonalización de los temas\nSi los temas predefinidos no son suficientes, es posible personalizar un tema detalle por detalle. Para ello, se utiliza la función theme y se añaden los elementos que se desean personalizar. Tomemos como ejemplo el ridge plot que creamos anteriormente.\n\n\nCode\n# Carga los paquetes\nlibrary(ggplot2)\nlibrary(ggridges)\n\n# Crea el gráfico\n# con la relación entre \n# fraccionamiento étnico y religión\np &lt;- ggplot(w,\n            aes(x=frac_eth, \n                y=religoin, \n                fill=religoin))\n\n# Añade la capa de geometría\np &lt;- p + geom_density_ridges()\n\n# Visualiza los resultados\np\n\n\n\n\n\nCambiemos una serie de elementos para hacerlo más atractivo:\n\n\nCode\n# Añadimos un título y los nombres de los ejes\np &lt;- p + labs(title=\"**Fraccionamiento étnico y religión**\",\n              x=\"Fraccionamiento étnico\",\n              y=\"\",\n              caption=\"Fuente: paquete poliscidata.\",\n              fill=\"Religión\")\n\n# Cargamos el paquete ggtext\n# que permite personalizar la \n# apariencia de los textos\nlibrary(ggtext)\n\n# Personalizamos la aparencia\np &lt;- p + theme(text=element_text(family=\"Kranky\"), # Fuente\n        legend.position = \"bottom\", # Leyenda abajo\n        plot.title = element_markdown(size=20), # Título en markdown\n        panel.background = element_rect(fill=\"white\")\n)\n\n# Cambiamos la escala de color\n# para la de juego de tronos\n# del paquete tvthemes\np + scale_fill_westeros()"
  },
  {
    "objectID": "recursos.html",
    "href": "recursos.html",
    "title": "Recursos útiles para la visualización de datos",
    "section": "",
    "text": "Existen muchos proyectos que nos ayudan a crear visualizaciones de datos hermosas y efectivas. Algunos de ellos son recursos extremadamente útiles y repositorios de código disponibles para nosotros.\n\n\nLa página web Dataviz inspiration provee hermosos gráficos e historias de datos. Estos ejemplos curados nos ayudan a visualizar el potencial completo de la visualización de datos y a obtener algunas ideas que podemos usar para nuestros propios análisis. Uno de los ejemplos sobresalientes es Ailing Brussels, un análisis de la desigualdad en Bruselas por la revista belga de investigación Medór. El proyecto emplea mapas, gráficos, animación y una narrativa convincente a través de imágenes, textos y videos para describir la división espacial de Bruselas en cuanto a oportunidades y niveles de precariedad.\n\n\n\n\n\nVisite ambos sitios, Dataviz Inspirations y Ailing Brussels, para tener una maravillosa experiencia de las posibilidades de la visualización de datos.\n\n\n\nEl segundo recurso es el Proyecto Data to Viz. Es el resultado de un gran esfuerzo de sistematización. Yan Holtz, el creador, organizó gráficos según el tipo de datos o el tipo de análisis. Cada gráfico tiene su propia página explicando cómo y en qué ocasión se debe usar o evitar. También proporciona acceso a R Graph Gallery con código detallado que muestra cómo replicarlo en R.\n\n\n\n\n\n\n\n\nComo se mencionó anteriormente, esta página web es un repositorio que contiene código para que los usuarios reproduzcan muchos tipos diferentes de gráficos en R. ¿Cómo puedo hacer un gráfico de dispersión en R? Mire la galería y lo descubrirá. ¿Y un gráfico de barras? Lo mismo. Este es un lugar obligatorio para buscar cuando se aprende visualización de datos."
  },
  {
    "objectID": "recursos.html#introducción",
    "href": "recursos.html#introducción",
    "title": "Recursos útiles para la visualización de datos",
    "section": "",
    "text": "Existen muchos proyectos que nos ayudan a crear visualizaciones de datos hermosas y efectivas. Algunos de ellos son recursos extremadamente útiles y repositorios de código disponibles para nosotros.\n\n\nLa página web Dataviz inspiration provee hermosos gráficos e historias de datos. Estos ejemplos curados nos ayudan a visualizar el potencial completo de la visualización de datos y a obtener algunas ideas que podemos usar para nuestros propios análisis. Uno de los ejemplos sobresalientes es Ailing Brussels, un análisis de la desigualdad en Bruselas por la revista belga de investigación Medór. El proyecto emplea mapas, gráficos, animación y una narrativa convincente a través de imágenes, textos y videos para describir la división espacial de Bruselas en cuanto a oportunidades y niveles de precariedad.\n\n\n\n\n\nVisite ambos sitios, Dataviz Inspirations y Ailing Brussels, para tener una maravillosa experiencia de las posibilidades de la visualización de datos.\n\n\n\nEl segundo recurso es el Proyecto Data to Viz. Es el resultado de un gran esfuerzo de sistematización. Yan Holtz, el creador, organizó gráficos según el tipo de datos o el tipo de análisis. Cada gráfico tiene su propia página explicando cómo y en qué ocasión se debe usar o evitar. También proporciona acceso a R Graph Gallery con código detallado que muestra cómo replicarlo en R.\n\n\n\n\n\n\n\n\nComo se mencionó anteriormente, esta página web es un repositorio que contiene código para que los usuarios reproduzcan muchos tipos diferentes de gráficos en R. ¿Cómo puedo hacer un gráfico de dispersión en R? Mire la galería y lo descubrirá. ¿Y un gráfico de barras? Lo mismo. Este es un lugar obligatorio para buscar cuando se aprende visualización de datos."
  },
  {
    "objectID": "recursos.html#proyectos-hermosos",
    "href": "recursos.html#proyectos-hermosos",
    "title": "Recursos útiles para la visualización de datos",
    "section": "Proyectos hermosos",
    "text": "Proyectos hermosos\nEn esta sección, presentamos algunos proyectos que nos inspiran y nos muestran cómo la visualización de datos puede ser hermosa y efectiva.\n\nDear Data\nSe trata de un proyecto de dos diseñadoras, Giorgia Lupi y Stefanie Posavec, que consiste en enviar postales semanales con datos personales dibujados a mano. Cada semana, durante un año, las dos diseñadoras recopilaron datos sobre sus vidas cotidianas y los representaron en postales. El proyecto resultante es una colección de visualizaciones de datos dibujadas a mano que revelan la belleza de los datos y la creatividad de las diseñadoras. El proyecto también se convirtió en un libro, Dear Data, que recopila las postales y las visualizaciones de datos.\nUn breve video explicando el proyecto:\n\nLa metodología empleada explicada con más detalle:\n\n\n\n\nEspaña vive en pisos (El Diario.es)\nEste proyecto de El Diario.es es un ejemplo de cómo la visualización de datos puede ser utilizada para contar historias complejas. El proyecto visualiza la distribución de la población en España y cómo la mayoría de la gente vive en pisos. La visualización combina mapas, gráficos y narrativa para contar la historia de cómo la mayoría de la gente en España vive en pisos y cómo esto afecta a la calidad de vida y la desigualdad en el país.\nNo se trata de la única visualización premiada. A día de hoy, el periódico posee el equipo de periodismo de datos más destacado de España y uno de los más reconocidos a nivel internacional.\n\n\n\n\n\n\n\nEl Atlas de los ODS\nEl Atlas de los Objetivos de Desarrollo Sostenible (ODS) es un proyecto de la División de Datos del Banco Mundial que visualiza los datos de los ODS en un formato interactivo y accesible. El Atlas proporciona visualizaciones de datos sobre los 17 ODS y los 169 objetivos específicos de los ODS. Los datos se presentan en mapas, gráficos y tablas interactivas que permiten a los usuarios explorar los datos y comparar los indicadores de los ODS en diferentes países y regiones. El Atlas es una herramienta valiosa para los responsables de la toma de decisiones, los investigadores y el público en general que deseen comprender mejor los desafíos y las oportunidades relacionados con los ODS.\n\n\n\n\n\n\n\nPoppy field\nValentina D’Fillipo creó una visualización para conmemorar el centenario de la Primera Guerra Mundial. La visualización muestra la cantidad de soldados que murieron en las guerras ocurridas durante el período comprendido entre 1914 y 2014, representados por amapolas. La visualización es interactiva y permite a los usuarios explorar la cantidad de soldados que murieron en cada país y en cada año en las distintas guerras. La visualización es hermosa y efectiva, y nos recuerda la importancia de la visualización de datos para contar historias y evitar el olvido de eventos históricos importantes.\n\n\n\n\n\n\n\nVisual Cinnamon\nVisual Cinnamon es la página personal de la diseñadora visual Nadieh Bremer. Se trata de una fuente de inspiración para cualquier persona interesada en la visualización de datos. Nadieh es conocida por su estilo único y su habilidad para combinar datos y diseño de una manera hermosa y efectiva. Su portafolio incluye visualizaciones de datos sobre temas como la música, la astronomía y la historia.\nAlgunos ejemplos de su trabajo que me gustan particularmente:\n\nPatrimonio cultural intangible (UNESCO)\nSe trata de una visualización interactiva que muestra el patrimonio cultural intangible de la UNESCO. Incorpora diversos tipos de gráfico y nos permite sacar ideas de qué podemos hacer con diferentes tipos de dato.\n\n\n\n\n\n\n\n¿Por qué los gatos y perros…? (Google)\nEn esta visualización, Nadieh explora las preguntas más comunes sobre gatos y perros en Google. Nos recuerda la estructura jerárquica del lenguaje y cómo podemos representar las alternativas variantes de forma visualmente impactante y efectiva."
  },
  {
    "objectID": "tipos.html",
    "href": "tipos.html",
    "title": "Tiposde gráfico",
    "section": "",
    "text": "En esta parte del curso examinaremos algunos de los tipos más comunes de gráfico. Los organizaremos según el tipo de análisis que se desea realizar con ellos. Por ejemplo, si queremos saber si una variable cuantitativa afecta otra igual, realizamos un gráfico de dispersión o un correlograma. si el objetivo es saber la frecuencia de una variable categórica, un gráfico de barras puede ser la mejor opción."
  },
  {
    "objectID": "tipos.html#introducción",
    "href": "tipos.html#introducción",
    "title": "Tiposde gráfico",
    "section": "",
    "text": "En esta parte del curso examinaremos algunos de los tipos más comunes de gráfico. Los organizaremos según el tipo de análisis que se desea realizar con ellos. Por ejemplo, si queremos saber si una variable cuantitativa afecta otra igual, realizamos un gráfico de dispersión o un correlograma. si el objetivo es saber la frecuencia de una variable categórica, un gráfico de barras puede ser la mejor opción."
  },
  {
    "objectID": "tipos.html#tipos-de-dato-y-tipos-de-gráficos",
    "href": "tipos.html#tipos-de-dato-y-tipos-de-gráficos",
    "title": "Tiposde gráfico",
    "section": "Tipos de dato y tipos de gráficos",
    "text": "Tipos de dato y tipos de gráficos\nCada tipo de gráfico suele corresponder a un tipo de dato o a una combinación entre tipos de dato. Por esa razón, resulta útil conocer la clasificación de los gráficos según los diferentes tipos de información para sacar los mejores resultados.\nLa página from Data to Viz resulta muy útil, pues ofrece una doble clasificación de los datos: por tipo de dato y el tipo de representación que se desea realizar. Recomiendo fuertemente que la estudiéis con detenimiento para tener una idea general de qué opciones tenéis. Luego, podréis regresar a la página para refrescar los conceptos y encontrar ejemplos, así como los códigos. Se trata de una herramienta muy útil a la hora de elegir el tipo de visualización que queremos para nuestros datos."
  },
  {
    "objectID": "tipos.html#distribución",
    "href": "tipos.html#distribución",
    "title": "Tiposde gráfico",
    "section": "Distribución",
    "text": "Distribución\nLos gráficos de distribución son útiles para entender cómo se distribuyen los datos. ¿Cuál categoría es la más frecuente? ¿Los votos en un partido X en las mesas de Sevilla se encuentran concentrados alrededor de la media o varían mucho? Las visualizaciones de este apartado ayudan a responder a dichas preguntas. En este grupo se encuentran los histogramas, los gráficos de densidad, los diagramas de caja (boxplots) o los de violín (violin).\n\nGráficos de barras\nEl gráfico de barras es uno de los más comunes y útiles. Se utiliza para representar la frecuencia de una variable categórica. Por ejemplo, si queremos saber cuántos votos ha obtenido cada partido en una elección, un gráfico de barras es la mejor opción. Esto nos permite comparar los valores y sacar conclusiones y patrones a partir de ellos.\nEl código abajo crea un gráfico de barra para la variable pot_policy de la base de datos de los estados de EE. UU. La variable pot_policy representa la política relacionada a la legalización de la marijuana dominante en cada estado.\nAdemás, para no aburrirnos, también vamos a crear un gráfico de barras polar. Este tipo de gráfico es útil cuando queremos comparar la frecuencia de una variable categórica en un círculo. En este caso, la variable pot_policy se encuentra en el eje x y el eje y representa la frecuencia de cada categoría. Como veréis, se trata del mismo gráfico. Lo único que cambia es el sistema de coordenadas.\n\n\nCode\n# Carga los datos\nlibrary(poliscidata)\n\n# Crea un data.frame d\n# con los datos de los estados\nd &lt;- states\n\n\n# reordena de modo decreciente de \n# la frecuencia\nd$pot_policy &lt;- reorder(\n                       d$pot_policy, \n                       d$pot_policy, \n                       function(x) -length(x))\n\n#\nlibrary(ggplot2)\n\n# 1) Crea la capa de datos\np &lt;- ggplot(data = d)\n\n# 2 ) Añade la capa de estética\np &lt;- p + aes(x=pot_policy) \n\n# 3) Añade la capa de geometría\np &lt;- p + geom_bar()\n\n# Visualiza el gráfico\np\n\n\n\n\n\nCode\n# 4) Añade la capa de coordenadas \n# (en este caso polares)\np + coord_polar()\n\n\n\n\n\n\n\nHistograma\nEl histograma es una visualización muy útil para entender la distribución de una variable cuantitativa. Se divide en intervalos que contienen el número de observaciones (en nuestro caso estados) con valores entre los límites de cada uno de ellos.\nEn el siguiente código, creamos un histograma para la variable pop2010 de la base de datos de los estados de EE. UU. La variable pop2010 representa la población de cada estado en el año 2010.\n\n\nCode\nlibrary(ggplot2)\n\n# Crea el histograma para pop2010\np &lt;- ggplot(d, aes(pop2010))+\n  \n      # Adicional la geometría con 8 intervalos\n      geom_histogram(bins = 8)\n\n# Visualiza\np\n\n\n\n\n\nComo podemos ver, el patrón común de los datos de población se revela: muchos estados con poca población y unos pocos con mucha. Ese comportamiento suele pasar también en municipios, países, etc.\n\n\nDensidad\nEl gráfico de densidad es similar al histograma, pero en lugar de contar el número de observaciones en un intervalo, muestra una curva que representa la densidad de probabilidad de la variable. En otras palabras, el área bajo la curva es igual a 1.\n\n\nCode\nlibrary(ggplot2)\n\n# Crea el gráfico de densidad de pop2010\np &lt;- ggplot(d, aes(pop2010))+\n  \n      # Adiciona la geometría de densidad\n      geom_density()\n\n# Visualiza\np\n\n\n\n\n\nComo vemos, la curva de densidad nos muestra que la mayoría de los estados tienen una población baja, pero hay algunos con una población muy alta. Se trata de la misma información que en el histograma anterior, pero no hay cortes bruscos como los generados por los intervalos. Esa característica evita posibles distorsiones ocasionadas por la elección del número o del tamaño de los intervalos.\n\n\nBoxplot\nOtro gráfico de distribución muy útil es el boxplot. Este gráfico muestra la distribución de una variable cuantitativa a través de cinco estadísticas: el mínimo, el primer cuartil, la mediana, el tercer cuartil y el máximo. Además, también muestra los valores atípicos (outliers). Se emplea para analizar la dispersión y la simetría de los datos. Un diagrama donde las partes son simétricas y la caja resulta muy pequeña indica que los datos están muy concentrados alrededor de la mediana. Por otro lado, una caja grande y asimétrica indica que los datos están dispersos y que hay una mayor dispersión hacia los mayores o menores valores.\nEl gráfico abajo crea un boxplot para la variable que mide el porcentaje de desempleo (unemploy) en cada estado. Para añadir valor, elegimos agrupar los estados por región para saber si existe algún patrón territorial en la distribución del paro en EE. UU.\nLos parámetros fill y group son necesarios para que el gráfico muestre una caja por cada región. En el primer caso, se atribuye un color a cada región y group se encarga de que cada región tenga su propia caja.\n\n\nCode\np &lt;- ggplot(data = d,\n            mapping = aes(x=unemploy, \n                          y=region,\n                          fill=region,\n                          group=region)) + \n        geom_boxplot(width=0.1)\n\np\n\n\n\n\n\nVemos claramente dos patrones. De un lado, se encuentra el Oeste con estados con poco paro y otros con una tasa elevada. La dispersión resulta alta, tanto por los “bigotes” como por el tamaño de la caja. Además, los valores altos se encuentran más dispersos, pues la caja es más grande en la parte derecha. Por otro lado, el Noreste tiene una tasa de paro más concentrada, aunque la dispersión resulta mayor en la parte superior de la caja.\n\n\nViolin plot\nEl violin plot es una combinación de un boxplot y un density plot. Muestra la distribución de una variable cuantitativa y la densidad de probabilidad de la misma. Es útil para comparar distribuciones entre diferentes grupos. En el siguiente gráfico, creamos un violin plot para la variable unemploy (tasa de paro) agrupada por región. Vemos que resulta muy parecido al boxplot anterior, pero con la ventaja de mostrar la densidad de probabilidad de la variable, es decir, dónde se concentran los valores. Aprovechamos para añadir los puntos de cada observación con geom_jitter. Así queda más fácil entender por qué el gráfico tiene la forma que tiene.\n\n\nCode\np &lt;- ggplot(data = d,\n            mapping = aes(x=unemploy, \n                          y=region,\n                          group=region)) + \n        geom_violin()+\n        geom_jitter(aes(color=region))\n\np\n\n\n\n\n\n\n\nLollipop\nEl gráfico de lollipop es una variante del gráfico de barras. En lugar de barras, se utilizan segmentos de línea para representar las frecuencias de las categorías. Es útil cuando se quiere resaltar una categoría en particular. En el siguiente gráfico, creamos un lollipop para la variable abort_rank3, que representa la clasificación de los estados según su legislación sobre el aborto.\nMientras que en los casos anteriores, cada gráfico tenía una sola geometría, en el lollipop se combinan dos: geom_point (punto) y geom_segment (segmento de línea). Esta estrategia resulta muy común en la creación de visualizaciones originales y personalizadas. Dominar la combinación entre geometrías puede ser muy útil para crear gráficos más complejos y atractivos.\n\n\nCode\nlibrary(ggplot2)\n\n# Crea una tabla ordenada con los\n# valores de abort_rank3\ntb &lt;- sort(table(d$abort_rank3))\n\n# La convierte en base de datos\n# para la función ggplot\ntb &lt;- data.frame(tb)\n\n# Crea el gráfico de lollipop\np &lt;- ggplot(tb, \n            aes(y=Var1, \n                x=Freq)) +\n  \n  # Añade los puntos rojos\n  geom_point(color=\"red\") + \n  \n  # Añade los segmentos\n  geom_segment( aes(y=Var1, \n                    yend=Var1, \n                    x=0, \n                    xend=Freq))\n\n# Dibuja el gráfico\np\n\n\n\n\n\n\n\nTreemap\nUn treemap es un gráfico de proporciones representadas por áreas o rectángulos. Cuanto mayor sea el área, mayor será la frecuencia de una categoría dada (representada por un rectángulo). La principal ventaja de los treemaps es que permite representar datos jerárquicos. Por lo tanto, los grupos y subgrupos dentro de ellos pueden visualizarse fácilmente. Además, los treemaps permiten sintetizar muchos datos en un espacio relativamente pequeño.\n\n\nCode\nlibrary(ggplot2)\n\n# Carga el paquete treemapify\nlibrary(treemapify)\n\n# Crea una tabla ordenada con\n# las políticas de control de\n# la marijuana\ntb &lt;- sort(table(d$pot_policy))\n\n# Convierte en base de datos\ntb &lt;- data.frame(tb)\n\n# Crea el treemap usando la\n# geometría geom_treemap()\n# del paquete teemapify\n\n# Inicialmente, define\n# el gráfico con el área, color\n# y etiqueta\np &lt;- ggplot(tb, \n            aes(area = Freq, \n                fill = Var1, \n                label=Var1)) +\n  \n  # Añade la geometría de\n  # treemap al gráfico\n  geom_treemap()\n\n# Visualiza el resultado\np\n\n\n\n\n\n\n\nBeeSwarm\nEl gráfico de beeswarm es una variante del scatter plot que permite visualizar la distribución de una variable cuantitativa en función de una variable categórica. Es útil para comparar la distribución de una variable cuantitativa entre diferentes grupos. En el siguiente gráfico, creamos un beeswarm para la variable pop_65_older (población de 65 años o más) agrupada por el nivel de democracia de los países. Además, añadimos el color según la religión de los países.\nComo vemos, también se parece mucho al violin plot anterior. Sin embargo, el beeswarm tiene la ventaja de mostrar cada observación individual, lo que puede ser útil para detectar patrones o valores atípicos. Además, resulta más atractivo visualmente, pues los puntos no se superponen y se distribuyen de forma más uniforme. En este caso, añadimos la religión como información adicional para intentar encontrar algún patrón en los datos.\n\n\nCode\nw &lt;- world\n\n# Carga los paquetes necesarios\nlibrary(ggplot2)        \nlibrary(ggbeeswarm)      \n\n# Crea el gráfico con el nivel de democracia\n# y la población de 65 años o más\n# con color según la religión\np &lt;- ggplot(data = w,\n            mapping = aes(x=dem_level4, \n                          y=pop_65_older, \n                          color=religoin)) \n\n# Añadimos la geometría: geom_quasirandom()\np &lt;- p + geom_quasirandom(size=1.5)\n\n# Visualizamos los resultados\np\n\n\n\n\n\nComo vemos, las poblaciones de las democracias plenas presentan una mayor proporción de personas de 65 años o más. La autocracia, por otro lado, presenta una población más joven. Además, parece que la religión predominantes en los países con mayor proporción de personas de 65 años y más democráticos es el cristianismo, mientras que los más jóvenes y autoritarios son en su mayor parte de mayoría musulmana.\n\n\nRidge Plot\nEl gráfico de ridge es una variante del density plot que permite visualizar la distribución de una variable cuantitativa en función de una variable categórica. Es útil para comparar la distribución de una variable cuantitativa entre diferentes grupos. En el siguiente gráfico, creamos un ridge para la variable frac_eth (fracción de etnias) agrupada por la religión de los países.\n\n\nCode\n# Carga los paquetes\nlibrary(ggplot2)\nlibrary(ggridges)\n\n# Crea el gráfico\n# con la relación entre \n# fraccionamiento étnico y religión\np &lt;- ggplot(w,\n            aes(x=frac_eth, \n                y=religoin, \n                fill=religoin))\n\n# Añade la capa de geometría\np &lt;- p + geom_density_ridges()\n\n# Visualiza los resultados\np\n\n\n\n\n\nComo vemos, la distribución de la fracción étnica varía según la religión predominante en los países. Los países con mayoría musulmana presentan una mayor fracción étnica, mientras que los países con mayoría católica presentan una menor fracción étnica. Además, los países con mayoría musulmana presentan una distribución más dispersa, mientras que los países con mayoría budista presentan una distribución más concentrada. La categoría “otros cristianos” presenta una distribución más dispersa, con dos picos.\n\n\nRaincloud Chart\nEl gráfico de raincloud resulta muy divertido. Combina un violin plot, un box plot y un scatter plot en un solo gráfico. Se llama así, porque las curvas de densidad se asemejan a nubes y los puntos dispersos representados abajo parecen gotas de lluvia. Como en versiones anteriores que hemos elaborado más arriba, tenemos una representación sintética (una curva que describe la densidad o el comportamiento de los datos) y unos puntos que representa la posición aproximada de cada observación. En el siguiente gráfico, creamos un raincloud para la variable pop_65_older (población de 65 años o más) agrupada por el nivel de democracia de los países.\n\n\nCode\n# Carga los paquetes\nlibrary(ggplot2)\nlibrary(ggridges)\n\n# Creamos el gráfico, los datos son w, y las\n# variables: y=dem_level4 y x=pop_65_older,\n# el color es fill=dem_level4\np &lt;- ggplot(w,\n       aes(y = dem_level4, \n           x = pop_65_older, \n           fill = dem_level4)) \n\n# Ahora adiciona la geometría, \n# que incorpora los pujntos y\n# las líneas que identifica los\n# cuartiles\np &lt;- p + geom_density_ridges(\n              jittered_points = TRUE,\n              position = \"raincloud\",\n              alpha=0.6,                            \n              quantile_lines = TRUE)\n\n# Visualiza el resultado\np"
  },
  {
    "objectID": "tipos.html#asociación-o-correlación",
    "href": "tipos.html#asociación-o-correlación",
    "title": "Tiposde gráfico",
    "section": "Asociación o correlación",
    "text": "Asociación o correlación\nLos gráficos de asociación o correlación son útiles para visualizar la relación entre dos o más variables cuantitativas. Nos ayudan a identificar los vínculos entre fenómenos medidos de forma continua y formular hipótesis sobre su relación.\n\nDiagrama de dispersión\nUn diagrama de dispersión o scatterplot es una de las formas más sencillas y efectivas de visualizar la relación entre dos variables cuantitativas. Cada punto en el gráfico representa una observación y su posición en los ejes x e y indica los valores de las dos variables. Resulta tan común que su interpretación es bastante intuitiva. Permite, además, que añadamos dos o tres variables más, como el color, el tamaño o la forma de los puntos, para representar información adicional.\nEn el siguiente ejemplo, creamos un diagrama de dispersión para visualizar la relación entre la variable hdi (índice de desarrollo humano) y la variable dem_score14 (puntuación de democracia). Además, coloreamos los puntos según la religión mayoritaria (religoin), cada continente (regionun) estará representado por una forma distinta y definiremos el tamaño empleando el porcentaje de personas con 65 años o más (pop_65_older).\n\n\nCode\nlibrary(ggplot2)\n\n# Crea el gráfico\np &lt;- ggplot(w)\n\n# Capa estética con la religión\n# como color\np &lt;- p+ aes(x=hdi, \n            y=dem_score14,\n            color=religoin,\n            size=pop_65_older,\n            shape=regionun)\n\n\n# Capa geométrica\np &lt;- p +geom_point()\n\n# Visualiza el gráfico\np\n\n\n\n\n\nTenemos un gráfico verdaderamente horrible. No obstante, solo quería demostraros que es posible añadir más de dos variables a un diagrama de dispersión. En este caso, tenemos cinco: desarrollo humano, democracia, continente, religión y porcentaje de personas mayores de 65 años. Aunque se pueda hacer, como habéis visto, ni siempre es recomendable o útil. En este caso, la visualización resulta confusa y poco informativa. Por tanto, es mejor limitar el número de variables a dos o tres para que el gráfico sea más fácil de interpretar:\n\n\nCode\nlibrary(ggplot2)\n\n# Crea el gráfico\np &lt;- ggplot(w)\n\n# Capa estética con la religión\n# como color\np &lt;- p+ aes(x=hdi, \n            y=dem_score14,\n            color=religoin)\n\n\n# Capa geométrica\np &lt;- p +geom_point()\n\n# Visualiza el gráfico\np\n\n\n\n\n\n\n\nCorrelograma\n¿Qué pasa cuando queremos comparar el grado de asociación entre muchas variables cuantitativas de una sola vez? En este caso, el correlograma es una herramienta muy útil. Un correlograma es una matriz en la que cada celda representa el coeficiente de correlación entre dos variables. Los valores de la correlación pueden variar entre -1 y 1. Un valor de 1 indica una correlación positiva perfecta, un valor de -1 indica una correlación negativa perfecta y un valor de 0 indica que no hay correlación entre las variables. Los correlogramas son útiles para identificar patrones de correlación entre variables y seleccionar las variables más relevantes para un análisis más detallado.\nEn el siguiente ejemplo, creamos un correlograma para visualizar la correlación entre las variables gini10, dem_score14, literacy, lifeex_total, hdi, pop_urban, frac_eth y gdppcap08.\n\n\nCode\n# Carga el paquete necesario\nlibrary(ggcorrplot)\n\n# Crea una lista de variables\n# de interés\nvar &lt;- c(\"gini10\",\"dem_score14\",\n         \"literacy\",\"lifeex_total\",\n         \"hdi\",\"pop_urban\",\"frac_eth\",\n         \"gdppcap08\")\n\n# Calcula la matriz de correlación\ncorr &lt;- round(cor(w[,var], \n                  use=\"pairwise.complete.obs\"), \n              3)\n\n# Visualiza los resultados\nggcorrplot(corr, \n           lab_size = 3,\n           show.diag = F,\n           hc.order = T,\n           lab=T)\n\n\n\n\n\nEl patrón que emerge resulta claro: el fraccionamiento étnico (frac_eth) y el índice de desigualdad de renta (gini10) están negativamente correlacionados con todas las demás variables (que presentan una asociación positiva). Es decir, la fraccionalización étnica y la desigualdad no “casan” muy bien con la riqueza (gdppcap08), la urbanización (pop_urban), el desarrollo humano (hdi), la esperanza de vida (lifeex_total), la alfabetización (literacy) o la democracia (dem_score14)."
  },
  {
    "objectID": "tipos.html#conexión",
    "href": "tipos.html#conexión",
    "title": "Tiposde gráfico",
    "section": "Conexión",
    "text": "Conexión\nLos gráficos de conexión son útiles para visualizar datos de red. Nos permiten representar las relaciones entre diferentes entidades (nodos) y las interacciones entre ellas (vínculos). Los gráficos de conexión son útiles para visualizar flujos de información, rutas de transporte, relaciones comerciales, interpersonales, etc.\n\nRed\nUn gráfico de red o sociograma es una representación visual de una red social. Se compone de dos unidades básicas: los nodos (o vértices) y los vínculos (o aristas). Los nodos son los puntos de la red y pueden representar a individuos, organizaciones, países, ciudades, etc. Los vínculos son las conexiones entre ellos y pueden señalar relaciones de amistad, colaboración, intercambio. Puede ser una red de ciudades, de empresas, de personas, de páginas web, entre muchos otras aplicaciones.\nEn el siguiente ejemplo, creamos un gráfico de red para visualizar los flujos de visitas de la presidenta Dilma Rousseff entre diferentes ciudades de Brasil durante el mes anterior a las elecciónes presidenciales de 2014. La base de datos contiene información sobre el número de visitas entre diferentes ciudades, así como el número total de viajes realizados. Se ha obtenido a partir del análisis de los periódicos que cubrieron la campaña electoral.\n\n\nCode\n# Abre la base de datos\ndi &lt;- read.delim(\"https://www.dropbox.com/s/r8309gzg3rymajr/Visitas_Dilma_redux.csv?dl=1\", \n                 sep=\";\", \n                 dec=\",\")\n\n# Seleccoiona las variables\ndi &lt;- unique(di[,c(\"NOM_O\",\"NOM_D\",\n                   \"FREQ\",\"VISITS\")])\n\n\nnames(di) &lt;- c(\"Origen\",\"Destino\",\n               \"Viajes\",\"Visitas\")\n\n\n# Carga los paquetes\nlibrary(ggplot2)\nlibrary(ggnetwork)\n\n# Convierte la base de datos\n# en un layout de red\nn &lt;- ggnetwork(di)\n\n# Crea el gráfico con las\n# capas de datos y estética\np &lt;- ggplot(n, \n       aes(x = x, \n           y = y, \n           xend = xend, \n           yend = yend))\n\n# Añade la capa de vínculos (aristas)\np &lt;- p + geom_edges(\n          aes(size=Viajes),\n               color = \"red3\", \n               alpha=0.1,           \n               curvature = 0.25)    \n\n# Ahora, añade los puntos (nodos)\n# a la red anterior\np &lt;- p + geom_nodes(aes(size=Visitas), \n            color=\"red3\")\n\n# Adiciona los nombres de las ciudades\np &lt;- p + geom_nodetext_repel(\n  aes(\n    label = vertex.names))\n\n# Elimina el tema y la leyenda\np &lt;- p + theme_blank() +\n         theme(legend.position = \"none\")\n\n# Visualiza los resultados\np\n\n\n\n\n\nSe observa que la candidata se desplaza principalmente entre las ciudades de São Paulo, Brasília, Río de Janeiro y Porto Alegre. Los constantes regresos a Brasília revelan la necesidad de conciliar las agendas de candidata con la de presidenta. Río y São Paulo, por su parte, son los principales centros económicos y políticos del país, mientras que Porto Alegre es la ciudad natal de la candidata. Vemos también que ha visitado otras ciudades, pero estas ocupan un lugar más periférico en la red."
  },
  {
    "objectID": "tipos.html#tiempo-flujo-evolución",
    "href": "tipos.html#tiempo-flujo-evolución",
    "title": "Tiposde gráfico",
    "section": "Tiempo / Flujo / Evolución",
    "text": "Tiempo / Flujo / Evolución\nLos gráficos de tiempo o flujo son útiles para visualizar la evolución de una variable a lo largo del tiempo. Nos permiten identificar tendencias, patrones y ciclos en los datos. Entre las aplicaciones posibles encontramos las series temporales, flujos de información, movimientos de población, entre otros.\nPrepara la base de Brasil\n\n\nCode\nYear &lt;- c(1985:2019)\n\nGini &lt;- c(55.6,58.5,59.7,61.4,63.3,60.5,60.3,60.2,60.1,59.9,59.6,59.9,59.8,59.6,59.0,58.7,58.4,58.1,57.6,56.5,56.3,55.6,54.9,54.0,53.7,53.3,52.9,53.4,52.7,52.0,51.9,53.3,53.3,53.9,53.5)\n\nAdministration &lt;- c(\"Sarney\",\"Sarney\",\"Sarney\",\"Sarney\",\"Sarney\",\"Collor\",\"Collor\",\"Collor\",\"Itamar\",\"Itamar\",\"FHC\",\"FHC\",\"FHC\",\"FHC\",\"FHC\",\"FHC\",\"FHC\",\"FHC\",\"Lula\",\"Lula\",\"Lula\",\"Lula\",\"Lula\",\"Lula\",\"Lula\",\"Lula\",\"Dilma\",\"Dilma\",\"Dilma\",\"Dilma\",\"Dilma\",\"Dilma\",\"Temer\",\"Temer\",\"Bolsonaro\")\n\nGrowth &lt;- c(7.9,7.5,3.5,-0.1,3.2,-4.4,1.0,-0.5,4.9,5.9,4.2,2.2,3.4,0.3,0.5,4.4,1.4,3.1,1.1,5.8,3.2,4.0,6.1,5.1,-0.1,7.5,4.0,1.9,3.0,0.5,-3.5,-3.3,1.3,1.8,1.2)\n\nGDP &lt;- c(836,898,930,930,959,917,927,922,967,1024,1067,1090,1127,1131,1137,1186,1203,1240,1254,1326,1368,1423,1509,1586,1584,1703,1771,1805,1859,1868,1802,1743,1766,1798,1820)\n\nbr &lt;- data.frame(Year=Year, \n                 GDP=GDP, \n                 Growth=Growth, \n                 Gini=Gini, \n                 Administration=Administration)\n\n\nbrs &lt;- data.frame()\n\nfor(i in 1:nrow(br)){\n  \n  if (i&lt;nrow(br)){\n    k &lt;- i+1\n  }else{\n    k &lt;- i\n  }\n  \n  brs &lt;- rbind(brs,\n               data.frame(\n                      x1=br$Year[i],\n                    xend=br$Year[k],\n                      y1=br$Gini[i],\n                      yend=br$Gini[k],\n Administration=br$Administration[i])\n              )\n  \n}\n\nbrs2 &lt;- data.frame()\n\nfor(i in 1:nrow(br)){\n  \n  if (i&lt;nrow(br)){\n    k &lt;- i+1\n  }else{\n    k &lt;- i\n  }\n  \n  brs2 &lt;- rbind(brs2,\n               data.frame(\n                      x1=br$GDP[i],\n                    xend=br$GDP[k],\n                      y1=br$Gini[i],\n                      yend=br$Gini[k],\n Administration=br$Administration[i],\n                      Year=Year[i])\n              )\n  \n}\n\n\n\nLínea\nEl gráfico de líneas es una de las formas más comunes de visualizar datos temporales. Se compone de dos ejes: el eje horizontal representa el tiempo y el eje vertical la variable de interés. Se utiliza para visualizar la evolución de una variable a lo largo del tiempo, identificar tendencias, patrones y ciclos.\nEl código abajo muestra cómo crear un gráfico de líneas para visualizar la evolución del índice de desigualdad de renta en Brasil entre 1985 y 2019. La base de datos contiene información sobre el índice de Gini en Brasil, así como el año correspondiente. Se ha obtenido a partir de la base de datos del Banco Mundial.\n\n\nCode\n# Prepara el gráfico\np &lt;- ggplot(br, \n            aes(x=Year, y=Gini))+\n      geom_line()\n\n# Visualiza los resultados\np\n\n\n\n\n\n\n\nConnected scatterplot\nEl gráfico de dispersión conectado es una variante del gráfico de líneas que permite visualizar la relación entre dos variables a lo largo del tiempo. Se trata de conectar los puntos por medio de segmentos de línea para resaltar la evolución de la variable en el tiempo. El gráfico abajo muestra la evolución de la desigualdad en Brasil entre 1985 y 2019, pero ahora, marca los cambios de gobierno en el país.\n\n\nCode\n# Carga los paquetes\nlibrary(ggplot2)\nlibrary(ggrepel)\n\n# Crea el gráfico\np &lt;- ggplot(brs, \n            aes(x=Year, \n                y=Gini,\n                fill=Administration))\n\n# Añade segmentos de línea para\n# cada gobierno\np &lt;- p + geom_segment(\n                      aes(x=x1,\n                          xend=xend,\n                          y=y1,\n                          yend=yend,\n                          color=Administration))\n\n\n# Visualiza los resultados\np\n\n\n\n\n\n\n\nArea\nEl gráfico de área es una variante del gráfico de líneas que rellena el área entre la línea y el eje horizontal. El cambio puede parecer insignificante, pero posibilita la percepción de cambios importantes en volúmenes. En el ejemplo abajo, se muestra la evolución del crecimiento económico en Brasil entre 1985 y 2019.\n\n\nCode\n# Carga los paquetes\nlibrary(ggplot2)\n\n# Prepara el gráfico\np &lt;- ggplot(br, \n            aes(y=Growth, \n                x=Year))+\n      geom_area(fill=\"darkgreen\")\n\n\n# Visualiza los resultados\np\n\n\n\n\n\n\n\nDumbbell\nEl gráfico de pesas rusas (dumbbell) es una variante del gráfico de líneas que permite visualizar la evolución de dos variables a lo largo del tiempo. Se compone de dos o más puntos conectados por un segmento de línea. Es útil para comparar dos valores en diferentes momentos y visualizar la evolución de la variable en el tiempo. El gráfico abajo muestra la evolución de la proporción de la riqueza concentrada por el 10% más rico de en los países de América Latina en 2000, 2010 y 2019.\nPrimero, prepara los datos:\n\n\nCode\nlibrary(vdemdata)\n\ndem&lt;- vdem\n\ndm &lt;- dem[,c(\"country_name\",\"year\",\"v2x_polyarchy\",\"v2x_libdem\",\"v2x_partipdem\",\"v2x_delibdem\",\"v2x_egaldem\")]\n\nnames(dm) &lt;- c(\"Country\",\"Year\",\"Electoral\",\"Liberal\",\"Participative\",\"Deliberative\",\"Egalitarian\")\n\n\nco &lt;- c(\"Argentina\",\"Bolivia\",\"Brazil\",\"Chile\",\"Colombia\",\"Costa Rica\",\"Dominican Republic\",\"Ecuador\",\"Honduras\",\"Mexico\",\"Panama\",\"Peru\",\"Paraguay\",\"El Salvador\",\"Uruguay\")\n\ndml &lt;- dm[dm$Country%in%c(co,\"Nicaragua\",\"Venezuela\"),]\n\nye &lt;- c(rep(2000,length(co)),rep(2010,length(co)),\n        rep(2020,length(co)))\n\ntop &lt;- c(37.7,47.8,47,42.6,47,35.7,40.2,45.9,41.9,42,43.2,36.8,42.1,39,35.4,31.7,36.9,42.2,38.2,43.4,36.8,36.5,37.5,40.2,37.1,39.7,34.2,40.5,33.2,33.6,30.3,32.6,39.4,35.8,42.2,37,30.5,36,34.6,35.5,38,32.9,33.3,29.8,29.9)\n\nlat &lt;- data.frame(Country=c(co,co,co), Year=as.character(ye), Share=top)\n\n\nLuego, el gráfico:\n\n\nCode\n# Carga los paquetes\nlibrary(ggplot2)\n\n# Obtiene el orden de los países según\n# la proporción de riqueza apropiada por\n# los 10% más ricos (de los más a los menos).\nlevels &lt;- lat[\n              order(\n                lat$Share[lat$Year==2000], \n                decreasing = T),\n              c(\"Country\")]\n\n# Reordena la base de datos según los niveles\n# obtenidos en 2000 (esto es importante para que el \n# gráfico salga bonito y fácil de interpretar)\nlat$Country &lt;- factor(lat$Country, \n                      levels=levels)\n\n# Genera el gráfico\np &lt;- ggplot(lat,\n            aes(y=Country, \n                x=Share))\n\n# Adiciona los segmentos de línea\n# conectando cada período\np &lt;- p + geom_line(color=\"grey85\")\n\n# Añade puntos y los colorea de\n# acuerdo al año (Year)\np &lt;- p + geom_point(aes(color=Year))\n\n# Visualiza los resultados\np\n\n\n\n\n\nSe observa que la mayoría de los países han experimentado una reducción en la concentración de la riqueza en manos del 10% más rico, con excepción de Costa Rica, que ha experimentado un aumento en el mismo período. Resulta notable el caso de Bolivia, que ha experimentado una reducción significativa en la concentración de la riqueza en manos del 10% más rico en el período analizado, que pasa de ser el país más desigual al quinto menos desigual en la región en 2020."
  },
  {
    "objectID": "tipos.html#espacio",
    "href": "tipos.html#espacio",
    "title": "Tiposde gráfico",
    "section": "Espacio",
    "text": "Espacio\nLos gráficos espaciales son útiles para visualizar la distribución geográfica de una variable. Nos permiten identificar patrones, tendencias y relaciones espaciales en los datos. Entre las aplicaciones posibles encontramos la distribución de la población, la concentración de la riqueza, la distribución de la pobreza, entre otros.\n\nMapa de coropletas\nUn mapa de coropletas es una forma de visualización espacial que consiste en colorear áreas geográficas de acuerdo a una variable de interés. Es útil para visualizar la distribución geográfica de una variable y compararla entre diferentes áreas. En el ejemplo abajo, se muestra la distribución de los condados de Carolina del Norte según su área. Los condados más grandes se muestran en tonos más oscuros, mientras que los más pequeños aparecen más claros.\n\n\nCode\n# Carga los paquetes\nlibrary(ggthemes)\nlibrary(ggplot2)\nlibrary(sf)\n\n# Carga los datos de\n# los condados de Carolina \n# del Norte\nnc &lt;- st_read(system.file(\"shape/nc.shp\", \n                          package = \"sf\"), \n              quiet = TRUE)\n\n# Crea el gráfico y lo colorea\n# según el área\ngg &lt;- ggplot(nc) +\n  geom_sf(aes(fill = AREA))\n  \n# Visualiza los resultados  \ngg"
  }
]